id: Microsoft.Owin
language: CSharp
name:
  Default: Microsoft.Owin
qualifiedName:
  Default: Microsoft.Owin
type: Assembly
modifiers: {}
items:
- id: Microsoft.Owin
  commentId: N:Microsoft.Owin
  language: CSharp
  name:
    CSharp: Microsoft.Owin
    VB: Microsoft.Owin
  nameWithType:
    CSharp: Microsoft.Owin
    VB: Microsoft.Owin
  qualifiedName:
    CSharp: Microsoft.Owin
    VB: Microsoft.Owin
  type: Namespace
  assemblies:
  - Microsoft.Owin
  modifiers: {}
  items:
  - id: Microsoft.Owin.IReadableStringCollection
    commentId: T:Microsoft.Owin.IReadableStringCollection
    language: CSharp
    name:
      CSharp: IReadableStringCollection
      VB: IReadableStringCollection
    nameWithType:
      CSharp: IReadableStringCollection
      VB: IReadableStringCollection
    qualifiedName:
      CSharp: Microsoft.Owin.IReadableStringCollection
      VB: Microsoft.Owin.IReadableStringCollection
    type: Interface
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public interface IReadableStringCollection : IEnumerable<KeyValuePair<string, string[]>>, IEnumerable'
        VB: >-
          Public Interface IReadableStringCollection

              Inherits IEnumerable(Of KeyValuePair(Of String, String())), IEnumerable
    inheritedMembers:
    - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.GetEnumerator
    - System.Collections.IEnumerable.GetEnumerator
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Microsoft.Owin.IReadableStringCollection.Get(System.String)
      commentId: M:Microsoft.Owin.IReadableStringCollection.Get(System.String)
      language: CSharp
      name:
        CSharp: Get(String)
        VB: Get(String)
      nameWithType:
        CSharp: IReadableStringCollection.Get(String)
        VB: IReadableStringCollection.Get(String)
      qualifiedName:
        CSharp: Microsoft.Owin.IReadableStringCollection.Get(System.String)
        VB: Microsoft.Owin.IReadableStringCollection.Get(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string Get(string key)
          VB: Function Get(key As String) As String
        parameters:
        - id: key
          type: System.String
        return:
          type: System.String
      overload: Microsoft.Owin.IReadableStringCollection.Get*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IReadableStringCollection.GetValues(System.String)
      commentId: M:Microsoft.Owin.IReadableStringCollection.GetValues(System.String)
      language: CSharp
      name:
        CSharp: GetValues(String)
        VB: GetValues(String)
      nameWithType:
        CSharp: IReadableStringCollection.GetValues(String)
        VB: IReadableStringCollection.GetValues(String)
      qualifiedName:
        CSharp: Microsoft.Owin.IReadableStringCollection.GetValues(System.String)
        VB: Microsoft.Owin.IReadableStringCollection.GetValues(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IList<string> GetValues(string key)
          VB: Function GetValues(key As String) As IList(Of String)
        parameters:
        - id: key
          type: System.String
        return:
          type: System.Collections.Generic.IList{System.String}
      overload: Microsoft.Owin.IReadableStringCollection.GetValues*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IReadableStringCollection.Item(System.String)
      commentId: P:Microsoft.Owin.IReadableStringCollection.Item(System.String)
      language: CSharp
      name:
        CSharp: Item[String]
        VB: Item(String)
      nameWithType:
        CSharp: IReadableStringCollection.Item[String]
        VB: IReadableStringCollection.Item(String)
      qualifiedName:
        CSharp: Microsoft.Owin.IReadableStringCollection.Item[System.String]
        VB: Microsoft.Owin.IReadableStringCollection.Item(System.String)
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string this[string key] { get; }
          VB: ReadOnly Property Item(key As String) As String
        parameters:
        - id: key
          type: System.String
        return:
          type: System.String
      overload: Microsoft.Owin.IReadableStringCollection.Item*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
  - id: Microsoft.Owin.ReadableStringCollection
    commentId: T:Microsoft.Owin.ReadableStringCollection
    language: CSharp
    name:
      CSharp: ReadableStringCollection
      VB: ReadableStringCollection
    nameWithType:
      CSharp: ReadableStringCollection
      VB: ReadableStringCollection
    qualifiedName:
      CSharp: Microsoft.Owin.ReadableStringCollection
      VB: Microsoft.Owin.ReadableStringCollection
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public class ReadableStringCollection : IReadableStringCollection, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable'
        VB: >-
          Public Class ReadableStringCollection

              Implements IReadableStringCollection, IEnumerable(Of KeyValuePair(Of String, String())), IEnumerable
    inheritance:
    - System.Object
    implements:
    - Microsoft.Owin.IReadableStringCollection
    - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
    - System.Collections.IEnumerable
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.ReadableStringCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String[]})
      commentId: M:Microsoft.Owin.ReadableStringCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String[]})
      language: CSharp
      name:
        CSharp: ReadableStringCollection(IDictionary<String, String[]>)
        VB: ReadableStringCollection(IDictionary(Of String, String()))
      nameWithType:
        CSharp: ReadableStringCollection.ReadableStringCollection(IDictionary<String, String[]>)
        VB: ReadableStringCollection.ReadableStringCollection(IDictionary(Of String, String()))
      qualifiedName:
        CSharp: Microsoft.Owin.ReadableStringCollection.ReadableStringCollection(System.Collections.Generic.IDictionary<System.String, System.String[]>)
        VB: Microsoft.Owin.ReadableStringCollection.ReadableStringCollection(System.Collections.Generic.IDictionary(Of System.String, System.String()))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public ReadableStringCollection(IDictionary<string, string[]> store)
          VB: Public Sub New(store As IDictionary(Of String, String()))
        parameters:
        - id: store
          type: System.Collections.Generic.IDictionary{System.String,System.String[]}
      overload: Microsoft.Owin.ReadableStringCollection.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.ReadableStringCollection.Get(System.String)
      commentId: M:Microsoft.Owin.ReadableStringCollection.Get(System.String)
      language: CSharp
      name:
        CSharp: Get(String)
        VB: Get(String)
      nameWithType:
        CSharp: ReadableStringCollection.Get(String)
        VB: ReadableStringCollection.Get(String)
      qualifiedName:
        CSharp: Microsoft.Owin.ReadableStringCollection.Get(System.String)
        VB: Microsoft.Owin.ReadableStringCollection.Get(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string Get(string key)
          VB: Public Function Get(key As String) As String
        parameters:
        - id: key
          type: System.String
        return:
          type: System.String
      overload: Microsoft.Owin.ReadableStringCollection.Get*
      implements:
      - Microsoft.Owin.IReadableStringCollection.Get(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.ReadableStringCollection.GetValues(System.String)
      commentId: M:Microsoft.Owin.ReadableStringCollection.GetValues(System.String)
      language: CSharp
      name:
        CSharp: GetValues(String)
        VB: GetValues(String)
      nameWithType:
        CSharp: ReadableStringCollection.GetValues(String)
        VB: ReadableStringCollection.GetValues(String)
      qualifiedName:
        CSharp: Microsoft.Owin.ReadableStringCollection.GetValues(System.String)
        VB: Microsoft.Owin.ReadableStringCollection.GetValues(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IList<string> GetValues(string key)
          VB: Public Function GetValues(key As String) As IList(Of String)
        parameters:
        - id: key
          type: System.String
        return:
          type: System.Collections.Generic.IList{System.String}
      overload: Microsoft.Owin.ReadableStringCollection.GetValues*
      implements:
      - Microsoft.Owin.IReadableStringCollection.GetValues(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.ReadableStringCollection.GetEnumerator
      commentId: M:Microsoft.Owin.ReadableStringCollection.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: ReadableStringCollection.GetEnumerator()
        VB: ReadableStringCollection.GetEnumerator()
      qualifiedName:
        CSharp: Microsoft.Owin.ReadableStringCollection.GetEnumerator()
        VB: Microsoft.Owin.ReadableStringCollection.GetEnumerator()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IEnumerator<KeyValuePair<string, string[]>> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of String, String()))
        return:
          type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
      overload: Microsoft.Owin.ReadableStringCollection.GetEnumerator*
      implements:
      - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.GetEnumerator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - isEii: true
      id: Microsoft.Owin.ReadableStringCollection.System#Collections#IEnumerable#GetEnumerator
      commentId: M:Microsoft.Owin.ReadableStringCollection.System#Collections#IEnumerable#GetEnumerator
      language: CSharp
      name:
        CSharp: IEnumerable.GetEnumerator()
        VB: System.Collections.IEnumerable.GetEnumerator()
      nameWithType:
        CSharp: ReadableStringCollection.IEnumerable.GetEnumerator()
        VB: ReadableStringCollection.System.Collections.IEnumerable.GetEnumerator()
      qualifiedName:
        CSharp: Microsoft.Owin.ReadableStringCollection.System.Collections.IEnumerable.GetEnumerator()
        VB: Microsoft.Owin.ReadableStringCollection.System.Collections.IEnumerable.GetEnumerator()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IEnumerator IEnumerable.GetEnumerator()
          VB: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: Microsoft.Owin.ReadableStringCollection.System#Collections#IEnumerable#GetEnumerator*
      implements:
      - System.Collections.IEnumerable.GetEnumerator
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.ReadableStringCollection.Item(System.String)
      commentId: P:Microsoft.Owin.ReadableStringCollection.Item(System.String)
      language: CSharp
      name:
        CSharp: Item[String]
        VB: Item(String)
      nameWithType:
        CSharp: ReadableStringCollection.Item[String]
        VB: ReadableStringCollection.Item(String)
      qualifiedName:
        CSharp: Microsoft.Owin.ReadableStringCollection.Item[System.String]
        VB: Microsoft.Owin.ReadableStringCollection.Item(System.String)
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string this[string key] { get; }
          VB: Public ReadOnly Property Item(key As String) As String
        parameters:
        - id: key
          type: System.String
        return:
          type: System.String
      overload: Microsoft.Owin.ReadableStringCollection.Item*
      implements:
      - Microsoft.Owin.IReadableStringCollection.Item(System.String)
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.Owin.IFormCollection
    commentId: T:Microsoft.Owin.IFormCollection
    language: CSharp
    name:
      CSharp: IFormCollection
      VB: IFormCollection
    nameWithType:
      CSharp: IFormCollection
      VB: IFormCollection
    qualifiedName:
      CSharp: Microsoft.Owin.IFormCollection
      VB: Microsoft.Owin.IFormCollection
    type: Interface
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public interface IFormCollection : IReadableStringCollection, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable'
        VB: >-
          Public Interface IFormCollection

              Inherits IReadableStringCollection, IEnumerable(Of KeyValuePair(Of String, String())), IEnumerable
    inheritedMembers:
    - Microsoft.Owin.IReadableStringCollection.Get(System.String)
    - Microsoft.Owin.IReadableStringCollection.GetValues(System.String)
    - Microsoft.Owin.IReadableStringCollection.Item(System.String)
    - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.GetEnumerator
    - System.Collections.IEnumerable.GetEnumerator
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items: []
  - id: Microsoft.Owin.FormCollection
    commentId: T:Microsoft.Owin.FormCollection
    language: CSharp
    name:
      CSharp: FormCollection
      VB: FormCollection
    nameWithType:
      CSharp: FormCollection
      VB: FormCollection
    qualifiedName:
      CSharp: Microsoft.Owin.FormCollection
      VB: Microsoft.Owin.FormCollection
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public class FormCollection : ReadableStringCollection, IFormCollection, IReadableStringCollection, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable'
        VB: >-
          Public Class FormCollection

              Inherits ReadableStringCollection

              Implements IFormCollection, IReadableStringCollection, IEnumerable(Of KeyValuePair(Of String, String())), IEnumerable
    inheritance:
    - System.Object
    - Microsoft.Owin.ReadableStringCollection
    implements:
    - Microsoft.Owin.IFormCollection
    - Microsoft.Owin.IReadableStringCollection
    - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
    - System.Collections.IEnumerable
    inheritedMembers:
    - Microsoft.Owin.ReadableStringCollection.Get(System.String)
    - Microsoft.Owin.ReadableStringCollection.GetValues(System.String)
    - Microsoft.Owin.ReadableStringCollection.GetEnumerator
    - Microsoft.Owin.ReadableStringCollection.System#Collections#IEnumerable#GetEnumerator
    - Microsoft.Owin.ReadableStringCollection.Item(System.String)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.FormCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String[]})
      commentId: M:Microsoft.Owin.FormCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String[]})
      language: CSharp
      name:
        CSharp: FormCollection(IDictionary<String, String[]>)
        VB: FormCollection(IDictionary(Of String, String()))
      nameWithType:
        CSharp: FormCollection.FormCollection(IDictionary<String, String[]>)
        VB: FormCollection.FormCollection(IDictionary(Of String, String()))
      qualifiedName:
        CSharp: Microsoft.Owin.FormCollection.FormCollection(System.Collections.Generic.IDictionary<System.String, System.String[]>)
        VB: Microsoft.Owin.FormCollection.FormCollection(System.Collections.Generic.IDictionary(Of System.String, System.String()))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public FormCollection(IDictionary<string, string[]> store)
          VB: Public Sub New(store As IDictionary(Of String, String()))
        parameters:
        - id: store
          type: System.Collections.Generic.IDictionary{System.String,System.String[]}
      overload: Microsoft.Owin.FormCollection.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Microsoft.Owin.IHeaderDictionary
    commentId: T:Microsoft.Owin.IHeaderDictionary
    language: CSharp
    name:
      CSharp: IHeaderDictionary
      VB: IHeaderDictionary
    nameWithType:
      CSharp: IHeaderDictionary
      VB: IHeaderDictionary
    qualifiedName:
      CSharp: Microsoft.Owin.IHeaderDictionary
      VB: Microsoft.Owin.IHeaderDictionary
    type: Interface
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public interface IHeaderDictionary : IReadableStringCollection, IDictionary<string, string[]>, ICollection<KeyValuePair<string, string[]>>, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable'
        VB: >-
          Public Interface IHeaderDictionary

              Inherits IReadableStringCollection, IDictionary(Of String, String()), ICollection(Of KeyValuePair(Of String, String())), IEnumerable(Of KeyValuePair(Of String, String())), IEnumerable
    inheritedMembers:
    - Microsoft.Owin.IReadableStringCollection.Get(System.String)
    - Microsoft.Owin.IReadableStringCollection.GetValues(System.String)
    - System.Collections.Generic.IDictionary{System.String,System.String[]}.ContainsKey(System.String)
    - System.Collections.Generic.IDictionary{System.String,System.String[]}.Add(System.String,System.String[])
    - System.Collections.Generic.IDictionary{System.String,System.String[]}.Remove(System.String)
    - System.Collections.Generic.IDictionary{System.String,System.String[]}.TryGetValue(System.String,System.String[]@)
    - System.Collections.Generic.IDictionary{System.String,System.String[]}.Item(System.String)
    - System.Collections.Generic.IDictionary{System.String,System.String[]}.Keys
    - System.Collections.Generic.IDictionary{System.String,System.String[]}.Values
    - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Add(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
    - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Clear
    - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Contains(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
    - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String[]}[],System.Int32)
    - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Remove(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
    - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Count
    - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.IsReadOnly
    - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.GetEnumerator
    - System.Collections.IEnumerable.GetEnumerator
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues(System.String)
      commentId: M:Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues(System.String)
      language: CSharp
      name:
        CSharp: GetCommaSeparatedValues(String)
        VB: GetCommaSeparatedValues(String)
      nameWithType:
        CSharp: IHeaderDictionary.GetCommaSeparatedValues(String)
        VB: IHeaderDictionary.GetCommaSeparatedValues(String)
      qualifiedName:
        CSharp: Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues(System.String)
        VB: Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IList<string> GetCommaSeparatedValues(string key)
          VB: Function GetCommaSeparatedValues(key As String) As IList(Of String)
        parameters:
        - id: key
          type: System.String
        return:
          type: System.Collections.Generic.IList{System.String}
      overload: Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IHeaderDictionary.Append(System.String,System.String)
      commentId: M:Microsoft.Owin.IHeaderDictionary.Append(System.String,System.String)
      language: CSharp
      name:
        CSharp: Append(String, String)
        VB: Append(String, String)
      nameWithType:
        CSharp: IHeaderDictionary.Append(String, String)
        VB: IHeaderDictionary.Append(String, String)
      qualifiedName:
        CSharp: Microsoft.Owin.IHeaderDictionary.Append(System.String, System.String)
        VB: Microsoft.Owin.IHeaderDictionary.Append(System.String, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void Append(string key, string value)
          VB: Sub Append(key As String, value As String)
        parameters:
        - id: key
          type: System.String
        - id: value
          type: System.String
      overload: Microsoft.Owin.IHeaderDictionary.Append*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IHeaderDictionary.AppendValues(System.String,System.String[])
      commentId: M:Microsoft.Owin.IHeaderDictionary.AppendValues(System.String,System.String[])
      language: CSharp
      name:
        CSharp: AppendValues(String, String[])
        VB: AppendValues(String, String())
      nameWithType:
        CSharp: IHeaderDictionary.AppendValues(String, String[])
        VB: IHeaderDictionary.AppendValues(String, String())
      qualifiedName:
        CSharp: Microsoft.Owin.IHeaderDictionary.AppendValues(System.String, System.String[])
        VB: Microsoft.Owin.IHeaderDictionary.AppendValues(System.String, System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void AppendValues(string key, params string[] values)
          VB: Sub AppendValues(key As String, ParamArray values As String())
        parameters:
        - id: key
          type: System.String
        - id: values
          type: System.String[]
      overload: Microsoft.Owin.IHeaderDictionary.AppendValues*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues(System.String,System.String[])
      commentId: M:Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues(System.String,System.String[])
      language: CSharp
      name:
        CSharp: AppendCommaSeparatedValues(String, String[])
        VB: AppendCommaSeparatedValues(String, String())
      nameWithType:
        CSharp: IHeaderDictionary.AppendCommaSeparatedValues(String, String[])
        VB: IHeaderDictionary.AppendCommaSeparatedValues(String, String())
      qualifiedName:
        CSharp: Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues(System.String, System.String[])
        VB: Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues(System.String, System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void AppendCommaSeparatedValues(string key, params string[] values)
          VB: Sub AppendCommaSeparatedValues(key As String, ParamArray values As String())
        parameters:
        - id: key
          type: System.String
        - id: values
          type: System.String[]
      overload: Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IHeaderDictionary.Set(System.String,System.String)
      commentId: M:Microsoft.Owin.IHeaderDictionary.Set(System.String,System.String)
      language: CSharp
      name:
        CSharp: Set(String, String)
        VB: Set(String, String)
      nameWithType:
        CSharp: IHeaderDictionary.Set(String, String)
        VB: IHeaderDictionary.Set(String, String)
      qualifiedName:
        CSharp: Microsoft.Owin.IHeaderDictionary.Set(System.String, System.String)
        VB: Microsoft.Owin.IHeaderDictionary.Set(System.String, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void Set(string key, string value)
          VB: Sub Set(key As String, value As String)
        parameters:
        - id: key
          type: System.String
        - id: value
          type: System.String
      overload: Microsoft.Owin.IHeaderDictionary.Set*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IHeaderDictionary.SetValues(System.String,System.String[])
      commentId: M:Microsoft.Owin.IHeaderDictionary.SetValues(System.String,System.String[])
      language: CSharp
      name:
        CSharp: SetValues(String, String[])
        VB: SetValues(String, String())
      nameWithType:
        CSharp: IHeaderDictionary.SetValues(String, String[])
        VB: IHeaderDictionary.SetValues(String, String())
      qualifiedName:
        CSharp: Microsoft.Owin.IHeaderDictionary.SetValues(System.String, System.String[])
        VB: Microsoft.Owin.IHeaderDictionary.SetValues(System.String, System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void SetValues(string key, params string[] values)
          VB: Sub SetValues(key As String, ParamArray values As String())
        parameters:
        - id: key
          type: System.String
        - id: values
          type: System.String[]
      overload: Microsoft.Owin.IHeaderDictionary.SetValues*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues(System.String,System.String[])
      commentId: M:Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues(System.String,System.String[])
      language: CSharp
      name:
        CSharp: SetCommaSeparatedValues(String, String[])
        VB: SetCommaSeparatedValues(String, String())
      nameWithType:
        CSharp: IHeaderDictionary.SetCommaSeparatedValues(String, String[])
        VB: IHeaderDictionary.SetCommaSeparatedValues(String, String())
      qualifiedName:
        CSharp: Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues(System.String, System.String[])
        VB: Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues(System.String, System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void SetCommaSeparatedValues(string key, params string[] values)
          VB: Sub SetCommaSeparatedValues(key As String, ParamArray values As String())
        parameters:
        - id: key
          type: System.String
        - id: values
          type: System.String[]
      overload: Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IHeaderDictionary.Item(System.String)
      commentId: P:Microsoft.Owin.IHeaderDictionary.Item(System.String)
      language: CSharp
      name:
        CSharp: Item[String]
        VB: Item(String)
      nameWithType:
        CSharp: IHeaderDictionary.Item[String]
        VB: IHeaderDictionary.Item(String)
      qualifiedName:
        CSharp: Microsoft.Owin.IHeaderDictionary.Item[System.String]
        VB: Microsoft.Owin.IHeaderDictionary.Item(System.String)
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string this[string key] { get; set; }
          VB: Property Item(key As String) As String
        parameters:
        - id: key
          type: System.String
        return:
          type: System.String
      overload: Microsoft.Owin.IHeaderDictionary.Item*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
  - id: Microsoft.Owin.HeaderDictionary
    commentId: T:Microsoft.Owin.HeaderDictionary
    language: CSharp
    name:
      CSharp: HeaderDictionary
      VB: HeaderDictionary
    nameWithType:
      CSharp: HeaderDictionary
      VB: HeaderDictionary
    qualifiedName:
      CSharp: Microsoft.Owin.HeaderDictionary
      VB: Microsoft.Owin.HeaderDictionary
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public class HeaderDictionary : IHeaderDictionary, IReadableStringCollection, IDictionary<string, string[]>, ICollection<KeyValuePair<string, string[]>>, IEnumerable<KeyValuePair<string, string[]>>, IEnumerable'
        VB: >-
          Public Class HeaderDictionary

              Implements IHeaderDictionary, IReadableStringCollection, IDictionary(Of String, String()), ICollection(Of KeyValuePair(Of String, String())), IEnumerable(Of KeyValuePair(Of String, String())), IEnumerable
    inheritance:
    - System.Object
    implements:
    - Microsoft.Owin.IHeaderDictionary
    - Microsoft.Owin.IReadableStringCollection
    - System.Collections.Generic.IDictionary{System.String,System.String[]}
    - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
    - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
    - System.Collections.IEnumerable
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.HeaderDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.String[]})
      commentId: M:Microsoft.Owin.HeaderDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.String[]})
      language: CSharp
      name:
        CSharp: HeaderDictionary(IDictionary<String, String[]>)
        VB: HeaderDictionary(IDictionary(Of String, String()))
      nameWithType:
        CSharp: HeaderDictionary.HeaderDictionary(IDictionary<String, String[]>)
        VB: HeaderDictionary.HeaderDictionary(IDictionary(Of String, String()))
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.HeaderDictionary(System.Collections.Generic.IDictionary<System.String, System.String[]>)
        VB: Microsoft.Owin.HeaderDictionary.HeaderDictionary(System.Collections.Generic.IDictionary(Of System.String, System.String()))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public HeaderDictionary(IDictionary<string, string[]> store)
          VB: Public Sub New(store As IDictionary(Of String, String()))
        parameters:
        - id: store
          type: System.Collections.Generic.IDictionary{System.String,System.String[]}
      overload: Microsoft.Owin.HeaderDictionary.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - isEii: true
      id: Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#get_Item(System.String)
      commentId: M:Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#get_Item(System.String)
      language: CSharp
      name:
        CSharp: IDictionary<String, String[]>.get_Item(String)
        VB: System.Collections.Generic.IDictionary<System.String,System.String[]>.get_Item(String)
      nameWithType:
        CSharp: HeaderDictionary.IDictionary<String, String[]>.get_Item(String)
        VB: HeaderDictionary.System.Collections.Generic.IDictionary<System.String,System.String[]>.get_Item(String)
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.System.Collections.Generic.IDictionary<System.String, System.String[]>.get_Item(System.String)
        VB: Microsoft.Owin.HeaderDictionary.System.Collections.Generic.IDictionary<System.String,System.String[]>.get_Item(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string[] IDictionary<string, string[]>.get_Item(string key)
          VB: Function System.Collections.Generic.IDictionary<System.String,System.String[]>.get_Item(key As String) As String() Implements IDictionary(Of String, String()).get_Item
        parameters:
        - id: key
          type: System.String
        return:
          type: System.String[]
      overload: Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#get_Item*
      implements:
      - System.Collections.Generic.IDictionary{System.String,System.String[]}.get_Item(System.String)
      modifiers:
        CSharp: []
        VB: []
    - isEii: true
      id: Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#set_Item(System.String,System.String[])
      commentId: M:Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#set_Item(System.String,System.String[])
      language: CSharp
      name:
        CSharp: IDictionary<String, String[]>.set_Item(String, String[])
        VB: System.Collections.Generic.IDictionary<System.String,System.String[]>.set_Item(String, String())
      nameWithType:
        CSharp: HeaderDictionary.IDictionary<String, String[]>.set_Item(String, String[])
        VB: HeaderDictionary.System.Collections.Generic.IDictionary<System.String,System.String[]>.set_Item(String, String())
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.System.Collections.Generic.IDictionary<System.String, System.String[]>.set_Item(System.String, System.String[])
        VB: Microsoft.Owin.HeaderDictionary.System.Collections.Generic.IDictionary<System.String,System.String[]>.set_Item(System.String, System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void IDictionary<string, string[]>.set_Item(string key, string[] value)
          VB: Sub System.Collections.Generic.IDictionary<System.String,System.String[]>.set_Item(key As String, value As String()) Implements IDictionary(Of String, String()).set_Item
        parameters:
        - id: key
          type: System.String
        - id: value
          type: System.String[]
      overload: Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#set_Item*
      implements:
      - System.Collections.Generic.IDictionary{System.String,System.String[]}.set_Item(System.String,System.String[])
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.HeaderDictionary.GetEnumerator
      commentId: M:Microsoft.Owin.HeaderDictionary.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: HeaderDictionary.GetEnumerator()
        VB: HeaderDictionary.GetEnumerator()
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.GetEnumerator()
        VB: Microsoft.Owin.HeaderDictionary.GetEnumerator()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IEnumerator<KeyValuePair<string, string[]>> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of String, String()))
        return:
          type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
      overload: Microsoft.Owin.HeaderDictionary.GetEnumerator*
      implements:
      - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.GetEnumerator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - isEii: true
      id: Microsoft.Owin.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator
      commentId: M:Microsoft.Owin.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator
      language: CSharp
      name:
        CSharp: IEnumerable.GetEnumerator()
        VB: System.Collections.IEnumerable.GetEnumerator()
      nameWithType:
        CSharp: HeaderDictionary.IEnumerable.GetEnumerator()
        VB: HeaderDictionary.System.Collections.IEnumerable.GetEnumerator()
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.System.Collections.IEnumerable.GetEnumerator()
        VB: Microsoft.Owin.HeaderDictionary.System.Collections.IEnumerable.GetEnumerator()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IEnumerator IEnumerable.GetEnumerator()
          VB: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: Microsoft.Owin.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator*
      implements:
      - System.Collections.IEnumerable.GetEnumerator
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.HeaderDictionary.Get(System.String)
      commentId: M:Microsoft.Owin.HeaderDictionary.Get(System.String)
      language: CSharp
      name:
        CSharp: Get(String)
        VB: Get(String)
      nameWithType:
        CSharp: HeaderDictionary.Get(String)
        VB: HeaderDictionary.Get(String)
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.Get(System.String)
        VB: Microsoft.Owin.HeaderDictionary.Get(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string Get(string key)
          VB: Public Function Get(key As String) As String
        parameters:
        - id: key
          type: System.String
        return:
          type: System.String
      overload: Microsoft.Owin.HeaderDictionary.Get*
      implements:
      - Microsoft.Owin.IReadableStringCollection.Get(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.GetValues(System.String)
      commentId: M:Microsoft.Owin.HeaderDictionary.GetValues(System.String)
      language: CSharp
      name:
        CSharp: GetValues(String)
        VB: GetValues(String)
      nameWithType:
        CSharp: HeaderDictionary.GetValues(String)
        VB: HeaderDictionary.GetValues(String)
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.GetValues(System.String)
        VB: Microsoft.Owin.HeaderDictionary.GetValues(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IList<string> GetValues(string key)
          VB: Public Function GetValues(key As String) As IList(Of String)
        parameters:
        - id: key
          type: System.String
        return:
          type: System.Collections.Generic.IList{System.String}
      overload: Microsoft.Owin.HeaderDictionary.GetValues*
      implements:
      - Microsoft.Owin.IReadableStringCollection.GetValues(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.GetCommaSeparatedValues(System.String)
      commentId: M:Microsoft.Owin.HeaderDictionary.GetCommaSeparatedValues(System.String)
      language: CSharp
      name:
        CSharp: GetCommaSeparatedValues(String)
        VB: GetCommaSeparatedValues(String)
      nameWithType:
        CSharp: HeaderDictionary.GetCommaSeparatedValues(String)
        VB: HeaderDictionary.GetCommaSeparatedValues(String)
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.GetCommaSeparatedValues(System.String)
        VB: Microsoft.Owin.HeaderDictionary.GetCommaSeparatedValues(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IList<string> GetCommaSeparatedValues(string key)
          VB: Public Function GetCommaSeparatedValues(key As String) As IList(Of String)
        parameters:
        - id: key
          type: System.String
        return:
          type: System.Collections.Generic.IList{System.String}
      overload: Microsoft.Owin.HeaderDictionary.GetCommaSeparatedValues*
      implements:
      - Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.Append(System.String,System.String)
      commentId: M:Microsoft.Owin.HeaderDictionary.Append(System.String,System.String)
      language: CSharp
      name:
        CSharp: Append(String, String)
        VB: Append(String, String)
      nameWithType:
        CSharp: HeaderDictionary.Append(String, String)
        VB: HeaderDictionary.Append(String, String)
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.Append(System.String, System.String)
        VB: Microsoft.Owin.HeaderDictionary.Append(System.String, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void Append(string key, string value)
          VB: Public Sub Append(key As String, value As String)
        parameters:
        - id: key
          type: System.String
        - id: value
          type: System.String
      overload: Microsoft.Owin.HeaderDictionary.Append*
      implements:
      - Microsoft.Owin.IHeaderDictionary.Append(System.String,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.AppendValues(System.String,System.String[])
      commentId: M:Microsoft.Owin.HeaderDictionary.AppendValues(System.String,System.String[])
      language: CSharp
      name:
        CSharp: AppendValues(String, String[])
        VB: AppendValues(String, String())
      nameWithType:
        CSharp: HeaderDictionary.AppendValues(String, String[])
        VB: HeaderDictionary.AppendValues(String, String())
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.AppendValues(System.String, System.String[])
        VB: Microsoft.Owin.HeaderDictionary.AppendValues(System.String, System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void AppendValues(string key, params string[] values)
          VB: Public Sub AppendValues(key As String, ParamArray values As String())
        parameters:
        - id: key
          type: System.String
        - id: values
          type: System.String[]
      overload: Microsoft.Owin.HeaderDictionary.AppendValues*
      implements:
      - Microsoft.Owin.IHeaderDictionary.AppendValues(System.String,System.String[])
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.AppendCommaSeparatedValues(System.String,System.String[])
      commentId: M:Microsoft.Owin.HeaderDictionary.AppendCommaSeparatedValues(System.String,System.String[])
      language: CSharp
      name:
        CSharp: AppendCommaSeparatedValues(String, String[])
        VB: AppendCommaSeparatedValues(String, String())
      nameWithType:
        CSharp: HeaderDictionary.AppendCommaSeparatedValues(String, String[])
        VB: HeaderDictionary.AppendCommaSeparatedValues(String, String())
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.AppendCommaSeparatedValues(System.String, System.String[])
        VB: Microsoft.Owin.HeaderDictionary.AppendCommaSeparatedValues(System.String, System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void AppendCommaSeparatedValues(string key, params string[] values)
          VB: Public Sub AppendCommaSeparatedValues(key As String, ParamArray values As String())
        parameters:
        - id: key
          type: System.String
        - id: values
          type: System.String[]
      overload: Microsoft.Owin.HeaderDictionary.AppendCommaSeparatedValues*
      implements:
      - Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues(System.String,System.String[])
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.Set(System.String,System.String)
      commentId: M:Microsoft.Owin.HeaderDictionary.Set(System.String,System.String)
      language: CSharp
      name:
        CSharp: Set(String, String)
        VB: Set(String, String)
      nameWithType:
        CSharp: HeaderDictionary.Set(String, String)
        VB: HeaderDictionary.Set(String, String)
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.Set(System.String, System.String)
        VB: Microsoft.Owin.HeaderDictionary.Set(System.String, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void Set(string key, string value)
          VB: Public Sub Set(key As String, value As String)
        parameters:
        - id: key
          type: System.String
        - id: value
          type: System.String
      overload: Microsoft.Owin.HeaderDictionary.Set*
      implements:
      - Microsoft.Owin.IHeaderDictionary.Set(System.String,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.SetValues(System.String,System.String[])
      commentId: M:Microsoft.Owin.HeaderDictionary.SetValues(System.String,System.String[])
      language: CSharp
      name:
        CSharp: SetValues(String, String[])
        VB: SetValues(String, String())
      nameWithType:
        CSharp: HeaderDictionary.SetValues(String, String[])
        VB: HeaderDictionary.SetValues(String, String())
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.SetValues(System.String, System.String[])
        VB: Microsoft.Owin.HeaderDictionary.SetValues(System.String, System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void SetValues(string key, params string[] values)
          VB: Public Sub SetValues(key As String, ParamArray values As String())
        parameters:
        - id: key
          type: System.String
        - id: values
          type: System.String[]
      overload: Microsoft.Owin.HeaderDictionary.SetValues*
      implements:
      - Microsoft.Owin.IHeaderDictionary.SetValues(System.String,System.String[])
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.SetCommaSeparatedValues(System.String,System.String[])
      commentId: M:Microsoft.Owin.HeaderDictionary.SetCommaSeparatedValues(System.String,System.String[])
      language: CSharp
      name:
        CSharp: SetCommaSeparatedValues(String, String[])
        VB: SetCommaSeparatedValues(String, String())
      nameWithType:
        CSharp: HeaderDictionary.SetCommaSeparatedValues(String, String[])
        VB: HeaderDictionary.SetCommaSeparatedValues(String, String())
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.SetCommaSeparatedValues(System.String, System.String[])
        VB: Microsoft.Owin.HeaderDictionary.SetCommaSeparatedValues(System.String, System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void SetCommaSeparatedValues(string key, params string[] values)
          VB: Public Sub SetCommaSeparatedValues(key As String, ParamArray values As String())
        parameters:
        - id: key
          type: System.String
        - id: values
          type: System.String[]
      overload: Microsoft.Owin.HeaderDictionary.SetCommaSeparatedValues*
      implements:
      - Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues(System.String,System.String[])
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.Add(System.String,System.String[])
      commentId: M:Microsoft.Owin.HeaderDictionary.Add(System.String,System.String[])
      language: CSharp
      name:
        CSharp: Add(String, String[])
        VB: Add(String, String())
      nameWithType:
        CSharp: HeaderDictionary.Add(String, String[])
        VB: HeaderDictionary.Add(String, String())
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.Add(System.String, System.String[])
        VB: Microsoft.Owin.HeaderDictionary.Add(System.String, System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void Add(string key, string[] value)
          VB: Public Sub Add(key As String, value As String())
        parameters:
        - id: key
          type: System.String
        - id: value
          type: System.String[]
      overload: Microsoft.Owin.HeaderDictionary.Add*
      implements:
      - System.Collections.Generic.IDictionary{System.String,System.String[]}.Add(System.String,System.String[])
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.ContainsKey(System.String)
      commentId: M:Microsoft.Owin.HeaderDictionary.ContainsKey(System.String)
      language: CSharp
      name:
        CSharp: ContainsKey(String)
        VB: ContainsKey(String)
      nameWithType:
        CSharp: HeaderDictionary.ContainsKey(String)
        VB: HeaderDictionary.ContainsKey(String)
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.ContainsKey(System.String)
        VB: Microsoft.Owin.HeaderDictionary.ContainsKey(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool ContainsKey(string key)
          VB: Public Function ContainsKey(key As String) As Boolean
        parameters:
        - id: key
          type: System.String
        return:
          type: System.Boolean
      overload: Microsoft.Owin.HeaderDictionary.ContainsKey*
      implements:
      - System.Collections.Generic.IDictionary{System.String,System.String[]}.ContainsKey(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.Remove(System.String)
      commentId: M:Microsoft.Owin.HeaderDictionary.Remove(System.String)
      language: CSharp
      name:
        CSharp: Remove(String)
        VB: Remove(String)
      nameWithType:
        CSharp: HeaderDictionary.Remove(String)
        VB: HeaderDictionary.Remove(String)
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.Remove(System.String)
        VB: Microsoft.Owin.HeaderDictionary.Remove(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool Remove(string key)
          VB: Public Function Remove(key As String) As Boolean
        parameters:
        - id: key
          type: System.String
        return:
          type: System.Boolean
      overload: Microsoft.Owin.HeaderDictionary.Remove*
      implements:
      - System.Collections.Generic.IDictionary{System.String,System.String[]}.Remove(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.TryGetValue(System.String,System.String[]@)
      commentId: M:Microsoft.Owin.HeaderDictionary.TryGetValue(System.String,System.String[]@)
      language: CSharp
      name:
        CSharp: TryGetValue(String, out String[])
        VB: TryGetValue(String, ByRef String())
      nameWithType:
        CSharp: HeaderDictionary.TryGetValue(String, out String[])
        VB: HeaderDictionary.TryGetValue(String, ByRef String())
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.TryGetValue(System.String, out System.String[])
        VB: Microsoft.Owin.HeaderDictionary.TryGetValue(System.String, ByRef System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool TryGetValue(string key, out string[] value)
          VB: Public Function TryGetValue(key As String, ByRef value As String()) As Boolean
        parameters:
        - id: key
          type: System.String
        - id: value
          type: System.String[]
        return:
          type: System.Boolean
      overload: Microsoft.Owin.HeaderDictionary.TryGetValue*
      implements:
      - System.Collections.Generic.IDictionary{System.String,System.String[]}.TryGetValue(System.String,System.String[]@)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
      commentId: M:Microsoft.Owin.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
      language: CSharp
      name:
        CSharp: Add(KeyValuePair<String, String[]>)
        VB: Add(KeyValuePair(Of String, String()))
      nameWithType:
        CSharp: HeaderDictionary.Add(KeyValuePair<String, String[]>)
        VB: HeaderDictionary.Add(KeyValuePair(Of String, String()))
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair<System.String, System.String[]>)
        VB: Microsoft.Owin.HeaderDictionary.Add(System.Collections.Generic.KeyValuePair(Of System.String, System.String()))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void Add(KeyValuePair<string, string[]> item)
          VB: Public Sub Add(item As KeyValuePair(Of String, String()))
        parameters:
        - id: item
          type: System.Collections.Generic.KeyValuePair{System.String,System.String[]}
      overload: Microsoft.Owin.HeaderDictionary.Add*
      implements:
      - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Add(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.Clear
      commentId: M:Microsoft.Owin.HeaderDictionary.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: HeaderDictionary.Clear()
        VB: HeaderDictionary.Clear()
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.Clear()
        VB: Microsoft.Owin.HeaderDictionary.Clear()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void Clear()
          VB: Public Sub Clear
      overload: Microsoft.Owin.HeaderDictionary.Clear*
      implements:
      - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Clear
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
      commentId: M:Microsoft.Owin.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
      language: CSharp
      name:
        CSharp: Contains(KeyValuePair<String, String[]>)
        VB: Contains(KeyValuePair(Of String, String()))
      nameWithType:
        CSharp: HeaderDictionary.Contains(KeyValuePair<String, String[]>)
        VB: HeaderDictionary.Contains(KeyValuePair(Of String, String()))
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair<System.String, System.String[]>)
        VB: Microsoft.Owin.HeaderDictionary.Contains(System.Collections.Generic.KeyValuePair(Of System.String, System.String()))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool Contains(KeyValuePair<string, string[]> item)
          VB: Public Function Contains(item As KeyValuePair(Of String, String())) As Boolean
        parameters:
        - id: item
          type: System.Collections.Generic.KeyValuePair{System.String,System.String[]}
        return:
          type: System.Boolean
      overload: Microsoft.Owin.HeaderDictionary.Contains*
      implements:
      - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Contains(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String[]}[],System.Int32)
      commentId: M:Microsoft.Owin.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String[]}[],System.Int32)
      language: CSharp
      name:
        CSharp: CopyTo(KeyValuePair<String, String[]>[], Int32)
        VB: CopyTo(KeyValuePair(Of String, String())(), Int32)
      nameWithType:
        CSharp: HeaderDictionary.CopyTo(KeyValuePair<String, String[]>[], Int32)
        VB: HeaderDictionary.CopyTo(KeyValuePair(Of String, String())(), Int32)
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.String[]>[], System.Int32)
        VB: Microsoft.Owin.HeaderDictionary.CopyTo(System.Collections.Generic.KeyValuePair(Of System.String, System.String())(), System.Int32)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void CopyTo(KeyValuePair<string, string[]>[] array, int arrayIndex)
          VB: Public Sub CopyTo(array As KeyValuePair(Of String, String())(), arrayIndex As Integer)
        parameters:
        - id: array
          type: System.Collections.Generic.KeyValuePair{System.String,System.String[]}[]
        - id: arrayIndex
          type: System.Int32
      overload: Microsoft.Owin.HeaderDictionary.CopyTo*
      implements:
      - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String[]}[],System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
      commentId: M:Microsoft.Owin.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
      language: CSharp
      name:
        CSharp: Remove(KeyValuePair<String, String[]>)
        VB: Remove(KeyValuePair(Of String, String()))
      nameWithType:
        CSharp: HeaderDictionary.Remove(KeyValuePair<String, String[]>)
        VB: HeaderDictionary.Remove(KeyValuePair(Of String, String()))
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair<System.String, System.String[]>)
        VB: Microsoft.Owin.HeaderDictionary.Remove(System.Collections.Generic.KeyValuePair(Of System.String, System.String()))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool Remove(KeyValuePair<string, string[]> item)
          VB: Public Function Remove(item As KeyValuePair(Of String, String())) As Boolean
        parameters:
        - id: item
          type: System.Collections.Generic.KeyValuePair{System.String,System.String[]}
        return:
          type: System.Boolean
      overload: Microsoft.Owin.HeaderDictionary.Remove*
      implements:
      - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Remove(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HeaderDictionary.Keys
      commentId: P:Microsoft.Owin.HeaderDictionary.Keys
      language: CSharp
      name:
        CSharp: Keys
        VB: Keys
      nameWithType:
        CSharp: HeaderDictionary.Keys
        VB: HeaderDictionary.Keys
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.Keys
        VB: Microsoft.Owin.HeaderDictionary.Keys
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public ICollection<string> Keys { get; }
          VB: Public ReadOnly Property Keys As ICollection(Of String)
        parameters: []
        return:
          type: System.Collections.Generic.ICollection{System.String}
      overload: Microsoft.Owin.HeaderDictionary.Keys*
      implements:
      - System.Collections.Generic.IDictionary{System.String,System.String[]}.Keys
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.HeaderDictionary.Values
      commentId: P:Microsoft.Owin.HeaderDictionary.Values
      language: CSharp
      name:
        CSharp: Values
        VB: Values
      nameWithType:
        CSharp: HeaderDictionary.Values
        VB: HeaderDictionary.Values
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.Values
        VB: Microsoft.Owin.HeaderDictionary.Values
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public ICollection<string[]> Values { get; }
          VB: Public ReadOnly Property Values As ICollection(Of String())
        parameters: []
        return:
          type: System.Collections.Generic.ICollection{System.String[]}
      overload: Microsoft.Owin.HeaderDictionary.Values*
      implements:
      - System.Collections.Generic.IDictionary{System.String,System.String[]}.Values
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.HeaderDictionary.Count
      commentId: P:Microsoft.Owin.HeaderDictionary.Count
      language: CSharp
      name:
        CSharp: Count
        VB: Count
      nameWithType:
        CSharp: HeaderDictionary.Count
        VB: HeaderDictionary.Count
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.Count
        VB: Microsoft.Owin.HeaderDictionary.Count
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public int Count { get; }
          VB: Public ReadOnly Property Count As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Microsoft.Owin.HeaderDictionary.Count*
      implements:
      - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Count
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.HeaderDictionary.IsReadOnly
      commentId: P:Microsoft.Owin.HeaderDictionary.IsReadOnly
      language: CSharp
      name:
        CSharp: IsReadOnly
        VB: IsReadOnly
      nameWithType:
        CSharp: HeaderDictionary.IsReadOnly
        VB: HeaderDictionary.IsReadOnly
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.IsReadOnly
        VB: Microsoft.Owin.HeaderDictionary.IsReadOnly
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool IsReadOnly { get; }
          VB: Public ReadOnly Property IsReadOnly As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Microsoft.Owin.HeaderDictionary.IsReadOnly*
      implements:
      - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.IsReadOnly
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.HeaderDictionary.Item(System.String)
      commentId: P:Microsoft.Owin.HeaderDictionary.Item(System.String)
      language: CSharp
      name:
        CSharp: Item[String]
        VB: Item(String)
      nameWithType:
        CSharp: HeaderDictionary.Item[String]
        VB: HeaderDictionary.Item(String)
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.Item[System.String]
        VB: Microsoft.Owin.HeaderDictionary.Item(System.String)
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string this[string key] { get; set; }
          VB: Public Property Item(key As String) As String
        parameters:
        - id: key
          type: System.String
        return:
          type: System.String
      overload: Microsoft.Owin.HeaderDictionary.Item*
      implements:
      - Microsoft.Owin.IHeaderDictionary.Item(System.String)
      - Microsoft.Owin.IReadableStringCollection.Item(System.String)
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - isEii: true
      id: Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#Item(System.String)
      commentId: P:Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#Item(System.String)
      language: CSharp
      name:
        CSharp: IDictionary<String, String[]>.Item[String]
        VB: System.Collections.Generic.IDictionary<System.String,System.String[]>.Item(String)
      nameWithType:
        CSharp: HeaderDictionary.IDictionary<String, String[]>.Item[String]
        VB: HeaderDictionary.System.Collections.Generic.IDictionary<System.String,System.String[]>.Item(String)
      qualifiedName:
        CSharp: Microsoft.Owin.HeaderDictionary.System.Collections.Generic.IDictionary<System.String, System.String[]>.Item[System.String]
        VB: Microsoft.Owin.HeaderDictionary.System.Collections.Generic.IDictionary<System.String,System.String[]>.Item(System.String)
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string[] IDictionary<string, string[]>.this[] { get; set; }
          VB: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<System.String,System.String[]>.Item(key As String) As String() Implements IDictionary(Of String, String()).this[]
        parameters:
        - id: key
          type: System.String
        return:
          type: System.String[]
      overload: Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#Item*
      implements:
      - System.Collections.Generic.IDictionary{System.String,System.String[]}.Item(System.String)
      modifiers:
        CSharp:
        - get
        - set
        VB: []
  - id: Microsoft.Owin.HostString
    commentId: T:Microsoft.Owin.HostString
    language: CSharp
    name:
      CSharp: HostString
      VB: HostString
    nameWithType:
      CSharp: HostString
      VB: HostString
    qualifiedName:
      CSharp: Microsoft.Owin.HostString
      VB: Microsoft.Owin.HostString
    type: Struct
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public struct HostString : IEquatable<HostString>'
        VB: >-
          Public Structure HostString

              Implements IEquatable(Of HostString)
    implements:
    - System.IEquatable{Microsoft.Owin.HostString}
    inheritedMembers:
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Microsoft.Owin.HostString.#ctor(System.String)
      commentId: M:Microsoft.Owin.HostString.#ctor(System.String)
      language: CSharp
      name:
        CSharp: HostString(String)
        VB: HostString(String)
      nameWithType:
        CSharp: HostString.HostString(String)
        VB: HostString.HostString(String)
      qualifiedName:
        CSharp: Microsoft.Owin.HostString.HostString(System.String)
        VB: Microsoft.Owin.HostString.HostString(System.String)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public HostString(string value)
          VB: Public Sub New(value As String)
        parameters:
        - id: value
          type: System.String
      overload: Microsoft.Owin.HostString.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HostString.ToString
      commentId: M:Microsoft.Owin.HostString.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: HostString.ToString()
        VB: HostString.ToString()
      qualifiedName:
        CSharp: Microsoft.Owin.HostString.ToString()
        VB: Microsoft.Owin.HostString.ToString()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Microsoft.Owin.HostString.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.HostString.ToUriComponent
      commentId: M:Microsoft.Owin.HostString.ToUriComponent
      language: CSharp
      name:
        CSharp: ToUriComponent()
        VB: ToUriComponent()
      nameWithType:
        CSharp: HostString.ToUriComponent()
        VB: HostString.ToUriComponent()
      qualifiedName:
        CSharp: Microsoft.Owin.HostString.ToUriComponent()
        VB: Microsoft.Owin.HostString.ToUriComponent()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string ToUriComponent()
          VB: Public Function ToUriComponent As String
        return:
          type: System.String
      overload: Microsoft.Owin.HostString.ToUriComponent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HostString.FromUriComponent(System.String)
      commentId: M:Microsoft.Owin.HostString.FromUriComponent(System.String)
      language: CSharp
      name:
        CSharp: FromUriComponent(String)
        VB: FromUriComponent(String)
      nameWithType:
        CSharp: HostString.FromUriComponent(String)
        VB: HostString.FromUriComponent(String)
      qualifiedName:
        CSharp: Microsoft.Owin.HostString.FromUriComponent(System.String)
        VB: Microsoft.Owin.HostString.FromUriComponent(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static HostString FromUriComponent(string uriComponent)
          VB: Public Shared Function FromUriComponent(uriComponent As String) As HostString
        parameters:
        - id: uriComponent
          type: System.String
        return:
          type: Microsoft.Owin.HostString
      overload: Microsoft.Owin.HostString.FromUriComponent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.HostString.FromUriComponent(System.Uri)
      commentId: M:Microsoft.Owin.HostString.FromUriComponent(System.Uri)
      language: CSharp
      name:
        CSharp: FromUriComponent(Uri)
        VB: FromUriComponent(Uri)
      nameWithType:
        CSharp: HostString.FromUriComponent(Uri)
        VB: HostString.FromUriComponent(Uri)
      qualifiedName:
        CSharp: Microsoft.Owin.HostString.FromUriComponent(System.Uri)
        VB: Microsoft.Owin.HostString.FromUriComponent(System.Uri)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static HostString FromUriComponent(Uri uri)
          VB: Public Shared Function FromUriComponent(uri As Uri) As HostString
        parameters:
        - id: uri
          type: System.Uri
        return:
          type: Microsoft.Owin.HostString
      overload: Microsoft.Owin.HostString.FromUriComponent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.HostString.Equals(Microsoft.Owin.HostString)
      commentId: M:Microsoft.Owin.HostString.Equals(Microsoft.Owin.HostString)
      language: CSharp
      name:
        CSharp: Equals(HostString)
        VB: Equals(HostString)
      nameWithType:
        CSharp: HostString.Equals(HostString)
        VB: HostString.Equals(HostString)
      qualifiedName:
        CSharp: Microsoft.Owin.HostString.Equals(Microsoft.Owin.HostString)
        VB: Microsoft.Owin.HostString.Equals(Microsoft.Owin.HostString)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool Equals(HostString other)
          VB: Public Function Equals(other As HostString) As Boolean
        parameters:
        - id: other
          type: Microsoft.Owin.HostString
        return:
          type: System.Boolean
      overload: Microsoft.Owin.HostString.Equals*
      implements:
      - System.IEquatable{Microsoft.Owin.HostString}.Equals(Microsoft.Owin.HostString)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.HostString.Equals(System.Object)
      commentId: M:Microsoft.Owin.HostString.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: HostString.Equals(Object)
        VB: HostString.Equals(Object)
      qualifiedName:
        CSharp: Microsoft.Owin.HostString.Equals(System.Object)
        VB: Microsoft.Owin.HostString.Equals(System.Object)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Microsoft.Owin.HostString.Equals*
      overridden: System.ValueType.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.HostString.GetHashCode
      commentId: M:Microsoft.Owin.HostString.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: HostString.GetHashCode()
        VB: HostString.GetHashCode()
      qualifiedName:
        CSharp: Microsoft.Owin.HostString.GetHashCode()
        VB: Microsoft.Owin.HostString.GetHashCode()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Microsoft.Owin.HostString.GetHashCode*
      overridden: System.ValueType.GetHashCode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.HostString.op_Equality(Microsoft.Owin.HostString,Microsoft.Owin.HostString)
      commentId: M:Microsoft.Owin.HostString.op_Equality(Microsoft.Owin.HostString,Microsoft.Owin.HostString)
      language: CSharp
      name:
        CSharp: Equality(HostString, HostString)
        VB: Equality(HostString, HostString)
      nameWithType:
        CSharp: HostString.Equality(HostString, HostString)
        VB: HostString.Equality(HostString, HostString)
      qualifiedName:
        CSharp: Microsoft.Owin.HostString.Equality(Microsoft.Owin.HostString, Microsoft.Owin.HostString)
        VB: Microsoft.Owin.HostString.Equality(Microsoft.Owin.HostString, Microsoft.Owin.HostString)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool operator ==(HostString left, HostString right)
          VB: Public Shared Operator =(left As HostString, right As HostString) As Boolean
        parameters:
        - id: left
          type: Microsoft.Owin.HostString
        - id: right
          type: Microsoft.Owin.HostString
        return:
          type: System.Boolean
      overload: Microsoft.Owin.HostString.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.HostString.op_Inequality(Microsoft.Owin.HostString,Microsoft.Owin.HostString)
      commentId: M:Microsoft.Owin.HostString.op_Inequality(Microsoft.Owin.HostString,Microsoft.Owin.HostString)
      language: CSharp
      name:
        CSharp: Inequality(HostString, HostString)
        VB: Inequality(HostString, HostString)
      nameWithType:
        CSharp: HostString.Inequality(HostString, HostString)
        VB: HostString.Inequality(HostString, HostString)
      qualifiedName:
        CSharp: Microsoft.Owin.HostString.Inequality(Microsoft.Owin.HostString, Microsoft.Owin.HostString)
        VB: Microsoft.Owin.HostString.Inequality(Microsoft.Owin.HostString, Microsoft.Owin.HostString)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool operator !=(HostString left, HostString right)
          VB: Public Shared Operator <>(left As HostString, right As HostString) As Boolean
        parameters:
        - id: left
          type: Microsoft.Owin.HostString
        - id: right
          type: Microsoft.Owin.HostString
        return:
          type: System.Boolean
      overload: Microsoft.Owin.HostString.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.HostString.Value
      commentId: P:Microsoft.Owin.HostString.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: HostString.Value
        VB: HostString.Value
      qualifiedName:
        CSharp: Microsoft.Owin.HostString.Value
        VB: Microsoft.Owin.HostString.Value
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string Value { get; }
          VB: Public ReadOnly Property Value As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.HostString.Value*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.Owin.IOwinContext
    commentId: T:Microsoft.Owin.IOwinContext
    language: CSharp
    name:
      CSharp: IOwinContext
      VB: IOwinContext
    nameWithType:
      CSharp: IOwinContext
      VB: IOwinContext
    qualifiedName:
      CSharp: Microsoft.Owin.IOwinContext
      VB: Microsoft.Owin.IOwinContext
    type: Interface
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public interface IOwinContext
        VB: Public Interface IOwinContext
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Microsoft.Owin.IOwinContext.Get``1(System.String)
      commentId: M:Microsoft.Owin.IOwinContext.Get``1(System.String)
      language: CSharp
      name:
        CSharp: Get<T>(String)
        VB: Get(Of T)(String)
      nameWithType:
        CSharp: IOwinContext.Get<T>(String)
        VB: IOwinContext.Get(Of T)(String)
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinContext.Get<T>(System.String)
        VB: Microsoft.Owin.IOwinContext.Get(Of T)(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: T Get<T>(string key)
          VB: Function Get(Of T)(key As String) As T
        parameters:
        - id: key
          type: System.String
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Microsoft.Owin.IOwinContext.Get*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinContext.Set``1(System.String,``0)
      commentId: M:Microsoft.Owin.IOwinContext.Set``1(System.String,``0)
      language: CSharp
      name:
        CSharp: Set<T>(String, T)
        VB: Set(Of T)(String, T)
      nameWithType:
        CSharp: IOwinContext.Set<T>(String, T)
        VB: IOwinContext.Set(Of T)(String, T)
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinContext.Set<T>(System.String, T)
        VB: Microsoft.Owin.IOwinContext.Set(Of T)(System.String, T)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IOwinContext Set<T>(string key, T value)
          VB: Function Set(Of T)(key As String, value As T) As IOwinContext
        parameters:
        - id: key
          type: System.String
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Microsoft.Owin.IOwinContext
      overload: Microsoft.Owin.IOwinContext.Set*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinContext.Request
      commentId: P:Microsoft.Owin.IOwinContext.Request
      language: CSharp
      name:
        CSharp: Request
        VB: Request
      nameWithType:
        CSharp: IOwinContext.Request
        VB: IOwinContext.Request
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinContext.Request
        VB: Microsoft.Owin.IOwinContext.Request
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IOwinRequest Request { get; }
          VB: ReadOnly Property Request As IOwinRequest
        parameters: []
        return:
          type: Microsoft.Owin.IOwinRequest
      overload: Microsoft.Owin.IOwinContext.Request*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinContext.Response
      commentId: P:Microsoft.Owin.IOwinContext.Response
      language: CSharp
      name:
        CSharp: Response
        VB: Response
      nameWithType:
        CSharp: IOwinContext.Response
        VB: IOwinContext.Response
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinContext.Response
        VB: Microsoft.Owin.IOwinContext.Response
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IOwinResponse Response { get; }
          VB: ReadOnly Property Response As IOwinResponse
        parameters: []
        return:
          type: Microsoft.Owin.IOwinResponse
      overload: Microsoft.Owin.IOwinContext.Response*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinContext.Authentication
      commentId: P:Microsoft.Owin.IOwinContext.Authentication
      language: CSharp
      name:
        CSharp: Authentication
        VB: Authentication
      nameWithType:
        CSharp: IOwinContext.Authentication
        VB: IOwinContext.Authentication
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinContext.Authentication
        VB: Microsoft.Owin.IOwinContext.Authentication
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IAuthenticationManager Authentication { get; }
          VB: ReadOnly Property Authentication As IAuthenticationManager
        parameters: []
        return:
          type: Microsoft.Owin.Security.IAuthenticationManager
      overload: Microsoft.Owin.IOwinContext.Authentication*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinContext.Environment
      commentId: P:Microsoft.Owin.IOwinContext.Environment
      language: CSharp
      name:
        CSharp: Environment
        VB: Environment
      nameWithType:
        CSharp: IOwinContext.Environment
        VB: IOwinContext.Environment
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinContext.Environment
        VB: Microsoft.Owin.IOwinContext.Environment
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IDictionary<string, object> Environment { get; }
          VB: ReadOnly Property Environment As IDictionary(Of String, Object)
        parameters: []
        return:
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.IOwinContext.Environment*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinContext.TraceOutput
      commentId: P:Microsoft.Owin.IOwinContext.TraceOutput
      language: CSharp
      name:
        CSharp: TraceOutput
        VB: TraceOutput
      nameWithType:
        CSharp: IOwinContext.TraceOutput
        VB: IOwinContext.TraceOutput
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinContext.TraceOutput
        VB: Microsoft.Owin.IOwinContext.TraceOutput
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: TextWriter TraceOutput { get; set; }
          VB: Property TraceOutput As TextWriter
        parameters: []
        return:
          type: System.IO.TextWriter
      overload: Microsoft.Owin.IOwinContext.TraceOutput*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
  - id: Microsoft.Owin.IOwinRequest
    commentId: T:Microsoft.Owin.IOwinRequest
    language: CSharp
    name:
      CSharp: IOwinRequest
      VB: IOwinRequest
    nameWithType:
      CSharp: IOwinRequest
      VB: IOwinRequest
    qualifiedName:
      CSharp: Microsoft.Owin.IOwinRequest
      VB: Microsoft.Owin.IOwinRequest
    type: Interface
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public interface IOwinRequest
        VB: Public Interface IOwinRequest
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Microsoft.Owin.IOwinRequest.ReadFormAsync
      commentId: M:Microsoft.Owin.IOwinRequest.ReadFormAsync
      language: CSharp
      name:
        CSharp: ReadFormAsync()
        VB: ReadFormAsync()
      nameWithType:
        CSharp: IOwinRequest.ReadFormAsync()
        VB: IOwinRequest.ReadFormAsync()
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.ReadFormAsync()
        VB: Microsoft.Owin.IOwinRequest.ReadFormAsync()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: Task<IFormCollection> ReadFormAsync()
          VB: Function ReadFormAsync As Task(Of IFormCollection)
        return:
          type: System.Threading.Tasks.Task{Microsoft.Owin.IFormCollection}
      overload: Microsoft.Owin.IOwinRequest.ReadFormAsync*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinRequest.Get``1(System.String)
      commentId: M:Microsoft.Owin.IOwinRequest.Get``1(System.String)
      language: CSharp
      name:
        CSharp: Get<T>(String)
        VB: Get(Of T)(String)
      nameWithType:
        CSharp: IOwinRequest.Get<T>(String)
        VB: IOwinRequest.Get(Of T)(String)
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Get<T>(System.String)
        VB: Microsoft.Owin.IOwinRequest.Get(Of T)(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: T Get<T>(string key)
          VB: Function Get(Of T)(key As String) As T
        parameters:
        - id: key
          type: System.String
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Microsoft.Owin.IOwinRequest.Get*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinRequest.Set``1(System.String,``0)
      commentId: M:Microsoft.Owin.IOwinRequest.Set``1(System.String,``0)
      language: CSharp
      name:
        CSharp: Set<T>(String, T)
        VB: Set(Of T)(String, T)
      nameWithType:
        CSharp: IOwinRequest.Set<T>(String, T)
        VB: IOwinRequest.Set(Of T)(String, T)
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Set<T>(System.String, T)
        VB: Microsoft.Owin.IOwinRequest.Set(Of T)(System.String, T)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IOwinRequest Set<T>(string key, T value)
          VB: Function Set(Of T)(key As String, value As T) As IOwinRequest
        parameters:
        - id: key
          type: System.String
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Microsoft.Owin.IOwinRequest
      overload: Microsoft.Owin.IOwinRequest.Set*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinRequest.Environment
      commentId: P:Microsoft.Owin.IOwinRequest.Environment
      language: CSharp
      name:
        CSharp: Environment
        VB: Environment
      nameWithType:
        CSharp: IOwinRequest.Environment
        VB: IOwinRequest.Environment
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Environment
        VB: Microsoft.Owin.IOwinRequest.Environment
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IDictionary<string, object> Environment { get; }
          VB: ReadOnly Property Environment As IDictionary(Of String, Object)
        parameters: []
        return:
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.IOwinRequest.Environment*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinRequest.Context
      commentId: P:Microsoft.Owin.IOwinRequest.Context
      language: CSharp
      name:
        CSharp: Context
        VB: Context
      nameWithType:
        CSharp: IOwinRequest.Context
        VB: IOwinRequest.Context
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Context
        VB: Microsoft.Owin.IOwinRequest.Context
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IOwinContext Context { get; }
          VB: ReadOnly Property Context As IOwinContext
        parameters: []
        return:
          type: Microsoft.Owin.IOwinContext
      overload: Microsoft.Owin.IOwinRequest.Context*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinRequest.Method
      commentId: P:Microsoft.Owin.IOwinRequest.Method
      language: CSharp
      name:
        CSharp: Method
        VB: Method
      nameWithType:
        CSharp: IOwinRequest.Method
        VB: IOwinRequest.Method
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Method
        VB: Microsoft.Owin.IOwinRequest.Method
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string Method { get; set; }
          VB: Property Method As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.IOwinRequest.Method*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.Scheme
      commentId: P:Microsoft.Owin.IOwinRequest.Scheme
      language: CSharp
      name:
        CSharp: Scheme
        VB: Scheme
      nameWithType:
        CSharp: IOwinRequest.Scheme
        VB: IOwinRequest.Scheme
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Scheme
        VB: Microsoft.Owin.IOwinRequest.Scheme
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string Scheme { get; set; }
          VB: Property Scheme As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.IOwinRequest.Scheme*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.IsSecure
      commentId: P:Microsoft.Owin.IOwinRequest.IsSecure
      language: CSharp
      name:
        CSharp: IsSecure
        VB: IsSecure
      nameWithType:
        CSharp: IOwinRequest.IsSecure
        VB: IOwinRequest.IsSecure
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.IsSecure
        VB: Microsoft.Owin.IOwinRequest.IsSecure
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: bool IsSecure { get; }
          VB: ReadOnly Property IsSecure As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Microsoft.Owin.IOwinRequest.IsSecure*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinRequest.Host
      commentId: P:Microsoft.Owin.IOwinRequest.Host
      language: CSharp
      name:
        CSharp: Host
        VB: Host
      nameWithType:
        CSharp: IOwinRequest.Host
        VB: IOwinRequest.Host
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Host
        VB: Microsoft.Owin.IOwinRequest.Host
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: HostString Host { get; set; }
          VB: Property Host As HostString
        parameters: []
        return:
          type: Microsoft.Owin.HostString
      overload: Microsoft.Owin.IOwinRequest.Host*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.PathBase
      commentId: P:Microsoft.Owin.IOwinRequest.PathBase
      language: CSharp
      name:
        CSharp: PathBase
        VB: PathBase
      nameWithType:
        CSharp: IOwinRequest.PathBase
        VB: IOwinRequest.PathBase
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.PathBase
        VB: Microsoft.Owin.IOwinRequest.PathBase
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: PathString PathBase { get; set; }
          VB: Property PathBase As PathString
        parameters: []
        return:
          type: Microsoft.Owin.PathString
      overload: Microsoft.Owin.IOwinRequest.PathBase*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.Path
      commentId: P:Microsoft.Owin.IOwinRequest.Path
      language: CSharp
      name:
        CSharp: Path
        VB: Path
      nameWithType:
        CSharp: IOwinRequest.Path
        VB: IOwinRequest.Path
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Path
        VB: Microsoft.Owin.IOwinRequest.Path
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: PathString Path { get; set; }
          VB: Property Path As PathString
        parameters: []
        return:
          type: Microsoft.Owin.PathString
      overload: Microsoft.Owin.IOwinRequest.Path*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.QueryString
      commentId: P:Microsoft.Owin.IOwinRequest.QueryString
      language: CSharp
      name:
        CSharp: QueryString
        VB: QueryString
      nameWithType:
        CSharp: IOwinRequest.QueryString
        VB: IOwinRequest.QueryString
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.QueryString
        VB: Microsoft.Owin.IOwinRequest.QueryString
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: QueryString QueryString { get; set; }
          VB: Property QueryString As QueryString
        parameters: []
        return:
          type: Microsoft.Owin.QueryString
      overload: Microsoft.Owin.IOwinRequest.QueryString*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.Query
      commentId: P:Microsoft.Owin.IOwinRequest.Query
      language: CSharp
      name:
        CSharp: Query
        VB: Query
      nameWithType:
        CSharp: IOwinRequest.Query
        VB: IOwinRequest.Query
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Query
        VB: Microsoft.Owin.IOwinRequest.Query
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IReadableStringCollection Query { get; }
          VB: ReadOnly Property Query As IReadableStringCollection
        parameters: []
        return:
          type: Microsoft.Owin.IReadableStringCollection
      overload: Microsoft.Owin.IOwinRequest.Query*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinRequest.Uri
      commentId: P:Microsoft.Owin.IOwinRequest.Uri
      language: CSharp
      name:
        CSharp: Uri
        VB: Uri
      nameWithType:
        CSharp: IOwinRequest.Uri
        VB: IOwinRequest.Uri
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Uri
        VB: Microsoft.Owin.IOwinRequest.Uri
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: Uri Uri { get; }
          VB: ReadOnly Property Uri As Uri
        parameters: []
        return:
          type: System.Uri
      overload: Microsoft.Owin.IOwinRequest.Uri*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinRequest.Protocol
      commentId: P:Microsoft.Owin.IOwinRequest.Protocol
      language: CSharp
      name:
        CSharp: Protocol
        VB: Protocol
      nameWithType:
        CSharp: IOwinRequest.Protocol
        VB: IOwinRequest.Protocol
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Protocol
        VB: Microsoft.Owin.IOwinRequest.Protocol
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string Protocol { get; set; }
          VB: Property Protocol As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.IOwinRequest.Protocol*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.Headers
      commentId: P:Microsoft.Owin.IOwinRequest.Headers
      language: CSharp
      name:
        CSharp: Headers
        VB: Headers
      nameWithType:
        CSharp: IOwinRequest.Headers
        VB: IOwinRequest.Headers
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Headers
        VB: Microsoft.Owin.IOwinRequest.Headers
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IHeaderDictionary Headers { get; }
          VB: ReadOnly Property Headers As IHeaderDictionary
        parameters: []
        return:
          type: Microsoft.Owin.IHeaderDictionary
      overload: Microsoft.Owin.IOwinRequest.Headers*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinRequest.Cookies
      commentId: P:Microsoft.Owin.IOwinRequest.Cookies
      language: CSharp
      name:
        CSharp: Cookies
        VB: Cookies
      nameWithType:
        CSharp: IOwinRequest.Cookies
        VB: IOwinRequest.Cookies
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Cookies
        VB: Microsoft.Owin.IOwinRequest.Cookies
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: RequestCookieCollection Cookies { get; }
          VB: ReadOnly Property Cookies As RequestCookieCollection
        parameters: []
        return:
          type: Microsoft.Owin.RequestCookieCollection
      overload: Microsoft.Owin.IOwinRequest.Cookies*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinRequest.ContentType
      commentId: P:Microsoft.Owin.IOwinRequest.ContentType
      language: CSharp
      name:
        CSharp: ContentType
        VB: ContentType
      nameWithType:
        CSharp: IOwinRequest.ContentType
        VB: IOwinRequest.ContentType
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.ContentType
        VB: Microsoft.Owin.IOwinRequest.ContentType
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string ContentType { get; set; }
          VB: Property ContentType As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.IOwinRequest.ContentType*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.CacheControl
      commentId: P:Microsoft.Owin.IOwinRequest.CacheControl
      language: CSharp
      name:
        CSharp: CacheControl
        VB: CacheControl
      nameWithType:
        CSharp: IOwinRequest.CacheControl
        VB: IOwinRequest.CacheControl
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.CacheControl
        VB: Microsoft.Owin.IOwinRequest.CacheControl
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string CacheControl { get; set; }
          VB: Property CacheControl As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.IOwinRequest.CacheControl*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.MediaType
      commentId: P:Microsoft.Owin.IOwinRequest.MediaType
      language: CSharp
      name:
        CSharp: MediaType
        VB: MediaType
      nameWithType:
        CSharp: IOwinRequest.MediaType
        VB: IOwinRequest.MediaType
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.MediaType
        VB: Microsoft.Owin.IOwinRequest.MediaType
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string MediaType { get; set; }
          VB: Property MediaType As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.IOwinRequest.MediaType*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.Accept
      commentId: P:Microsoft.Owin.IOwinRequest.Accept
      language: CSharp
      name:
        CSharp: Accept
        VB: Accept
      nameWithType:
        CSharp: IOwinRequest.Accept
        VB: IOwinRequest.Accept
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Accept
        VB: Microsoft.Owin.IOwinRequest.Accept
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string Accept { get; set; }
          VB: Property Accept As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.IOwinRequest.Accept*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.Body
      commentId: P:Microsoft.Owin.IOwinRequest.Body
      language: CSharp
      name:
        CSharp: Body
        VB: Body
      nameWithType:
        CSharp: IOwinRequest.Body
        VB: IOwinRequest.Body
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.Body
        VB: Microsoft.Owin.IOwinRequest.Body
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: Stream Body { get; set; }
          VB: Property Body As Stream
        parameters: []
        return:
          type: System.IO.Stream
      overload: Microsoft.Owin.IOwinRequest.Body*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.CallCancelled
      commentId: P:Microsoft.Owin.IOwinRequest.CallCancelled
      language: CSharp
      name:
        CSharp: CallCancelled
        VB: CallCancelled
      nameWithType:
        CSharp: IOwinRequest.CallCancelled
        VB: IOwinRequest.CallCancelled
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.CallCancelled
        VB: Microsoft.Owin.IOwinRequest.CallCancelled
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: CancellationToken CallCancelled { get; set; }
          VB: Property CallCancelled As CancellationToken
        parameters: []
        return:
          type: System.Threading.CancellationToken
      overload: Microsoft.Owin.IOwinRequest.CallCancelled*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.LocalIpAddress
      commentId: P:Microsoft.Owin.IOwinRequest.LocalIpAddress
      language: CSharp
      name:
        CSharp: LocalIpAddress
        VB: LocalIpAddress
      nameWithType:
        CSharp: IOwinRequest.LocalIpAddress
        VB: IOwinRequest.LocalIpAddress
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.LocalIpAddress
        VB: Microsoft.Owin.IOwinRequest.LocalIpAddress
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string LocalIpAddress { get; set; }
          VB: Property LocalIpAddress As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.IOwinRequest.LocalIpAddress*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.LocalPort
      commentId: P:Microsoft.Owin.IOwinRequest.LocalPort
      language: CSharp
      name:
        CSharp: LocalPort
        VB: LocalPort
      nameWithType:
        CSharp: IOwinRequest.LocalPort
        VB: IOwinRequest.LocalPort
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.LocalPort
        VB: Microsoft.Owin.IOwinRequest.LocalPort
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: int? LocalPort { get; set; }
          VB: Property LocalPort As Integer?
        parameters: []
        return:
          type: System.Nullable{System.Int32}
      overload: Microsoft.Owin.IOwinRequest.LocalPort*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.RemoteIpAddress
      commentId: P:Microsoft.Owin.IOwinRequest.RemoteIpAddress
      language: CSharp
      name:
        CSharp: RemoteIpAddress
        VB: RemoteIpAddress
      nameWithType:
        CSharp: IOwinRequest.RemoteIpAddress
        VB: IOwinRequest.RemoteIpAddress
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.RemoteIpAddress
        VB: Microsoft.Owin.IOwinRequest.RemoteIpAddress
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string RemoteIpAddress { get; set; }
          VB: Property RemoteIpAddress As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.IOwinRequest.RemoteIpAddress*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.RemotePort
      commentId: P:Microsoft.Owin.IOwinRequest.RemotePort
      language: CSharp
      name:
        CSharp: RemotePort
        VB: RemotePort
      nameWithType:
        CSharp: IOwinRequest.RemotePort
        VB: IOwinRequest.RemotePort
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.RemotePort
        VB: Microsoft.Owin.IOwinRequest.RemotePort
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: int? RemotePort { get; set; }
          VB: Property RemotePort As Integer?
        parameters: []
        return:
          type: System.Nullable{System.Int32}
      overload: Microsoft.Owin.IOwinRequest.RemotePort*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinRequest.User
      commentId: P:Microsoft.Owin.IOwinRequest.User
      language: CSharp
      name:
        CSharp: User
        VB: User
      nameWithType:
        CSharp: IOwinRequest.User
        VB: IOwinRequest.User
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinRequest.User
        VB: Microsoft.Owin.IOwinRequest.User
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IPrincipal User { get; set; }
          VB: Property User As IPrincipal
        parameters: []
        return:
          type: System.Security.Principal.IPrincipal
      overload: Microsoft.Owin.IOwinRequest.User*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
  - id: Microsoft.Owin.IOwinResponse
    commentId: T:Microsoft.Owin.IOwinResponse
    language: CSharp
    name:
      CSharp: IOwinResponse
      VB: IOwinResponse
    nameWithType:
      CSharp: IOwinResponse
      VB: IOwinResponse
    qualifiedName:
      CSharp: Microsoft.Owin.IOwinResponse
      VB: Microsoft.Owin.IOwinResponse
    type: Interface
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public interface IOwinResponse
        VB: Public Interface IOwinResponse
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Microsoft.Owin.IOwinResponse.OnSendingHeaders(System.Action{System.Object},System.Object)
      commentId: M:Microsoft.Owin.IOwinResponse.OnSendingHeaders(System.Action{System.Object},System.Object)
      language: CSharp
      name:
        CSharp: OnSendingHeaders(Action<Object>, Object)
        VB: OnSendingHeaders(Action(Of Object), Object)
      nameWithType:
        CSharp: IOwinResponse.OnSendingHeaders(Action<Object>, Object)
        VB: IOwinResponse.OnSendingHeaders(Action(Of Object), Object)
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.OnSendingHeaders(System.Action<System.Object>, System.Object)
        VB: Microsoft.Owin.IOwinResponse.OnSendingHeaders(System.Action(Of System.Object), System.Object)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void OnSendingHeaders(Action<object> callback, object state)
          VB: Sub OnSendingHeaders(callback As Action(Of Object), state As Object)
        parameters:
        - id: callback
          type: System.Action{System.Object}
        - id: state
          type: System.Object
      overload: Microsoft.Owin.IOwinResponse.OnSendingHeaders*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinResponse.Redirect(System.String)
      commentId: M:Microsoft.Owin.IOwinResponse.Redirect(System.String)
      language: CSharp
      name:
        CSharp: Redirect(String)
        VB: Redirect(String)
      nameWithType:
        CSharp: IOwinResponse.Redirect(String)
        VB: IOwinResponse.Redirect(String)
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.Redirect(System.String)
        VB: Microsoft.Owin.IOwinResponse.Redirect(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void Redirect(string location)
          VB: Sub Redirect(location As String)
        parameters:
        - id: location
          type: System.String
      overload: Microsoft.Owin.IOwinResponse.Redirect*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinResponse.Write(System.String)
      commentId: M:Microsoft.Owin.IOwinResponse.Write(System.String)
      language: CSharp
      name:
        CSharp: Write(String)
        VB: Write(String)
      nameWithType:
        CSharp: IOwinResponse.Write(String)
        VB: IOwinResponse.Write(String)
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.Write(System.String)
        VB: Microsoft.Owin.IOwinResponse.Write(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void Write(string text)
          VB: Sub Write(text As String)
        parameters:
        - id: text
          type: System.String
      overload: Microsoft.Owin.IOwinResponse.Write*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinResponse.Write(System.Byte[])
      commentId: M:Microsoft.Owin.IOwinResponse.Write(System.Byte[])
      language: CSharp
      name:
        CSharp: Write(Byte[])
        VB: Write(Byte())
      nameWithType:
        CSharp: IOwinResponse.Write(Byte[])
        VB: IOwinResponse.Write(Byte())
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.Write(System.Byte[])
        VB: Microsoft.Owin.IOwinResponse.Write(System.Byte())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void Write(byte[] data)
          VB: Sub Write(data As Byte())
        parameters:
        - id: data
          type: System.Byte[]
      overload: Microsoft.Owin.IOwinResponse.Write*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinResponse.Write(System.Byte[],System.Int32,System.Int32)
      commentId: M:Microsoft.Owin.IOwinResponse.Write(System.Byte[],System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Write(Byte[], Int32, Int32)
        VB: Write(Byte(), Int32, Int32)
      nameWithType:
        CSharp: IOwinResponse.Write(Byte[], Int32, Int32)
        VB: IOwinResponse.Write(Byte(), Int32, Int32)
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.Write(System.Byte[], System.Int32, System.Int32)
        VB: Microsoft.Owin.IOwinResponse.Write(System.Byte(), System.Int32, System.Int32)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void Write(byte[] data, int offset, int count)
          VB: Sub Write(data As Byte(), offset As Integer, count As Integer)
        parameters:
        - id: data
          type: System.Byte[]
        - id: offset
          type: System.Int32
        - id: count
          type: System.Int32
      overload: Microsoft.Owin.IOwinResponse.Write*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.String)
      commentId: M:Microsoft.Owin.IOwinResponse.WriteAsync(System.String)
      language: CSharp
      name:
        CSharp: WriteAsync(String)
        VB: WriteAsync(String)
      nameWithType:
        CSharp: IOwinResponse.WriteAsync(String)
        VB: IOwinResponse.WriteAsync(String)
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.WriteAsync(System.String)
        VB: Microsoft.Owin.IOwinResponse.WriteAsync(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: Task WriteAsync(string text)
          VB: Function WriteAsync(text As String) As Task
        parameters:
        - id: text
          type: System.String
        return:
          type: System.Threading.Tasks.Task
      overload: Microsoft.Owin.IOwinResponse.WriteAsync*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.String,System.Threading.CancellationToken)
      commentId: M:Microsoft.Owin.IOwinResponse.WriteAsync(System.String,System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: WriteAsync(String, CancellationToken)
        VB: WriteAsync(String, CancellationToken)
      nameWithType:
        CSharp: IOwinResponse.WriteAsync(String, CancellationToken)
        VB: IOwinResponse.WriteAsync(String, CancellationToken)
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.WriteAsync(System.String, System.Threading.CancellationToken)
        VB: Microsoft.Owin.IOwinResponse.WriteAsync(System.String, System.Threading.CancellationToken)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: Task WriteAsync(string text, CancellationToken token)
          VB: Function WriteAsync(text As String, token As CancellationToken) As Task
        parameters:
        - id: text
          type: System.String
        - id: token
          type: System.Threading.CancellationToken
        return:
          type: System.Threading.Tasks.Task
      overload: Microsoft.Owin.IOwinResponse.WriteAsync*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[])
      commentId: M:Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[])
      language: CSharp
      name:
        CSharp: WriteAsync(Byte[])
        VB: WriteAsync(Byte())
      nameWithType:
        CSharp: IOwinResponse.WriteAsync(Byte[])
        VB: IOwinResponse.WriteAsync(Byte())
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[])
        VB: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: Task WriteAsync(byte[] data)
          VB: Function WriteAsync(data As Byte()) As Task
        parameters:
        - id: data
          type: System.Byte[]
        return:
          type: System.Threading.Tasks.Task
      overload: Microsoft.Owin.IOwinResponse.WriteAsync*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[],System.Threading.CancellationToken)
      commentId: M:Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[],System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: WriteAsync(Byte[], CancellationToken)
        VB: WriteAsync(Byte(), CancellationToken)
      nameWithType:
        CSharp: IOwinResponse.WriteAsync(Byte[], CancellationToken)
        VB: IOwinResponse.WriteAsync(Byte(), CancellationToken)
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[], System.Threading.CancellationToken)
        VB: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte(), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: Task WriteAsync(byte[] data, CancellationToken token)
          VB: Function WriteAsync(data As Byte(), token As CancellationToken) As Task
        parameters:
        - id: data
          type: System.Byte[]
        - id: token
          type: System.Threading.CancellationToken
        return:
          type: System.Threading.Tasks.Task
      overload: Microsoft.Owin.IOwinResponse.WriteAsync*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
      commentId: M:Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: WriteAsync(Byte[], Int32, Int32, CancellationToken)
        VB: WriteAsync(Byte(), Int32, Int32, CancellationToken)
      nameWithType:
        CSharp: IOwinResponse.WriteAsync(Byte[], Int32, Int32, CancellationToken)
        VB: IOwinResponse.WriteAsync(Byte(), Int32, Int32, CancellationToken)
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
        VB: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: Task WriteAsync(byte[] data, int offset, int count, CancellationToken token)
          VB: Function WriteAsync(data As Byte(), offset As Integer, count As Integer, token As CancellationToken) As Task
        parameters:
        - id: data
          type: System.Byte[]
        - id: offset
          type: System.Int32
        - id: count
          type: System.Int32
        - id: token
          type: System.Threading.CancellationToken
        return:
          type: System.Threading.Tasks.Task
      overload: Microsoft.Owin.IOwinResponse.WriteAsync*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinResponse.Get``1(System.String)
      commentId: M:Microsoft.Owin.IOwinResponse.Get``1(System.String)
      language: CSharp
      name:
        CSharp: Get<T>(String)
        VB: Get(Of T)(String)
      nameWithType:
        CSharp: IOwinResponse.Get<T>(String)
        VB: IOwinResponse.Get(Of T)(String)
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.Get<T>(System.String)
        VB: Microsoft.Owin.IOwinResponse.Get(Of T)(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: T Get<T>(string key)
          VB: Function Get(Of T)(key As String) As T
        parameters:
        - id: key
          type: System.String
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Microsoft.Owin.IOwinResponse.Get*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinResponse.Set``1(System.String,``0)
      commentId: M:Microsoft.Owin.IOwinResponse.Set``1(System.String,``0)
      language: CSharp
      name:
        CSharp: Set<T>(String, T)
        VB: Set(Of T)(String, T)
      nameWithType:
        CSharp: IOwinResponse.Set<T>(String, T)
        VB: IOwinResponse.Set(Of T)(String, T)
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.Set<T>(System.String, T)
        VB: Microsoft.Owin.IOwinResponse.Set(Of T)(System.String, T)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IOwinResponse Set<T>(string key, T value)
          VB: Function Set(Of T)(key As String, value As T) As IOwinResponse
        parameters:
        - id: key
          type: System.String
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Microsoft.Owin.IOwinResponse
      overload: Microsoft.Owin.IOwinResponse.Set*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.IOwinResponse.Environment
      commentId: P:Microsoft.Owin.IOwinResponse.Environment
      language: CSharp
      name:
        CSharp: Environment
        VB: Environment
      nameWithType:
        CSharp: IOwinResponse.Environment
        VB: IOwinResponse.Environment
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.Environment
        VB: Microsoft.Owin.IOwinResponse.Environment
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IDictionary<string, object> Environment { get; }
          VB: ReadOnly Property Environment As IDictionary(Of String, Object)
        parameters: []
        return:
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.IOwinResponse.Environment*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinResponse.Context
      commentId: P:Microsoft.Owin.IOwinResponse.Context
      language: CSharp
      name:
        CSharp: Context
        VB: Context
      nameWithType:
        CSharp: IOwinResponse.Context
        VB: IOwinResponse.Context
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.Context
        VB: Microsoft.Owin.IOwinResponse.Context
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IOwinContext Context { get; }
          VB: ReadOnly Property Context As IOwinContext
        parameters: []
        return:
          type: Microsoft.Owin.IOwinContext
      overload: Microsoft.Owin.IOwinResponse.Context*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinResponse.StatusCode
      commentId: P:Microsoft.Owin.IOwinResponse.StatusCode
      language: CSharp
      name:
        CSharp: StatusCode
        VB: StatusCode
      nameWithType:
        CSharp: IOwinResponse.StatusCode
        VB: IOwinResponse.StatusCode
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.StatusCode
        VB: Microsoft.Owin.IOwinResponse.StatusCode
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: int StatusCode { get; set; }
          VB: Property StatusCode As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Microsoft.Owin.IOwinResponse.StatusCode*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinResponse.ReasonPhrase
      commentId: P:Microsoft.Owin.IOwinResponse.ReasonPhrase
      language: CSharp
      name:
        CSharp: ReasonPhrase
        VB: ReasonPhrase
      nameWithType:
        CSharp: IOwinResponse.ReasonPhrase
        VB: IOwinResponse.ReasonPhrase
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.ReasonPhrase
        VB: Microsoft.Owin.IOwinResponse.ReasonPhrase
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string ReasonPhrase { get; set; }
          VB: Property ReasonPhrase As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.IOwinResponse.ReasonPhrase*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinResponse.Protocol
      commentId: P:Microsoft.Owin.IOwinResponse.Protocol
      language: CSharp
      name:
        CSharp: Protocol
        VB: Protocol
      nameWithType:
        CSharp: IOwinResponse.Protocol
        VB: IOwinResponse.Protocol
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.Protocol
        VB: Microsoft.Owin.IOwinResponse.Protocol
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string Protocol { get; set; }
          VB: Property Protocol As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.IOwinResponse.Protocol*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinResponse.Headers
      commentId: P:Microsoft.Owin.IOwinResponse.Headers
      language: CSharp
      name:
        CSharp: Headers
        VB: Headers
      nameWithType:
        CSharp: IOwinResponse.Headers
        VB: IOwinResponse.Headers
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.Headers
        VB: Microsoft.Owin.IOwinResponse.Headers
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IHeaderDictionary Headers { get; }
          VB: ReadOnly Property Headers As IHeaderDictionary
        parameters: []
        return:
          type: Microsoft.Owin.IHeaderDictionary
      overload: Microsoft.Owin.IOwinResponse.Headers*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinResponse.Cookies
      commentId: P:Microsoft.Owin.IOwinResponse.Cookies
      language: CSharp
      name:
        CSharp: Cookies
        VB: Cookies
      nameWithType:
        CSharp: IOwinResponse.Cookies
        VB: IOwinResponse.Cookies
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.Cookies
        VB: Microsoft.Owin.IOwinResponse.Cookies
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: ResponseCookieCollection Cookies { get; }
          VB: ReadOnly Property Cookies As ResponseCookieCollection
        parameters: []
        return:
          type: Microsoft.Owin.ResponseCookieCollection
      overload: Microsoft.Owin.IOwinResponse.Cookies*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Microsoft.Owin.IOwinResponse.ContentLength
      commentId: P:Microsoft.Owin.IOwinResponse.ContentLength
      language: CSharp
      name:
        CSharp: ContentLength
        VB: ContentLength
      nameWithType:
        CSharp: IOwinResponse.ContentLength
        VB: IOwinResponse.ContentLength
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.ContentLength
        VB: Microsoft.Owin.IOwinResponse.ContentLength
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: long? ContentLength { get; set; }
          VB: Property ContentLength As Long?
        parameters: []
        return:
          type: System.Nullable{System.Int64}
      overload: Microsoft.Owin.IOwinResponse.ContentLength*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinResponse.ContentType
      commentId: P:Microsoft.Owin.IOwinResponse.ContentType
      language: CSharp
      name:
        CSharp: ContentType
        VB: ContentType
      nameWithType:
        CSharp: IOwinResponse.ContentType
        VB: IOwinResponse.ContentType
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.ContentType
        VB: Microsoft.Owin.IOwinResponse.ContentType
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string ContentType { get; set; }
          VB: Property ContentType As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.IOwinResponse.ContentType*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinResponse.Expires
      commentId: P:Microsoft.Owin.IOwinResponse.Expires
      language: CSharp
      name:
        CSharp: Expires
        VB: Expires
      nameWithType:
        CSharp: IOwinResponse.Expires
        VB: IOwinResponse.Expires
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.Expires
        VB: Microsoft.Owin.IOwinResponse.Expires
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: DateTimeOffset? Expires { get; set; }
          VB: Property Expires As DateTimeOffset?
        parameters: []
        return:
          type: System.Nullable{System.DateTimeOffset}
      overload: Microsoft.Owin.IOwinResponse.Expires*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinResponse.ETag
      commentId: P:Microsoft.Owin.IOwinResponse.ETag
      language: CSharp
      name:
        CSharp: ETag
        VB: ETag
      nameWithType:
        CSharp: IOwinResponse.ETag
        VB: IOwinResponse.ETag
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.ETag
        VB: Microsoft.Owin.IOwinResponse.ETag
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string ETag { get; set; }
          VB: Property ETag As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.IOwinResponse.ETag*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.IOwinResponse.Body
      commentId: P:Microsoft.Owin.IOwinResponse.Body
      language: CSharp
      name:
        CSharp: Body
        VB: Body
      nameWithType:
        CSharp: IOwinResponse.Body
        VB: IOwinResponse.Body
      qualifiedName:
        CSharp: Microsoft.Owin.IOwinResponse.Body
        VB: Microsoft.Owin.IOwinResponse.Body
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: Stream Body { get; set; }
          VB: Property Body As Stream
        parameters: []
        return:
          type: System.IO.Stream
      overload: Microsoft.Owin.IOwinResponse.Body*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
  - id: Microsoft.Owin.OwinStartupAttribute
    commentId: T:Microsoft.Owin.OwinStartupAttribute
    language: CSharp
    name:
      CSharp: OwinStartupAttribute
      VB: OwinStartupAttribute
    nameWithType:
      CSharp: OwinStartupAttribute
      VB: OwinStartupAttribute
    qualifiedName:
      CSharp: Microsoft.Owin.OwinStartupAttribute
      VB: Microsoft.Owin.OwinStartupAttribute
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: >-
          [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = true)]

          public sealed class OwinStartupAttribute : Attribute, _Attribute
        VB: >-
          <AttributeUsage(AttributeTargets.Assembly, AllowMultiple:=True)>

          Public NotInheritable Class OwinStartupAttribute

              Inherits Attribute

              Implements _Attribute
    inheritance:
    - System.Object
    - System.Attribute
    implements:
    - System.Runtime.InteropServices._Attribute
    inheritedMembers:
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    - System.Attribute.Equals(System.Object)
    - System.Attribute.GetHashCode
    - System.Attribute.Match(System.Object)
    - System.Attribute.IsDefaultAttribute
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    - System.Attribute.TypeId
    - System.Object.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.AttributeUsageAttribute
      ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
      arguments:
      - type: System.AttributeTargets
        value: 1
      namedArguments:
      - name: AllowMultiple
        type: System.Boolean
        value: true
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: Microsoft.Owin.OwinStartupAttribute.#ctor(System.Type)
      commentId: M:Microsoft.Owin.OwinStartupAttribute.#ctor(System.Type)
      language: CSharp
      name:
        CSharp: OwinStartupAttribute(Type)
        VB: OwinStartupAttribute(Type)
      nameWithType:
        CSharp: OwinStartupAttribute.OwinStartupAttribute(Type)
        VB: OwinStartupAttribute.OwinStartupAttribute(Type)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinStartupAttribute.OwinStartupAttribute(System.Type)
        VB: Microsoft.Owin.OwinStartupAttribute.OwinStartupAttribute(System.Type)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public OwinStartupAttribute(Type startupType)
          VB: Public Sub New(startupType As Type)
        parameters:
        - id: startupType
          type: System.Type
      overload: Microsoft.Owin.OwinStartupAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.OwinStartupAttribute.#ctor(System.String,System.Type)
      commentId: M:Microsoft.Owin.OwinStartupAttribute.#ctor(System.String,System.Type)
      language: CSharp
      name:
        CSharp: OwinStartupAttribute(String, Type)
        VB: OwinStartupAttribute(String, Type)
      nameWithType:
        CSharp: OwinStartupAttribute.OwinStartupAttribute(String, Type)
        VB: OwinStartupAttribute.OwinStartupAttribute(String, Type)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinStartupAttribute.OwinStartupAttribute(System.String, System.Type)
        VB: Microsoft.Owin.OwinStartupAttribute.OwinStartupAttribute(System.String, System.Type)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public OwinStartupAttribute(string friendlyName, Type startupType)
          VB: Public Sub New(friendlyName As String, startupType As Type)
        parameters:
        - id: friendlyName
          type: System.String
        - id: startupType
          type: System.Type
      overload: Microsoft.Owin.OwinStartupAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.OwinStartupAttribute.#ctor(System.Type,System.String)
      commentId: M:Microsoft.Owin.OwinStartupAttribute.#ctor(System.Type,System.String)
      language: CSharp
      name:
        CSharp: OwinStartupAttribute(Type, String)
        VB: OwinStartupAttribute(Type, String)
      nameWithType:
        CSharp: OwinStartupAttribute.OwinStartupAttribute(Type, String)
        VB: OwinStartupAttribute.OwinStartupAttribute(Type, String)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinStartupAttribute.OwinStartupAttribute(System.Type, System.String)
        VB: Microsoft.Owin.OwinStartupAttribute.OwinStartupAttribute(System.Type, System.String)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public OwinStartupAttribute(Type startupType, string methodName)
          VB: Public Sub New(startupType As Type, methodName As String)
        parameters:
        - id: startupType
          type: System.Type
        - id: methodName
          type: System.String
      overload: Microsoft.Owin.OwinStartupAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.OwinStartupAttribute.#ctor(System.String,System.Type,System.String)
      commentId: M:Microsoft.Owin.OwinStartupAttribute.#ctor(System.String,System.Type,System.String)
      language: CSharp
      name:
        CSharp: OwinStartupAttribute(String, Type, String)
        VB: OwinStartupAttribute(String, Type, String)
      nameWithType:
        CSharp: OwinStartupAttribute.OwinStartupAttribute(String, Type, String)
        VB: OwinStartupAttribute.OwinStartupAttribute(String, Type, String)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinStartupAttribute.OwinStartupAttribute(System.String, System.Type, System.String)
        VB: Microsoft.Owin.OwinStartupAttribute.OwinStartupAttribute(System.String, System.Type, System.String)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public OwinStartupAttribute(string friendlyName, Type startupType, string methodName)
          VB: Public Sub New(friendlyName As String, startupType As Type, methodName As String)
        parameters:
        - id: friendlyName
          type: System.String
        - id: startupType
          type: System.Type
        - id: methodName
          type: System.String
      overload: Microsoft.Owin.OwinStartupAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.OwinStartupAttribute.FriendlyName
      commentId: P:Microsoft.Owin.OwinStartupAttribute.FriendlyName
      language: CSharp
      name:
        CSharp: FriendlyName
        VB: FriendlyName
      nameWithType:
        CSharp: OwinStartupAttribute.FriendlyName
        VB: OwinStartupAttribute.FriendlyName
      qualifiedName:
        CSharp: Microsoft.Owin.OwinStartupAttribute.FriendlyName
        VB: Microsoft.Owin.OwinStartupAttribute.FriendlyName
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string FriendlyName { get; }
          VB: Public ReadOnly Property FriendlyName As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinStartupAttribute.FriendlyName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.OwinStartupAttribute.StartupType
      commentId: P:Microsoft.Owin.OwinStartupAttribute.StartupType
      language: CSharp
      name:
        CSharp: StartupType
        VB: StartupType
      nameWithType:
        CSharp: OwinStartupAttribute.StartupType
        VB: OwinStartupAttribute.StartupType
      qualifiedName:
        CSharp: Microsoft.Owin.OwinStartupAttribute.StartupType
        VB: Microsoft.Owin.OwinStartupAttribute.StartupType
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Type StartupType { get; }
          VB: Public ReadOnly Property StartupType As Type
        parameters: []
        return:
          type: System.Type
      overload: Microsoft.Owin.OwinStartupAttribute.StartupType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.OwinStartupAttribute.MethodName
      commentId: P:Microsoft.Owin.OwinStartupAttribute.MethodName
      language: CSharp
      name:
        CSharp: MethodName
        VB: MethodName
      nameWithType:
        CSharp: OwinStartupAttribute.MethodName
        VB: OwinStartupAttribute.MethodName
      qualifiedName:
        CSharp: Microsoft.Owin.OwinStartupAttribute.MethodName
        VB: Microsoft.Owin.OwinStartupAttribute.MethodName
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string MethodName { get; }
          VB: Public ReadOnly Property MethodName As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinStartupAttribute.MethodName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.Owin.OwinContext
    commentId: T:Microsoft.Owin.OwinContext
    language: CSharp
    name:
      CSharp: OwinContext
      VB: OwinContext
    nameWithType:
      CSharp: OwinContext
      VB: OwinContext
    qualifiedName:
      CSharp: Microsoft.Owin.OwinContext
      VB: Microsoft.Owin.OwinContext
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public class OwinContext : IOwinContext'
        VB: >-
          Public Class OwinContext

              Implements IOwinContext
    inheritance:
    - System.Object
    implements:
    - Microsoft.Owin.IOwinContext
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.OwinContext.#ctor
      commentId: M:Microsoft.Owin.OwinContext.#ctor
      language: CSharp
      name:
        CSharp: OwinContext()
        VB: OwinContext()
      nameWithType:
        CSharp: OwinContext.OwinContext()
        VB: OwinContext.OwinContext()
      qualifiedName:
        CSharp: Microsoft.Owin.OwinContext.OwinContext()
        VB: Microsoft.Owin.OwinContext.OwinContext()
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public OwinContext()
          VB: Public Sub New
      overload: Microsoft.Owin.OwinContext.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.OwinContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
      commentId: M:Microsoft.Owin.OwinContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: OwinContext(IDictionary<String, Object>)
        VB: OwinContext(IDictionary(Of String, Object))
      nameWithType:
        CSharp: OwinContext.OwinContext(IDictionary<String, Object>)
        VB: OwinContext.OwinContext(IDictionary(Of String, Object))
      qualifiedName:
        CSharp: Microsoft.Owin.OwinContext.OwinContext(System.Collections.Generic.IDictionary<System.String, System.Object>)
        VB: Microsoft.Owin.OwinContext.OwinContext(System.Collections.Generic.IDictionary(Of System.String, System.Object))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public OwinContext(IDictionary<string, object> environment)
          VB: Public Sub New(environment As IDictionary(Of String, Object))
        parameters:
        - id: environment
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.OwinContext.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.OwinContext.Get``1(System.String)
      commentId: M:Microsoft.Owin.OwinContext.Get``1(System.String)
      language: CSharp
      name:
        CSharp: Get<T>(String)
        VB: Get(Of T)(String)
      nameWithType:
        CSharp: OwinContext.Get<T>(String)
        VB: OwinContext.Get(Of T)(String)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinContext.Get<T>(System.String)
        VB: Microsoft.Owin.OwinContext.Get(Of T)(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual T Get<T>(string key)
          VB: Public Overridable Function Get(Of T)(key As String) As T
        parameters:
        - id: key
          type: System.String
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Microsoft.Owin.OwinContext.Get*
      implements:
      - Microsoft.Owin.IOwinContext.Get``1(System.String)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinContext.Set``1(System.String,``0)
      commentId: M:Microsoft.Owin.OwinContext.Set``1(System.String,``0)
      language: CSharp
      name:
        CSharp: Set<T>(String, T)
        VB: Set(Of T)(String, T)
      nameWithType:
        CSharp: OwinContext.Set<T>(String, T)
        VB: OwinContext.Set(Of T)(String, T)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinContext.Set<T>(System.String, T)
        VB: Microsoft.Owin.OwinContext.Set(Of T)(System.String, T)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual IOwinContext Set<T>(string key, T value)
          VB: Public Overridable Function Set(Of T)(key As String, value As T) As IOwinContext
        parameters:
        - id: key
          type: System.String
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Microsoft.Owin.IOwinContext
      overload: Microsoft.Owin.OwinContext.Set*
      implements:
      - Microsoft.Owin.IOwinContext.Set``1(System.String,{T})
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinContext.Request
      commentId: P:Microsoft.Owin.OwinContext.Request
      language: CSharp
      name:
        CSharp: Request
        VB: Request
      nameWithType:
        CSharp: OwinContext.Request
        VB: OwinContext.Request
      qualifiedName:
        CSharp: Microsoft.Owin.OwinContext.Request
        VB: Microsoft.Owin.OwinContext.Request
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual IOwinRequest Request { get; }
          VB: Public Overridable ReadOnly Property Request As IOwinRequest
        parameters: []
        return:
          type: Microsoft.Owin.IOwinRequest
      overload: Microsoft.Owin.OwinContext.Request*
      implements:
      - Microsoft.Owin.IOwinContext.Request
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: Microsoft.Owin.OwinContext.Response
      commentId: P:Microsoft.Owin.OwinContext.Response
      language: CSharp
      name:
        CSharp: Response
        VB: Response
      nameWithType:
        CSharp: OwinContext.Response
        VB: OwinContext.Response
      qualifiedName:
        CSharp: Microsoft.Owin.OwinContext.Response
        VB: Microsoft.Owin.OwinContext.Response
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual IOwinResponse Response { get; }
          VB: Public Overridable ReadOnly Property Response As IOwinResponse
        parameters: []
        return:
          type: Microsoft.Owin.IOwinResponse
      overload: Microsoft.Owin.OwinContext.Response*
      implements:
      - Microsoft.Owin.IOwinContext.Response
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: Microsoft.Owin.OwinContext.Authentication
      commentId: P:Microsoft.Owin.OwinContext.Authentication
      language: CSharp
      name:
        CSharp: Authentication
        VB: Authentication
      nameWithType:
        CSharp: OwinContext.Authentication
        VB: OwinContext.Authentication
      qualifiedName:
        CSharp: Microsoft.Owin.OwinContext.Authentication
        VB: Microsoft.Owin.OwinContext.Authentication
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IAuthenticationManager Authentication { get; }
          VB: Public ReadOnly Property Authentication As IAuthenticationManager
        parameters: []
        return:
          type: Microsoft.Owin.Security.IAuthenticationManager
      overload: Microsoft.Owin.OwinContext.Authentication*
      implements:
      - Microsoft.Owin.IOwinContext.Authentication
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.OwinContext.Environment
      commentId: P:Microsoft.Owin.OwinContext.Environment
      language: CSharp
      name:
        CSharp: Environment
        VB: Environment
      nameWithType:
        CSharp: OwinContext.Environment
        VB: OwinContext.Environment
      qualifiedName:
        CSharp: Microsoft.Owin.OwinContext.Environment
        VB: Microsoft.Owin.OwinContext.Environment
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual IDictionary<string, object> Environment { get; }
          VB: Public Overridable ReadOnly Property Environment As IDictionary(Of String, Object)
        parameters: []
        return:
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.OwinContext.Environment*
      implements:
      - Microsoft.Owin.IOwinContext.Environment
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: Microsoft.Owin.OwinContext.TraceOutput
      commentId: P:Microsoft.Owin.OwinContext.TraceOutput
      language: CSharp
      name:
        CSharp: TraceOutput
        VB: TraceOutput
      nameWithType:
        CSharp: OwinContext.TraceOutput
        VB: OwinContext.TraceOutput
      qualifiedName:
        CSharp: Microsoft.Owin.OwinContext.TraceOutput
        VB: Microsoft.Owin.OwinContext.TraceOutput
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual TextWriter TraceOutput { get; set; }
          VB: Public Overridable Property TraceOutput As TextWriter
        parameters: []
        return:
          type: System.IO.TextWriter
      overload: Microsoft.Owin.OwinContext.TraceOutput*
      implements:
      - Microsoft.Owin.IOwinContext.TraceOutput
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
  - id: Microsoft.Owin.PathString
    commentId: T:Microsoft.Owin.PathString
    language: CSharp
    name:
      CSharp: PathString
      VB: PathString
    nameWithType:
      CSharp: PathString
      VB: PathString
    qualifiedName:
      CSharp: Microsoft.Owin.PathString
      VB: Microsoft.Owin.PathString
    type: Struct
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public struct PathString : IEquatable<PathString>'
        VB: >-
          Public Structure PathString

              Implements IEquatable(Of PathString)
    implements:
    - System.IEquatable{Microsoft.Owin.PathString}
    inheritedMembers:
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Microsoft.Owin.PathString.Empty
      commentId: F:Microsoft.Owin.PathString.Empty
      language: CSharp
      name:
        CSharp: Empty
        VB: Empty
      nameWithType:
        CSharp: PathString.Empty
        VB: PathString.Empty
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.Empty
        VB: Microsoft.Owin.PathString.Empty
      type: Field
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static readonly PathString Empty
          VB: Public Shared ReadOnly Empty As PathString
        return:
          type: Microsoft.Owin.PathString
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Microsoft.Owin.PathString.#ctor(System.String)
      commentId: M:Microsoft.Owin.PathString.#ctor(System.String)
      language: CSharp
      name:
        CSharp: PathString(String)
        VB: PathString(String)
      nameWithType:
        CSharp: PathString.PathString(String)
        VB: PathString.PathString(String)
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.PathString(System.String)
        VB: Microsoft.Owin.PathString.PathString(System.String)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public PathString(string value)
          VB: Public Sub New(value As String)
        parameters:
        - id: value
          type: System.String
      overload: Microsoft.Owin.PathString.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.PathString.ToString
      commentId: M:Microsoft.Owin.PathString.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: PathString.ToString()
        VB: PathString.ToString()
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.ToString()
        VB: Microsoft.Owin.PathString.ToString()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Microsoft.Owin.PathString.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.PathString.ToUriComponent
      commentId: M:Microsoft.Owin.PathString.ToUriComponent
      language: CSharp
      name:
        CSharp: ToUriComponent()
        VB: ToUriComponent()
      nameWithType:
        CSharp: PathString.ToUriComponent()
        VB: PathString.ToUriComponent()
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.ToUriComponent()
        VB: Microsoft.Owin.PathString.ToUriComponent()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string ToUriComponent()
          VB: Public Function ToUriComponent As String
        return:
          type: System.String
      overload: Microsoft.Owin.PathString.ToUriComponent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.PathString.FromUriComponent(System.String)
      commentId: M:Microsoft.Owin.PathString.FromUriComponent(System.String)
      language: CSharp
      name:
        CSharp: FromUriComponent(String)
        VB: FromUriComponent(String)
      nameWithType:
        CSharp: PathString.FromUriComponent(String)
        VB: PathString.FromUriComponent(String)
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.FromUriComponent(System.String)
        VB: Microsoft.Owin.PathString.FromUriComponent(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static PathString FromUriComponent(string uriComponent)
          VB: Public Shared Function FromUriComponent(uriComponent As String) As PathString
        parameters:
        - id: uriComponent
          type: System.String
        return:
          type: Microsoft.Owin.PathString
      overload: Microsoft.Owin.PathString.FromUriComponent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.PathString.FromUriComponent(System.Uri)
      commentId: M:Microsoft.Owin.PathString.FromUriComponent(System.Uri)
      language: CSharp
      name:
        CSharp: FromUriComponent(Uri)
        VB: FromUriComponent(Uri)
      nameWithType:
        CSharp: PathString.FromUriComponent(Uri)
        VB: PathString.FromUriComponent(Uri)
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.FromUriComponent(System.Uri)
        VB: Microsoft.Owin.PathString.FromUriComponent(System.Uri)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static PathString FromUriComponent(Uri uri)
          VB: Public Shared Function FromUriComponent(uri As Uri) As PathString
        parameters:
        - id: uri
          type: System.Uri
        return:
          type: Microsoft.Owin.PathString
      overload: Microsoft.Owin.PathString.FromUriComponent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString)
      commentId: M:Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString)
      language: CSharp
      name:
        CSharp: StartsWithSegments(PathString)
        VB: StartsWithSegments(PathString)
      nameWithType:
        CSharp: PathString.StartsWithSegments(PathString)
        VB: PathString.StartsWithSegments(PathString)
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString)
        VB: Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool StartsWithSegments(PathString other)
          VB: Public Function StartsWithSegments(other As PathString) As Boolean
        parameters:
        - id: other
          type: Microsoft.Owin.PathString
        return:
          type: System.Boolean
      overload: Microsoft.Owin.PathString.StartsWithSegments*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString,Microsoft.Owin.PathString@)
      commentId: M:Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString,Microsoft.Owin.PathString@)
      language: CSharp
      name:
        CSharp: StartsWithSegments(PathString, out PathString)
        VB: StartsWithSegments(PathString, ByRef PathString)
      nameWithType:
        CSharp: PathString.StartsWithSegments(PathString, out PathString)
        VB: PathString.StartsWithSegments(PathString, ByRef PathString)
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString, out Microsoft.Owin.PathString)
        VB: Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString, ByRef Microsoft.Owin.PathString)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool StartsWithSegments(PathString other, out PathString remaining)
          VB: Public Function StartsWithSegments(other As PathString, ByRef remaining As PathString) As Boolean
        parameters:
        - id: other
          type: Microsoft.Owin.PathString
        - id: remaining
          type: Microsoft.Owin.PathString
        return:
          type: System.Boolean
      overload: Microsoft.Owin.PathString.StartsWithSegments*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.PathString.Add(Microsoft.Owin.PathString)
      commentId: M:Microsoft.Owin.PathString.Add(Microsoft.Owin.PathString)
      language: CSharp
      name:
        CSharp: Add(PathString)
        VB: Add(PathString)
      nameWithType:
        CSharp: PathString.Add(PathString)
        VB: PathString.Add(PathString)
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.Add(Microsoft.Owin.PathString)
        VB: Microsoft.Owin.PathString.Add(Microsoft.Owin.PathString)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public PathString Add(PathString other)
          VB: Public Function Add(other As PathString) As PathString
        parameters:
        - id: other
          type: Microsoft.Owin.PathString
        return:
          type: Microsoft.Owin.PathString
      overload: Microsoft.Owin.PathString.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.PathString.Add(Microsoft.Owin.QueryString)
      commentId: M:Microsoft.Owin.PathString.Add(Microsoft.Owin.QueryString)
      language: CSharp
      name:
        CSharp: Add(QueryString)
        VB: Add(QueryString)
      nameWithType:
        CSharp: PathString.Add(QueryString)
        VB: PathString.Add(QueryString)
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.Add(Microsoft.Owin.QueryString)
        VB: Microsoft.Owin.PathString.Add(Microsoft.Owin.QueryString)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string Add(QueryString other)
          VB: Public Function Add(other As QueryString) As String
        parameters:
        - id: other
          type: Microsoft.Owin.QueryString
        return:
          type: System.String
      overload: Microsoft.Owin.PathString.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString)
      commentId: M:Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString)
      language: CSharp
      name:
        CSharp: Equals(PathString)
        VB: Equals(PathString)
      nameWithType:
        CSharp: PathString.Equals(PathString)
        VB: PathString.Equals(PathString)
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString)
        VB: Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool Equals(PathString other)
          VB: Public Function Equals(other As PathString) As Boolean
        parameters:
        - id: other
          type: Microsoft.Owin.PathString
        return:
          type: System.Boolean
      overload: Microsoft.Owin.PathString.Equals*
      implements:
      - System.IEquatable{Microsoft.Owin.PathString}.Equals(Microsoft.Owin.PathString)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString,System.StringComparison)
      commentId: M:Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString,System.StringComparison)
      language: CSharp
      name:
        CSharp: Equals(PathString, StringComparison)
        VB: Equals(PathString, StringComparison)
      nameWithType:
        CSharp: PathString.Equals(PathString, StringComparison)
        VB: PathString.Equals(PathString, StringComparison)
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString, System.StringComparison)
        VB: Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString, System.StringComparison)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool Equals(PathString other, StringComparison comparisonType)
          VB: Public Function Equals(other As PathString, comparisonType As StringComparison) As Boolean
        parameters:
        - id: other
          type: Microsoft.Owin.PathString
        - id: comparisonType
          type: System.StringComparison
        return:
          type: System.Boolean
      overload: Microsoft.Owin.PathString.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.PathString.Equals(System.Object)
      commentId: M:Microsoft.Owin.PathString.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: PathString.Equals(Object)
        VB: PathString.Equals(Object)
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.Equals(System.Object)
        VB: Microsoft.Owin.PathString.Equals(System.Object)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Microsoft.Owin.PathString.Equals*
      overridden: System.ValueType.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.PathString.GetHashCode
      commentId: M:Microsoft.Owin.PathString.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: PathString.GetHashCode()
        VB: PathString.GetHashCode()
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.GetHashCode()
        VB: Microsoft.Owin.PathString.GetHashCode()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Microsoft.Owin.PathString.GetHashCode*
      overridden: System.ValueType.GetHashCode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.PathString.op_Equality(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
      commentId: M:Microsoft.Owin.PathString.op_Equality(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
      language: CSharp
      name:
        CSharp: Equality(PathString, PathString)
        VB: Equality(PathString, PathString)
      nameWithType:
        CSharp: PathString.Equality(PathString, PathString)
        VB: PathString.Equality(PathString, PathString)
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.Equality(Microsoft.Owin.PathString, Microsoft.Owin.PathString)
        VB: Microsoft.Owin.PathString.Equality(Microsoft.Owin.PathString, Microsoft.Owin.PathString)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool operator ==(PathString left, PathString right)
          VB: Public Shared Operator =(left As PathString, right As PathString) As Boolean
        parameters:
        - id: left
          type: Microsoft.Owin.PathString
        - id: right
          type: Microsoft.Owin.PathString
        return:
          type: System.Boolean
      overload: Microsoft.Owin.PathString.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.PathString.op_Inequality(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
      commentId: M:Microsoft.Owin.PathString.op_Inequality(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
      language: CSharp
      name:
        CSharp: Inequality(PathString, PathString)
        VB: Inequality(PathString, PathString)
      nameWithType:
        CSharp: PathString.Inequality(PathString, PathString)
        VB: PathString.Inequality(PathString, PathString)
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.Inequality(Microsoft.Owin.PathString, Microsoft.Owin.PathString)
        VB: Microsoft.Owin.PathString.Inequality(Microsoft.Owin.PathString, Microsoft.Owin.PathString)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool operator !=(PathString left, PathString right)
          VB: Public Shared Operator <>(left As PathString, right As PathString) As Boolean
        parameters:
        - id: left
          type: Microsoft.Owin.PathString
        - id: right
          type: Microsoft.Owin.PathString
        return:
          type: System.Boolean
      overload: Microsoft.Owin.PathString.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.PathString.op_Addition(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
      commentId: M:Microsoft.Owin.PathString.op_Addition(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
      language: CSharp
      name:
        CSharp: Addition(PathString, PathString)
        VB: Addition(PathString, PathString)
      nameWithType:
        CSharp: PathString.Addition(PathString, PathString)
        VB: PathString.Addition(PathString, PathString)
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.Addition(Microsoft.Owin.PathString, Microsoft.Owin.PathString)
        VB: Microsoft.Owin.PathString.Addition(Microsoft.Owin.PathString, Microsoft.Owin.PathString)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static PathString operator +(PathString left, PathString right)
          VB: Public Shared Operator +(left As PathString, right As PathString) As PathString
        parameters:
        - id: left
          type: Microsoft.Owin.PathString
        - id: right
          type: Microsoft.Owin.PathString
        return:
          type: Microsoft.Owin.PathString
      overload: Microsoft.Owin.PathString.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.PathString.op_Addition(Microsoft.Owin.PathString,Microsoft.Owin.QueryString)
      commentId: M:Microsoft.Owin.PathString.op_Addition(Microsoft.Owin.PathString,Microsoft.Owin.QueryString)
      language: CSharp
      name:
        CSharp: Addition(PathString, QueryString)
        VB: Addition(PathString, QueryString)
      nameWithType:
        CSharp: PathString.Addition(PathString, QueryString)
        VB: PathString.Addition(PathString, QueryString)
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.Addition(Microsoft.Owin.PathString, Microsoft.Owin.QueryString)
        VB: Microsoft.Owin.PathString.Addition(Microsoft.Owin.PathString, Microsoft.Owin.QueryString)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static string operator +(PathString left, QueryString right)
          VB: Public Shared Operator +(left As PathString, right As QueryString) As String
        parameters:
        - id: left
          type: Microsoft.Owin.PathString
        - id: right
          type: Microsoft.Owin.QueryString
        return:
          type: System.String
      overload: Microsoft.Owin.PathString.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.PathString.Value
      commentId: P:Microsoft.Owin.PathString.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: PathString.Value
        VB: PathString.Value
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.Value
        VB: Microsoft.Owin.PathString.Value
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string Value { get; }
          VB: Public ReadOnly Property Value As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.PathString.Value*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.PathString.HasValue
      commentId: P:Microsoft.Owin.PathString.HasValue
      language: CSharp
      name:
        CSharp: HasValue
        VB: HasValue
      nameWithType:
        CSharp: PathString.HasValue
        VB: PathString.HasValue
      qualifiedName:
        CSharp: Microsoft.Owin.PathString.HasValue
        VB: Microsoft.Owin.PathString.HasValue
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool HasValue { get; }
          VB: Public ReadOnly Property HasValue As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Microsoft.Owin.PathString.HasValue*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.Owin.QueryString
    commentId: T:Microsoft.Owin.QueryString
    language: CSharp
    name:
      CSharp: QueryString
      VB: QueryString
    nameWithType:
      CSharp: QueryString
      VB: QueryString
    qualifiedName:
      CSharp: Microsoft.Owin.QueryString
      VB: Microsoft.Owin.QueryString
    type: Struct
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public struct QueryString : IEquatable<QueryString>'
        VB: >-
          Public Structure QueryString

              Implements IEquatable(Of QueryString)
    implements:
    - System.IEquatable{Microsoft.Owin.QueryString}
    inheritedMembers:
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Microsoft.Owin.QueryString.Empty
      commentId: F:Microsoft.Owin.QueryString.Empty
      language: CSharp
      name:
        CSharp: Empty
        VB: Empty
      nameWithType:
        CSharp: QueryString.Empty
        VB: QueryString.Empty
      qualifiedName:
        CSharp: Microsoft.Owin.QueryString.Empty
        VB: Microsoft.Owin.QueryString.Empty
      type: Field
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static readonly QueryString Empty
          VB: Public Shared ReadOnly Empty As QueryString
        return:
          type: Microsoft.Owin.QueryString
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Microsoft.Owin.QueryString.#ctor(System.String)
      commentId: M:Microsoft.Owin.QueryString.#ctor(System.String)
      language: CSharp
      name:
        CSharp: QueryString(String)
        VB: QueryString(String)
      nameWithType:
        CSharp: QueryString.QueryString(String)
        VB: QueryString.QueryString(String)
      qualifiedName:
        CSharp: Microsoft.Owin.QueryString.QueryString(System.String)
        VB: Microsoft.Owin.QueryString.QueryString(System.String)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public QueryString(string value)
          VB: Public Sub New(value As String)
        parameters:
        - id: value
          type: System.String
      overload: Microsoft.Owin.QueryString.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.QueryString.#ctor(System.String,System.String)
      commentId: M:Microsoft.Owin.QueryString.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: QueryString(String, String)
        VB: QueryString(String, String)
      nameWithType:
        CSharp: QueryString.QueryString(String, String)
        VB: QueryString.QueryString(String, String)
      qualifiedName:
        CSharp: Microsoft.Owin.QueryString.QueryString(System.String, System.String)
        VB: Microsoft.Owin.QueryString.QueryString(System.String, System.String)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public QueryString(string name, string value)
          VB: Public Sub New(name As String, value As String)
        parameters:
        - id: name
          type: System.String
        - id: value
          type: System.String
      overload: Microsoft.Owin.QueryString.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.QueryString.ToString
      commentId: M:Microsoft.Owin.QueryString.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: QueryString.ToString()
        VB: QueryString.ToString()
      qualifiedName:
        CSharp: Microsoft.Owin.QueryString.ToString()
        VB: Microsoft.Owin.QueryString.ToString()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: Microsoft.Owin.QueryString.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.QueryString.ToUriComponent
      commentId: M:Microsoft.Owin.QueryString.ToUriComponent
      language: CSharp
      name:
        CSharp: ToUriComponent()
        VB: ToUriComponent()
      nameWithType:
        CSharp: QueryString.ToUriComponent()
        VB: QueryString.ToUriComponent()
      qualifiedName:
        CSharp: Microsoft.Owin.QueryString.ToUriComponent()
        VB: Microsoft.Owin.QueryString.ToUriComponent()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string ToUriComponent()
          VB: Public Function ToUriComponent As String
        return:
          type: System.String
      overload: Microsoft.Owin.QueryString.ToUriComponent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.QueryString.FromUriComponent(System.String)
      commentId: M:Microsoft.Owin.QueryString.FromUriComponent(System.String)
      language: CSharp
      name:
        CSharp: FromUriComponent(String)
        VB: FromUriComponent(String)
      nameWithType:
        CSharp: QueryString.FromUriComponent(String)
        VB: QueryString.FromUriComponent(String)
      qualifiedName:
        CSharp: Microsoft.Owin.QueryString.FromUriComponent(System.String)
        VB: Microsoft.Owin.QueryString.FromUriComponent(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static QueryString FromUriComponent(string uriComponent)
          VB: Public Shared Function FromUriComponent(uriComponent As String) As QueryString
        parameters:
        - id: uriComponent
          type: System.String
        return:
          type: Microsoft.Owin.QueryString
      overload: Microsoft.Owin.QueryString.FromUriComponent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.QueryString.FromUriComponent(System.Uri)
      commentId: M:Microsoft.Owin.QueryString.FromUriComponent(System.Uri)
      language: CSharp
      name:
        CSharp: FromUriComponent(Uri)
        VB: FromUriComponent(Uri)
      nameWithType:
        CSharp: QueryString.FromUriComponent(Uri)
        VB: QueryString.FromUriComponent(Uri)
      qualifiedName:
        CSharp: Microsoft.Owin.QueryString.FromUriComponent(System.Uri)
        VB: Microsoft.Owin.QueryString.FromUriComponent(System.Uri)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static QueryString FromUriComponent(Uri uri)
          VB: Public Shared Function FromUriComponent(uri As Uri) As QueryString
        parameters:
        - id: uri
          type: System.Uri
        return:
          type: Microsoft.Owin.QueryString
      overload: Microsoft.Owin.QueryString.FromUriComponent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.QueryString.Equals(Microsoft.Owin.QueryString)
      commentId: M:Microsoft.Owin.QueryString.Equals(Microsoft.Owin.QueryString)
      language: CSharp
      name:
        CSharp: Equals(QueryString)
        VB: Equals(QueryString)
      nameWithType:
        CSharp: QueryString.Equals(QueryString)
        VB: QueryString.Equals(QueryString)
      qualifiedName:
        CSharp: Microsoft.Owin.QueryString.Equals(Microsoft.Owin.QueryString)
        VB: Microsoft.Owin.QueryString.Equals(Microsoft.Owin.QueryString)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool Equals(QueryString other)
          VB: Public Function Equals(other As QueryString) As Boolean
        parameters:
        - id: other
          type: Microsoft.Owin.QueryString
        return:
          type: System.Boolean
      overload: Microsoft.Owin.QueryString.Equals*
      implements:
      - System.IEquatable{Microsoft.Owin.QueryString}.Equals(Microsoft.Owin.QueryString)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.QueryString.Equals(System.Object)
      commentId: M:Microsoft.Owin.QueryString.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: QueryString.Equals(Object)
        VB: QueryString.Equals(Object)
      qualifiedName:
        CSharp: Microsoft.Owin.QueryString.Equals(System.Object)
        VB: Microsoft.Owin.QueryString.Equals(System.Object)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Microsoft.Owin.QueryString.Equals*
      overridden: System.ValueType.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.QueryString.GetHashCode
      commentId: M:Microsoft.Owin.QueryString.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: QueryString.GetHashCode()
        VB: QueryString.GetHashCode()
      qualifiedName:
        CSharp: Microsoft.Owin.QueryString.GetHashCode()
        VB: Microsoft.Owin.QueryString.GetHashCode()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Microsoft.Owin.QueryString.GetHashCode*
      overridden: System.ValueType.GetHashCode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.QueryString.op_Equality(Microsoft.Owin.QueryString,Microsoft.Owin.QueryString)
      commentId: M:Microsoft.Owin.QueryString.op_Equality(Microsoft.Owin.QueryString,Microsoft.Owin.QueryString)
      language: CSharp
      name:
        CSharp: Equality(QueryString, QueryString)
        VB: Equality(QueryString, QueryString)
      nameWithType:
        CSharp: QueryString.Equality(QueryString, QueryString)
        VB: QueryString.Equality(QueryString, QueryString)
      qualifiedName:
        CSharp: Microsoft.Owin.QueryString.Equality(Microsoft.Owin.QueryString, Microsoft.Owin.QueryString)
        VB: Microsoft.Owin.QueryString.Equality(Microsoft.Owin.QueryString, Microsoft.Owin.QueryString)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool operator ==(QueryString left, QueryString right)
          VB: Public Shared Operator =(left As QueryString, right As QueryString) As Boolean
        parameters:
        - id: left
          type: Microsoft.Owin.QueryString
        - id: right
          type: Microsoft.Owin.QueryString
        return:
          type: System.Boolean
      overload: Microsoft.Owin.QueryString.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.QueryString.op_Inequality(Microsoft.Owin.QueryString,Microsoft.Owin.QueryString)
      commentId: M:Microsoft.Owin.QueryString.op_Inequality(Microsoft.Owin.QueryString,Microsoft.Owin.QueryString)
      language: CSharp
      name:
        CSharp: Inequality(QueryString, QueryString)
        VB: Inequality(QueryString, QueryString)
      nameWithType:
        CSharp: QueryString.Inequality(QueryString, QueryString)
        VB: QueryString.Inequality(QueryString, QueryString)
      qualifiedName:
        CSharp: Microsoft.Owin.QueryString.Inequality(Microsoft.Owin.QueryString, Microsoft.Owin.QueryString)
        VB: Microsoft.Owin.QueryString.Inequality(Microsoft.Owin.QueryString, Microsoft.Owin.QueryString)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool operator !=(QueryString left, QueryString right)
          VB: Public Shared Operator <>(left As QueryString, right As QueryString) As Boolean
        parameters:
        - id: left
          type: Microsoft.Owin.QueryString
        - id: right
          type: Microsoft.Owin.QueryString
        return:
          type: System.Boolean
      overload: Microsoft.Owin.QueryString.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.QueryString.Value
      commentId: P:Microsoft.Owin.QueryString.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: QueryString.Value
        VB: QueryString.Value
      qualifiedName:
        CSharp: Microsoft.Owin.QueryString.Value
        VB: Microsoft.Owin.QueryString.Value
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string Value { get; }
          VB: Public ReadOnly Property Value As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.QueryString.Value*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.QueryString.HasValue
      commentId: P:Microsoft.Owin.QueryString.HasValue
      language: CSharp
      name:
        CSharp: HasValue
        VB: HasValue
      nameWithType:
        CSharp: QueryString.HasValue
        VB: QueryString.HasValue
      qualifiedName:
        CSharp: Microsoft.Owin.QueryString.HasValue
        VB: Microsoft.Owin.QueryString.HasValue
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool HasValue { get; }
          VB: Public ReadOnly Property HasValue As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Microsoft.Owin.QueryString.HasValue*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.Owin.RequestCookieCollection
    commentId: T:Microsoft.Owin.RequestCookieCollection
    language: CSharp
    name:
      CSharp: RequestCookieCollection
      VB: RequestCookieCollection
    nameWithType:
      CSharp: RequestCookieCollection
      VB: RequestCookieCollection
    qualifiedName:
      CSharp: Microsoft.Owin.RequestCookieCollection
      VB: Microsoft.Owin.RequestCookieCollection
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public class RequestCookieCollection : IEnumerable<KeyValuePair<string, string>>, IEnumerable'
        VB: >-
          Public Class RequestCookieCollection

              Implements IEnumerable(Of KeyValuePair(Of String, String)), IEnumerable
    inheritance:
    - System.Object
    implements:
    - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    - System.Collections.IEnumerable
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.RequestCookieCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
      commentId: M:Microsoft.Owin.RequestCookieCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
      language: CSharp
      name:
        CSharp: RequestCookieCollection(IDictionary<String, String>)
        VB: RequestCookieCollection(IDictionary(Of String, String))
      nameWithType:
        CSharp: RequestCookieCollection.RequestCookieCollection(IDictionary<String, String>)
        VB: RequestCookieCollection.RequestCookieCollection(IDictionary(Of String, String))
      qualifiedName:
        CSharp: Microsoft.Owin.RequestCookieCollection.RequestCookieCollection(System.Collections.Generic.IDictionary<System.String, System.String>)
        VB: Microsoft.Owin.RequestCookieCollection.RequestCookieCollection(System.Collections.Generic.IDictionary(Of System.String, System.String))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public RequestCookieCollection(IDictionary<string, string> store)
          VB: Public Sub New(store As IDictionary(Of String, String))
        parameters:
        - id: store
          type: System.Collections.Generic.IDictionary{System.String,System.String}
      overload: Microsoft.Owin.RequestCookieCollection.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.RequestCookieCollection.GetEnumerator
      commentId: M:Microsoft.Owin.RequestCookieCollection.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: RequestCookieCollection.GetEnumerator()
        VB: RequestCookieCollection.GetEnumerator()
      qualifiedName:
        CSharp: Microsoft.Owin.RequestCookieCollection.GetEnumerator()
        VB: Microsoft.Owin.RequestCookieCollection.GetEnumerator()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IEnumerator<KeyValuePair<string, string>> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of String, String))
        return:
          type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      overload: Microsoft.Owin.RequestCookieCollection.GetEnumerator*
      implements:
      - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}.GetEnumerator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - isEii: true
      id: Microsoft.Owin.RequestCookieCollection.System#Collections#IEnumerable#GetEnumerator
      commentId: M:Microsoft.Owin.RequestCookieCollection.System#Collections#IEnumerable#GetEnumerator
      language: CSharp
      name:
        CSharp: IEnumerable.GetEnumerator()
        VB: System.Collections.IEnumerable.GetEnumerator()
      nameWithType:
        CSharp: RequestCookieCollection.IEnumerable.GetEnumerator()
        VB: RequestCookieCollection.System.Collections.IEnumerable.GetEnumerator()
      qualifiedName:
        CSharp: Microsoft.Owin.RequestCookieCollection.System.Collections.IEnumerable.GetEnumerator()
        VB: Microsoft.Owin.RequestCookieCollection.System.Collections.IEnumerable.GetEnumerator()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IEnumerator IEnumerable.GetEnumerator()
          VB: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: Microsoft.Owin.RequestCookieCollection.System#Collections#IEnumerable#GetEnumerator*
      implements:
      - System.Collections.IEnumerable.GetEnumerator
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.RequestCookieCollection.Item(System.String)
      commentId: P:Microsoft.Owin.RequestCookieCollection.Item(System.String)
      language: CSharp
      name:
        CSharp: Item[String]
        VB: Item(String)
      nameWithType:
        CSharp: RequestCookieCollection.Item[String]
        VB: RequestCookieCollection.Item(String)
      qualifiedName:
        CSharp: Microsoft.Owin.RequestCookieCollection.Item[System.String]
        VB: Microsoft.Owin.RequestCookieCollection.Item(System.String)
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string this[string key] { get; }
          VB: Public ReadOnly Property Item(key As String) As String
        parameters:
        - id: key
          type: System.String
        return:
          type: System.String
      overload: Microsoft.Owin.RequestCookieCollection.Item*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.Owin.ResponseCookieCollection
    commentId: T:Microsoft.Owin.ResponseCookieCollection
    language: CSharp
    name:
      CSharp: ResponseCookieCollection
      VB: ResponseCookieCollection
    nameWithType:
      CSharp: ResponseCookieCollection
      VB: ResponseCookieCollection
    qualifiedName:
      CSharp: Microsoft.Owin.ResponseCookieCollection
      VB: Microsoft.Owin.ResponseCookieCollection
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public class ResponseCookieCollection
        VB: Public Class ResponseCookieCollection
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.ResponseCookieCollection.#ctor(Microsoft.Owin.IHeaderDictionary)
      commentId: M:Microsoft.Owin.ResponseCookieCollection.#ctor(Microsoft.Owin.IHeaderDictionary)
      language: CSharp
      name:
        CSharp: ResponseCookieCollection(IHeaderDictionary)
        VB: ResponseCookieCollection(IHeaderDictionary)
      nameWithType:
        CSharp: ResponseCookieCollection.ResponseCookieCollection(IHeaderDictionary)
        VB: ResponseCookieCollection.ResponseCookieCollection(IHeaderDictionary)
      qualifiedName:
        CSharp: Microsoft.Owin.ResponseCookieCollection.ResponseCookieCollection(Microsoft.Owin.IHeaderDictionary)
        VB: Microsoft.Owin.ResponseCookieCollection.ResponseCookieCollection(Microsoft.Owin.IHeaderDictionary)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public ResponseCookieCollection(IHeaderDictionary headers)
          VB: Public Sub New(headers As IHeaderDictionary)
        parameters:
        - id: headers
          type: Microsoft.Owin.IHeaderDictionary
      overload: Microsoft.Owin.ResponseCookieCollection.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.ResponseCookieCollection.Append(System.String,System.String)
      commentId: M:Microsoft.Owin.ResponseCookieCollection.Append(System.String,System.String)
      language: CSharp
      name:
        CSharp: Append(String, String)
        VB: Append(String, String)
      nameWithType:
        CSharp: ResponseCookieCollection.Append(String, String)
        VB: ResponseCookieCollection.Append(String, String)
      qualifiedName:
        CSharp: Microsoft.Owin.ResponseCookieCollection.Append(System.String, System.String)
        VB: Microsoft.Owin.ResponseCookieCollection.Append(System.String, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void Append(string key, string value)
          VB: Public Sub Append(key As String, value As String)
        parameters:
        - id: key
          type: System.String
        - id: value
          type: System.String
      overload: Microsoft.Owin.ResponseCookieCollection.Append*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.ResponseCookieCollection.Append(System.String,System.String,Microsoft.Owin.CookieOptions)
      commentId: M:Microsoft.Owin.ResponseCookieCollection.Append(System.String,System.String,Microsoft.Owin.CookieOptions)
      language: CSharp
      name:
        CSharp: Append(String, String, CookieOptions)
        VB: Append(String, String, CookieOptions)
      nameWithType:
        CSharp: ResponseCookieCollection.Append(String, String, CookieOptions)
        VB: ResponseCookieCollection.Append(String, String, CookieOptions)
      qualifiedName:
        CSharp: Microsoft.Owin.ResponseCookieCollection.Append(System.String, System.String, Microsoft.Owin.CookieOptions)
        VB: Microsoft.Owin.ResponseCookieCollection.Append(System.String, System.String, Microsoft.Owin.CookieOptions)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void Append(string key, string value, CookieOptions options)
          VB: Public Sub Append(key As String, value As String, options As CookieOptions)
        parameters:
        - id: key
          type: System.String
        - id: value
          type: System.String
        - id: options
          type: Microsoft.Owin.CookieOptions
      overload: Microsoft.Owin.ResponseCookieCollection.Append*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.ResponseCookieCollection.Delete(System.String)
      commentId: M:Microsoft.Owin.ResponseCookieCollection.Delete(System.String)
      language: CSharp
      name:
        CSharp: Delete(String)
        VB: Delete(String)
      nameWithType:
        CSharp: ResponseCookieCollection.Delete(String)
        VB: ResponseCookieCollection.Delete(String)
      qualifiedName:
        CSharp: Microsoft.Owin.ResponseCookieCollection.Delete(System.String)
        VB: Microsoft.Owin.ResponseCookieCollection.Delete(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void Delete(string key)
          VB: Public Sub Delete(key As String)
        parameters:
        - id: key
          type: System.String
      overload: Microsoft.Owin.ResponseCookieCollection.Delete*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.ResponseCookieCollection.Delete(System.String,Microsoft.Owin.CookieOptions)
      commentId: M:Microsoft.Owin.ResponseCookieCollection.Delete(System.String,Microsoft.Owin.CookieOptions)
      language: CSharp
      name:
        CSharp: Delete(String, CookieOptions)
        VB: Delete(String, CookieOptions)
      nameWithType:
        CSharp: ResponseCookieCollection.Delete(String, CookieOptions)
        VB: ResponseCookieCollection.Delete(String, CookieOptions)
      qualifiedName:
        CSharp: Microsoft.Owin.ResponseCookieCollection.Delete(System.String, Microsoft.Owin.CookieOptions)
        VB: Microsoft.Owin.ResponseCookieCollection.Delete(System.String, Microsoft.Owin.CookieOptions)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void Delete(string key, CookieOptions options)
          VB: Public Sub Delete(key As String, options As CookieOptions)
        parameters:
        - id: key
          type: System.String
        - id: options
          type: Microsoft.Owin.CookieOptions
      overload: Microsoft.Owin.ResponseCookieCollection.Delete*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Microsoft.Owin.CookieOptions
    commentId: T:Microsoft.Owin.CookieOptions
    language: CSharp
    name:
      CSharp: CookieOptions
      VB: CookieOptions
    nameWithType:
      CSharp: CookieOptions
      VB: CookieOptions
    qualifiedName:
      CSharp: Microsoft.Owin.CookieOptions
      VB: Microsoft.Owin.CookieOptions
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public class CookieOptions
        VB: Public Class CookieOptions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.CookieOptions.#ctor
      commentId: M:Microsoft.Owin.CookieOptions.#ctor
      language: CSharp
      name:
        CSharp: CookieOptions()
        VB: CookieOptions()
      nameWithType:
        CSharp: CookieOptions.CookieOptions()
        VB: CookieOptions.CookieOptions()
      qualifiedName:
        CSharp: Microsoft.Owin.CookieOptions.CookieOptions()
        VB: Microsoft.Owin.CookieOptions.CookieOptions()
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public CookieOptions()
          VB: Public Sub New
      overload: Microsoft.Owin.CookieOptions.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.CookieOptions.Domain
      commentId: P:Microsoft.Owin.CookieOptions.Domain
      language: CSharp
      name:
        CSharp: Domain
        VB: Domain
      nameWithType:
        CSharp: CookieOptions.Domain
        VB: CookieOptions.Domain
      qualifiedName:
        CSharp: Microsoft.Owin.CookieOptions.Domain
        VB: Microsoft.Owin.CookieOptions.Domain
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string Domain { get; set; }
          VB: Public Property Domain As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.CookieOptions.Domain*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.CookieOptions.Path
      commentId: P:Microsoft.Owin.CookieOptions.Path
      language: CSharp
      name:
        CSharp: Path
        VB: Path
      nameWithType:
        CSharp: CookieOptions.Path
        VB: CookieOptions.Path
      qualifiedName:
        CSharp: Microsoft.Owin.CookieOptions.Path
        VB: Microsoft.Owin.CookieOptions.Path
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string Path { get; set; }
          VB: Public Property Path As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.CookieOptions.Path*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.CookieOptions.Expires
      commentId: P:Microsoft.Owin.CookieOptions.Expires
      language: CSharp
      name:
        CSharp: Expires
        VB: Expires
      nameWithType:
        CSharp: CookieOptions.Expires
        VB: CookieOptions.Expires
      qualifiedName:
        CSharp: Microsoft.Owin.CookieOptions.Expires
        VB: Microsoft.Owin.CookieOptions.Expires
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public DateTime? Expires { get; set; }
          VB: Public Property Expires As Date?
        parameters: []
        return:
          type: System.Nullable{System.DateTime}
      overload: Microsoft.Owin.CookieOptions.Expires*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.CookieOptions.Secure
      commentId: P:Microsoft.Owin.CookieOptions.Secure
      language: CSharp
      name:
        CSharp: Secure
        VB: Secure
      nameWithType:
        CSharp: CookieOptions.Secure
        VB: CookieOptions.Secure
      qualifiedName:
        CSharp: Microsoft.Owin.CookieOptions.Secure
        VB: Microsoft.Owin.CookieOptions.Secure
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool Secure { get; set; }
          VB: Public Property Secure As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Microsoft.Owin.CookieOptions.Secure*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.CookieOptions.HttpOnly
      commentId: P:Microsoft.Owin.CookieOptions.HttpOnly
      language: CSharp
      name:
        CSharp: HttpOnly
        VB: HttpOnly
      nameWithType:
        CSharp: CookieOptions.HttpOnly
        VB: CookieOptions.HttpOnly
      qualifiedName:
        CSharp: Microsoft.Owin.CookieOptions.HttpOnly
        VB: Microsoft.Owin.CookieOptions.HttpOnly
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool HttpOnly { get; set; }
          VB: Public Property HttpOnly As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Microsoft.Owin.CookieOptions.HttpOnly*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Microsoft.Owin.OwinMiddleware
    commentId: T:Microsoft.Owin.OwinMiddleware
    language: CSharp
    name:
      CSharp: OwinMiddleware
      VB: OwinMiddleware
    nameWithType:
      CSharp: OwinMiddleware
      VB: OwinMiddleware
    qualifiedName:
      CSharp: Microsoft.Owin.OwinMiddleware
      VB: Microsoft.Owin.OwinMiddleware
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public abstract class OwinMiddleware
        VB: Public MustInherit Class OwinMiddleware
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Microsoft.Owin.OwinMiddleware.#ctor(Microsoft.Owin.OwinMiddleware)
      commentId: M:Microsoft.Owin.OwinMiddleware.#ctor(Microsoft.Owin.OwinMiddleware)
      language: CSharp
      name:
        CSharp: OwinMiddleware(OwinMiddleware)
        VB: OwinMiddleware(OwinMiddleware)
      nameWithType:
        CSharp: OwinMiddleware.OwinMiddleware(OwinMiddleware)
        VB: OwinMiddleware.OwinMiddleware(OwinMiddleware)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinMiddleware.OwinMiddleware(Microsoft.Owin.OwinMiddleware)
        VB: Microsoft.Owin.OwinMiddleware.OwinMiddleware(Microsoft.Owin.OwinMiddleware)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: protected OwinMiddleware(OwinMiddleware next)
          VB: Protected Sub New(next As OwinMiddleware)
        parameters:
        - id: next
          type: Microsoft.Owin.OwinMiddleware
      overload: Microsoft.Owin.OwinMiddleware.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Microsoft.Owin.OwinMiddleware.Invoke(Microsoft.Owin.IOwinContext)
      commentId: M:Microsoft.Owin.OwinMiddleware.Invoke(Microsoft.Owin.IOwinContext)
      language: CSharp
      name:
        CSharp: Invoke(IOwinContext)
        VB: Invoke(IOwinContext)
      nameWithType:
        CSharp: OwinMiddleware.Invoke(IOwinContext)
        VB: OwinMiddleware.Invoke(IOwinContext)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinMiddleware.Invoke(Microsoft.Owin.IOwinContext)
        VB: Microsoft.Owin.OwinMiddleware.Invoke(Microsoft.Owin.IOwinContext)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public abstract Task Invoke(IOwinContext context)
          VB: Public MustOverride Function Invoke(context As IOwinContext) As Task
        parameters:
        - id: context
          type: Microsoft.Owin.IOwinContext
        return:
          type: System.Threading.Tasks.Task
      overload: Microsoft.Owin.OwinMiddleware.Invoke*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: Microsoft.Owin.OwinMiddleware.Next
      commentId: P:Microsoft.Owin.OwinMiddleware.Next
      language: CSharp
      name:
        CSharp: Next
        VB: Next
      nameWithType:
        CSharp: OwinMiddleware.Next
        VB: OwinMiddleware.Next
      qualifiedName:
        CSharp: Microsoft.Owin.OwinMiddleware.Next
        VB: Microsoft.Owin.OwinMiddleware.Next
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: protected OwinMiddleware Next { get; set; }
          VB: Protected Property Next As OwinMiddleware
        parameters: []
        return:
          type: Microsoft.Owin.OwinMiddleware
      overload: Microsoft.Owin.OwinMiddleware.Next*
      modifiers:
        CSharp:
        - protected
        - get
        - set
        VB:
        - Protected
  - id: Microsoft.Owin.OwinRequest
    commentId: T:Microsoft.Owin.OwinRequest
    language: CSharp
    name:
      CSharp: OwinRequest
      VB: OwinRequest
    nameWithType:
      CSharp: OwinRequest
      VB: OwinRequest
    qualifiedName:
      CSharp: Microsoft.Owin.OwinRequest
      VB: Microsoft.Owin.OwinRequest
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public class OwinRequest : IOwinRequest'
        VB: >-
          Public Class OwinRequest

              Implements IOwinRequest
    inheritance:
    - System.Object
    implements:
    - Microsoft.Owin.IOwinRequest
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.OwinRequest.#ctor
      commentId: M:Microsoft.Owin.OwinRequest.#ctor
      language: CSharp
      name:
        CSharp: OwinRequest()
        VB: OwinRequest()
      nameWithType:
        CSharp: OwinRequest.OwinRequest()
        VB: OwinRequest.OwinRequest()
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.OwinRequest()
        VB: Microsoft.Owin.OwinRequest.OwinRequest()
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public OwinRequest()
          VB: Public Sub New
      overload: Microsoft.Owin.OwinRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.OwinRequest.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
      commentId: M:Microsoft.Owin.OwinRequest.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: OwinRequest(IDictionary<String, Object>)
        VB: OwinRequest(IDictionary(Of String, Object))
      nameWithType:
        CSharp: OwinRequest.OwinRequest(IDictionary<String, Object>)
        VB: OwinRequest.OwinRequest(IDictionary(Of String, Object))
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.OwinRequest(System.Collections.Generic.IDictionary<System.String, System.Object>)
        VB: Microsoft.Owin.OwinRequest.OwinRequest(System.Collections.Generic.IDictionary(Of System.String, System.Object))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public OwinRequest(IDictionary<string, object> environment)
          VB: Public Sub New(environment As IDictionary(Of String, Object))
        parameters:
        - id: environment
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.OwinRequest.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.OwinRequest.ReadFormAsync
      commentId: M:Microsoft.Owin.OwinRequest.ReadFormAsync
      language: CSharp
      name:
        CSharp: ReadFormAsync()
        VB: ReadFormAsync()
      nameWithType:
        CSharp: OwinRequest.ReadFormAsync()
        VB: OwinRequest.ReadFormAsync()
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.ReadFormAsync()
        VB: Microsoft.Owin.OwinRequest.ReadFormAsync()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Task<IFormCollection> ReadFormAsync()
          VB: Public Function ReadFormAsync As Task(Of IFormCollection)
        return:
          type: System.Threading.Tasks.Task{Microsoft.Owin.IFormCollection}
      overload: Microsoft.Owin.OwinRequest.ReadFormAsync*
      implements:
      - Microsoft.Owin.IOwinRequest.ReadFormAsync
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.OwinRequest.Get``1(System.String)
      commentId: M:Microsoft.Owin.OwinRequest.Get``1(System.String)
      language: CSharp
      name:
        CSharp: Get<T>(String)
        VB: Get(Of T)(String)
      nameWithType:
        CSharp: OwinRequest.Get<T>(String)
        VB: OwinRequest.Get(Of T)(String)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Get<T>(System.String)
        VB: Microsoft.Owin.OwinRequest.Get(Of T)(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual T Get<T>(string key)
          VB: Public Overridable Function Get(Of T)(key As String) As T
        parameters:
        - id: key
          type: System.String
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Microsoft.Owin.OwinRequest.Get*
      implements:
      - Microsoft.Owin.IOwinRequest.Get``1(System.String)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.Set``1(System.String,``0)
      commentId: M:Microsoft.Owin.OwinRequest.Set``1(System.String,``0)
      language: CSharp
      name:
        CSharp: Set<T>(String, T)
        VB: Set(Of T)(String, T)
      nameWithType:
        CSharp: OwinRequest.Set<T>(String, T)
        VB: OwinRequest.Set(Of T)(String, T)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Set<T>(System.String, T)
        VB: Microsoft.Owin.OwinRequest.Set(Of T)(System.String, T)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual IOwinRequest Set<T>(string key, T value)
          VB: Public Overridable Function Set(Of T)(key As String, value As T) As IOwinRequest
        parameters:
        - id: key
          type: System.String
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Microsoft.Owin.IOwinRequest
      overload: Microsoft.Owin.OwinRequest.Set*
      implements:
      - Microsoft.Owin.IOwinRequest.Set``1(System.String,{T})
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.Environment
      commentId: P:Microsoft.Owin.OwinRequest.Environment
      language: CSharp
      name:
        CSharp: Environment
        VB: Environment
      nameWithType:
        CSharp: OwinRequest.Environment
        VB: OwinRequest.Environment
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Environment
        VB: Microsoft.Owin.OwinRequest.Environment
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual IDictionary<string, object> Environment { get; }
          VB: Public Overridable ReadOnly Property Environment As IDictionary(Of String, Object)
        parameters: []
        return:
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.OwinRequest.Environment*
      implements:
      - Microsoft.Owin.IOwinRequest.Environment
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: Microsoft.Owin.OwinRequest.Context
      commentId: P:Microsoft.Owin.OwinRequest.Context
      language: CSharp
      name:
        CSharp: Context
        VB: Context
      nameWithType:
        CSharp: OwinRequest.Context
        VB: OwinRequest.Context
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Context
        VB: Microsoft.Owin.OwinRequest.Context
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual IOwinContext Context { get; }
          VB: Public Overridable ReadOnly Property Context As IOwinContext
        parameters: []
        return:
          type: Microsoft.Owin.IOwinContext
      overload: Microsoft.Owin.OwinRequest.Context*
      implements:
      - Microsoft.Owin.IOwinRequest.Context
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: Microsoft.Owin.OwinRequest.Method
      commentId: P:Microsoft.Owin.OwinRequest.Method
      language: CSharp
      name:
        CSharp: Method
        VB: Method
      nameWithType:
        CSharp: OwinRequest.Method
        VB: OwinRequest.Method
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Method
        VB: Microsoft.Owin.OwinRequest.Method
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual string Method { get; set; }
          VB: Public Overridable Property Method As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinRequest.Method*
      implements:
      - Microsoft.Owin.IOwinRequest.Method
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.Scheme
      commentId: P:Microsoft.Owin.OwinRequest.Scheme
      language: CSharp
      name:
        CSharp: Scheme
        VB: Scheme
      nameWithType:
        CSharp: OwinRequest.Scheme
        VB: OwinRequest.Scheme
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Scheme
        VB: Microsoft.Owin.OwinRequest.Scheme
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual string Scheme { get; set; }
          VB: Public Overridable Property Scheme As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinRequest.Scheme*
      implements:
      - Microsoft.Owin.IOwinRequest.Scheme
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.IsSecure
      commentId: P:Microsoft.Owin.OwinRequest.IsSecure
      language: CSharp
      name:
        CSharp: IsSecure
        VB: IsSecure
      nameWithType:
        CSharp: OwinRequest.IsSecure
        VB: OwinRequest.IsSecure
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.IsSecure
        VB: Microsoft.Owin.OwinRequest.IsSecure
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual bool IsSecure { get; }
          VB: Public Overridable ReadOnly Property IsSecure As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Microsoft.Owin.OwinRequest.IsSecure*
      implements:
      - Microsoft.Owin.IOwinRequest.IsSecure
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: Microsoft.Owin.OwinRequest.Host
      commentId: P:Microsoft.Owin.OwinRequest.Host
      language: CSharp
      name:
        CSharp: Host
        VB: Host
      nameWithType:
        CSharp: OwinRequest.Host
        VB: OwinRequest.Host
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Host
        VB: Microsoft.Owin.OwinRequest.Host
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual HostString Host { get; set; }
          VB: Public Overridable Property Host As HostString
        parameters: []
        return:
          type: Microsoft.Owin.HostString
      overload: Microsoft.Owin.OwinRequest.Host*
      implements:
      - Microsoft.Owin.IOwinRequest.Host
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.PathBase
      commentId: P:Microsoft.Owin.OwinRequest.PathBase
      language: CSharp
      name:
        CSharp: PathBase
        VB: PathBase
      nameWithType:
        CSharp: OwinRequest.PathBase
        VB: OwinRequest.PathBase
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.PathBase
        VB: Microsoft.Owin.OwinRequest.PathBase
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual PathString PathBase { get; set; }
          VB: Public Overridable Property PathBase As PathString
        parameters: []
        return:
          type: Microsoft.Owin.PathString
      overload: Microsoft.Owin.OwinRequest.PathBase*
      implements:
      - Microsoft.Owin.IOwinRequest.PathBase
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.Path
      commentId: P:Microsoft.Owin.OwinRequest.Path
      language: CSharp
      name:
        CSharp: Path
        VB: Path
      nameWithType:
        CSharp: OwinRequest.Path
        VB: OwinRequest.Path
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Path
        VB: Microsoft.Owin.OwinRequest.Path
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual PathString Path { get; set; }
          VB: Public Overridable Property Path As PathString
        parameters: []
        return:
          type: Microsoft.Owin.PathString
      overload: Microsoft.Owin.OwinRequest.Path*
      implements:
      - Microsoft.Owin.IOwinRequest.Path
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.QueryString
      commentId: P:Microsoft.Owin.OwinRequest.QueryString
      language: CSharp
      name:
        CSharp: QueryString
        VB: QueryString
      nameWithType:
        CSharp: OwinRequest.QueryString
        VB: OwinRequest.QueryString
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.QueryString
        VB: Microsoft.Owin.OwinRequest.QueryString
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual QueryString QueryString { get; set; }
          VB: Public Overridable Property QueryString As QueryString
        parameters: []
        return:
          type: Microsoft.Owin.QueryString
      overload: Microsoft.Owin.OwinRequest.QueryString*
      implements:
      - Microsoft.Owin.IOwinRequest.QueryString
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.Query
      commentId: P:Microsoft.Owin.OwinRequest.Query
      language: CSharp
      name:
        CSharp: Query
        VB: Query
      nameWithType:
        CSharp: OwinRequest.Query
        VB: OwinRequest.Query
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Query
        VB: Microsoft.Owin.OwinRequest.Query
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual IReadableStringCollection Query { get; }
          VB: Public Overridable ReadOnly Property Query As IReadableStringCollection
        parameters: []
        return:
          type: Microsoft.Owin.IReadableStringCollection
      overload: Microsoft.Owin.OwinRequest.Query*
      implements:
      - Microsoft.Owin.IOwinRequest.Query
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: Microsoft.Owin.OwinRequest.Uri
      commentId: P:Microsoft.Owin.OwinRequest.Uri
      language: CSharp
      name:
        CSharp: Uri
        VB: Uri
      nameWithType:
        CSharp: OwinRequest.Uri
        VB: OwinRequest.Uri
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Uri
        VB: Microsoft.Owin.OwinRequest.Uri
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual Uri Uri { get; }
          VB: Public Overridable ReadOnly Property Uri As Uri
        parameters: []
        return:
          type: System.Uri
      overload: Microsoft.Owin.OwinRequest.Uri*
      implements:
      - Microsoft.Owin.IOwinRequest.Uri
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: Microsoft.Owin.OwinRequest.Protocol
      commentId: P:Microsoft.Owin.OwinRequest.Protocol
      language: CSharp
      name:
        CSharp: Protocol
        VB: Protocol
      nameWithType:
        CSharp: OwinRequest.Protocol
        VB: OwinRequest.Protocol
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Protocol
        VB: Microsoft.Owin.OwinRequest.Protocol
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual string Protocol { get; set; }
          VB: Public Overridable Property Protocol As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinRequest.Protocol*
      implements:
      - Microsoft.Owin.IOwinRequest.Protocol
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.Headers
      commentId: P:Microsoft.Owin.OwinRequest.Headers
      language: CSharp
      name:
        CSharp: Headers
        VB: Headers
      nameWithType:
        CSharp: OwinRequest.Headers
        VB: OwinRequest.Headers
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Headers
        VB: Microsoft.Owin.OwinRequest.Headers
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual IHeaderDictionary Headers { get; }
          VB: Public Overridable ReadOnly Property Headers As IHeaderDictionary
        parameters: []
        return:
          type: Microsoft.Owin.IHeaderDictionary
      overload: Microsoft.Owin.OwinRequest.Headers*
      implements:
      - Microsoft.Owin.IOwinRequest.Headers
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: Microsoft.Owin.OwinRequest.Cookies
      commentId: P:Microsoft.Owin.OwinRequest.Cookies
      language: CSharp
      name:
        CSharp: Cookies
        VB: Cookies
      nameWithType:
        CSharp: OwinRequest.Cookies
        VB: OwinRequest.Cookies
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Cookies
        VB: Microsoft.Owin.OwinRequest.Cookies
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public RequestCookieCollection Cookies { get; }
          VB: Public ReadOnly Property Cookies As RequestCookieCollection
        parameters: []
        return:
          type: Microsoft.Owin.RequestCookieCollection
      overload: Microsoft.Owin.OwinRequest.Cookies*
      implements:
      - Microsoft.Owin.IOwinRequest.Cookies
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.OwinRequest.ContentType
      commentId: P:Microsoft.Owin.OwinRequest.ContentType
      language: CSharp
      name:
        CSharp: ContentType
        VB: ContentType
      nameWithType:
        CSharp: OwinRequest.ContentType
        VB: OwinRequest.ContentType
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.ContentType
        VB: Microsoft.Owin.OwinRequest.ContentType
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual string ContentType { get; set; }
          VB: Public Overridable Property ContentType As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinRequest.ContentType*
      implements:
      - Microsoft.Owin.IOwinRequest.ContentType
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.CacheControl
      commentId: P:Microsoft.Owin.OwinRequest.CacheControl
      language: CSharp
      name:
        CSharp: CacheControl
        VB: CacheControl
      nameWithType:
        CSharp: OwinRequest.CacheControl
        VB: OwinRequest.CacheControl
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.CacheControl
        VB: Microsoft.Owin.OwinRequest.CacheControl
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual string CacheControl { get; set; }
          VB: Public Overridable Property CacheControl As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinRequest.CacheControl*
      implements:
      - Microsoft.Owin.IOwinRequest.CacheControl
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.MediaType
      commentId: P:Microsoft.Owin.OwinRequest.MediaType
      language: CSharp
      name:
        CSharp: MediaType
        VB: MediaType
      nameWithType:
        CSharp: OwinRequest.MediaType
        VB: OwinRequest.MediaType
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.MediaType
        VB: Microsoft.Owin.OwinRequest.MediaType
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual string MediaType { get; set; }
          VB: Public Overridable Property MediaType As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinRequest.MediaType*
      implements:
      - Microsoft.Owin.IOwinRequest.MediaType
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.Accept
      commentId: P:Microsoft.Owin.OwinRequest.Accept
      language: CSharp
      name:
        CSharp: Accept
        VB: Accept
      nameWithType:
        CSharp: OwinRequest.Accept
        VB: OwinRequest.Accept
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Accept
        VB: Microsoft.Owin.OwinRequest.Accept
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual string Accept { get; set; }
          VB: Public Overridable Property Accept As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinRequest.Accept*
      implements:
      - Microsoft.Owin.IOwinRequest.Accept
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.Body
      commentId: P:Microsoft.Owin.OwinRequest.Body
      language: CSharp
      name:
        CSharp: Body
        VB: Body
      nameWithType:
        CSharp: OwinRequest.Body
        VB: OwinRequest.Body
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.Body
        VB: Microsoft.Owin.OwinRequest.Body
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual Stream Body { get; set; }
          VB: Public Overridable Property Body As Stream
        parameters: []
        return:
          type: System.IO.Stream
      overload: Microsoft.Owin.OwinRequest.Body*
      implements:
      - Microsoft.Owin.IOwinRequest.Body
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.CallCancelled
      commentId: P:Microsoft.Owin.OwinRequest.CallCancelled
      language: CSharp
      name:
        CSharp: CallCancelled
        VB: CallCancelled
      nameWithType:
        CSharp: OwinRequest.CallCancelled
        VB: OwinRequest.CallCancelled
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.CallCancelled
        VB: Microsoft.Owin.OwinRequest.CallCancelled
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual CancellationToken CallCancelled { get; set; }
          VB: Public Overridable Property CallCancelled As CancellationToken
        parameters: []
        return:
          type: System.Threading.CancellationToken
      overload: Microsoft.Owin.OwinRequest.CallCancelled*
      implements:
      - Microsoft.Owin.IOwinRequest.CallCancelled
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.LocalIpAddress
      commentId: P:Microsoft.Owin.OwinRequest.LocalIpAddress
      language: CSharp
      name:
        CSharp: LocalIpAddress
        VB: LocalIpAddress
      nameWithType:
        CSharp: OwinRequest.LocalIpAddress
        VB: OwinRequest.LocalIpAddress
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.LocalIpAddress
        VB: Microsoft.Owin.OwinRequest.LocalIpAddress
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual string LocalIpAddress { get; set; }
          VB: Public Overridable Property LocalIpAddress As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinRequest.LocalIpAddress*
      implements:
      - Microsoft.Owin.IOwinRequest.LocalIpAddress
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.LocalPort
      commentId: P:Microsoft.Owin.OwinRequest.LocalPort
      language: CSharp
      name:
        CSharp: LocalPort
        VB: LocalPort
      nameWithType:
        CSharp: OwinRequest.LocalPort
        VB: OwinRequest.LocalPort
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.LocalPort
        VB: Microsoft.Owin.OwinRequest.LocalPort
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual int? LocalPort { get; set; }
          VB: Public Overridable Property LocalPort As Integer?
        parameters: []
        return:
          type: System.Nullable{System.Int32}
      overload: Microsoft.Owin.OwinRequest.LocalPort*
      implements:
      - Microsoft.Owin.IOwinRequest.LocalPort
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.RemoteIpAddress
      commentId: P:Microsoft.Owin.OwinRequest.RemoteIpAddress
      language: CSharp
      name:
        CSharp: RemoteIpAddress
        VB: RemoteIpAddress
      nameWithType:
        CSharp: OwinRequest.RemoteIpAddress
        VB: OwinRequest.RemoteIpAddress
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.RemoteIpAddress
        VB: Microsoft.Owin.OwinRequest.RemoteIpAddress
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual string RemoteIpAddress { get; set; }
          VB: Public Overridable Property RemoteIpAddress As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinRequest.RemoteIpAddress*
      implements:
      - Microsoft.Owin.IOwinRequest.RemoteIpAddress
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.RemotePort
      commentId: P:Microsoft.Owin.OwinRequest.RemotePort
      language: CSharp
      name:
        CSharp: RemotePort
        VB: RemotePort
      nameWithType:
        CSharp: OwinRequest.RemotePort
        VB: OwinRequest.RemotePort
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.RemotePort
        VB: Microsoft.Owin.OwinRequest.RemotePort
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual int? RemotePort { get; set; }
          VB: Public Overridable Property RemotePort As Integer?
        parameters: []
        return:
          type: System.Nullable{System.Int32}
      overload: Microsoft.Owin.OwinRequest.RemotePort*
      implements:
      - Microsoft.Owin.IOwinRequest.RemotePort
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinRequest.User
      commentId: P:Microsoft.Owin.OwinRequest.User
      language: CSharp
      name:
        CSharp: User
        VB: User
      nameWithType:
        CSharp: OwinRequest.User
        VB: OwinRequest.User
      qualifiedName:
        CSharp: Microsoft.Owin.OwinRequest.User
        VB: Microsoft.Owin.OwinRequest.User
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual IPrincipal User { get; set; }
          VB: Public Overridable Property User As IPrincipal
        parameters: []
        return:
          type: System.Security.Principal.IPrincipal
      overload: Microsoft.Owin.OwinRequest.User*
      implements:
      - Microsoft.Owin.IOwinRequest.User
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
  - id: Microsoft.Owin.OwinResponse
    commentId: T:Microsoft.Owin.OwinResponse
    language: CSharp
    name:
      CSharp: OwinResponse
      VB: OwinResponse
    nameWithType:
      CSharp: OwinResponse
      VB: OwinResponse
    qualifiedName:
      CSharp: Microsoft.Owin.OwinResponse
      VB: Microsoft.Owin.OwinResponse
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public class OwinResponse : IOwinResponse'
        VB: >-
          Public Class OwinResponse

              Implements IOwinResponse
    inheritance:
    - System.Object
    implements:
    - Microsoft.Owin.IOwinResponse
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.OwinResponse.#ctor
      commentId: M:Microsoft.Owin.OwinResponse.#ctor
      language: CSharp
      name:
        CSharp: OwinResponse()
        VB: OwinResponse()
      nameWithType:
        CSharp: OwinResponse.OwinResponse()
        VB: OwinResponse.OwinResponse()
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.OwinResponse()
        VB: Microsoft.Owin.OwinResponse.OwinResponse()
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public OwinResponse()
          VB: Public Sub New
      overload: Microsoft.Owin.OwinResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.OwinResponse.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
      commentId: M:Microsoft.Owin.OwinResponse.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: OwinResponse(IDictionary<String, Object>)
        VB: OwinResponse(IDictionary(Of String, Object))
      nameWithType:
        CSharp: OwinResponse.OwinResponse(IDictionary<String, Object>)
        VB: OwinResponse.OwinResponse(IDictionary(Of String, Object))
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.OwinResponse(System.Collections.Generic.IDictionary<System.String, System.Object>)
        VB: Microsoft.Owin.OwinResponse.OwinResponse(System.Collections.Generic.IDictionary(Of System.String, System.Object))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public OwinResponse(IDictionary<string, object> environment)
          VB: Public Sub New(environment As IDictionary(Of String, Object))
        parameters:
        - id: environment
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.OwinResponse.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.OwinResponse.OnSendingHeaders(System.Action{System.Object},System.Object)
      commentId: M:Microsoft.Owin.OwinResponse.OnSendingHeaders(System.Action{System.Object},System.Object)
      language: CSharp
      name:
        CSharp: OnSendingHeaders(Action<Object>, Object)
        VB: OnSendingHeaders(Action(Of Object), Object)
      nameWithType:
        CSharp: OwinResponse.OnSendingHeaders(Action<Object>, Object)
        VB: OwinResponse.OnSendingHeaders(Action(Of Object), Object)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.OnSendingHeaders(System.Action<System.Object>, System.Object)
        VB: Microsoft.Owin.OwinResponse.OnSendingHeaders(System.Action(Of System.Object), System.Object)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual void OnSendingHeaders(Action<object> callback, object state)
          VB: Public Overridable Sub OnSendingHeaders(callback As Action(Of Object), state As Object)
        parameters:
        - id: callback
          type: System.Action{System.Object}
        - id: state
          type: System.Object
      overload: Microsoft.Owin.OwinResponse.OnSendingHeaders*
      implements:
      - Microsoft.Owin.IOwinResponse.OnSendingHeaders(System.Action{System.Object},System.Object)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.Redirect(System.String)
      commentId: M:Microsoft.Owin.OwinResponse.Redirect(System.String)
      language: CSharp
      name:
        CSharp: Redirect(String)
        VB: Redirect(String)
      nameWithType:
        CSharp: OwinResponse.Redirect(String)
        VB: OwinResponse.Redirect(String)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.Redirect(System.String)
        VB: Microsoft.Owin.OwinResponse.Redirect(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual void Redirect(string location)
          VB: Public Overridable Sub Redirect(location As String)
        parameters:
        - id: location
          type: System.String
      overload: Microsoft.Owin.OwinResponse.Redirect*
      implements:
      - Microsoft.Owin.IOwinResponse.Redirect(System.String)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.Write(System.String)
      commentId: M:Microsoft.Owin.OwinResponse.Write(System.String)
      language: CSharp
      name:
        CSharp: Write(String)
        VB: Write(String)
      nameWithType:
        CSharp: OwinResponse.Write(String)
        VB: OwinResponse.Write(String)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.Write(System.String)
        VB: Microsoft.Owin.OwinResponse.Write(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual void Write(string text)
          VB: Public Overridable Sub Write(text As String)
        parameters:
        - id: text
          type: System.String
      overload: Microsoft.Owin.OwinResponse.Write*
      implements:
      - Microsoft.Owin.IOwinResponse.Write(System.String)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.Write(System.Byte[])
      commentId: M:Microsoft.Owin.OwinResponse.Write(System.Byte[])
      language: CSharp
      name:
        CSharp: Write(Byte[])
        VB: Write(Byte())
      nameWithType:
        CSharp: OwinResponse.Write(Byte[])
        VB: OwinResponse.Write(Byte())
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.Write(System.Byte[])
        VB: Microsoft.Owin.OwinResponse.Write(System.Byte())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual void Write(byte[] data)
          VB: Public Overridable Sub Write(data As Byte())
        parameters:
        - id: data
          type: System.Byte[]
      overload: Microsoft.Owin.OwinResponse.Write*
      implements:
      - Microsoft.Owin.IOwinResponse.Write(System.Byte[])
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.Write(System.Byte[],System.Int32,System.Int32)
      commentId: M:Microsoft.Owin.OwinResponse.Write(System.Byte[],System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Write(Byte[], Int32, Int32)
        VB: Write(Byte(), Int32, Int32)
      nameWithType:
        CSharp: OwinResponse.Write(Byte[], Int32, Int32)
        VB: OwinResponse.Write(Byte(), Int32, Int32)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.Write(System.Byte[], System.Int32, System.Int32)
        VB: Microsoft.Owin.OwinResponse.Write(System.Byte(), System.Int32, System.Int32)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual void Write(byte[] data, int offset, int count)
          VB: Public Overridable Sub Write(data As Byte(), offset As Integer, count As Integer)
        parameters:
        - id: data
          type: System.Byte[]
        - id: offset
          type: System.Int32
        - id: count
          type: System.Int32
      overload: Microsoft.Owin.OwinResponse.Write*
      implements:
      - Microsoft.Owin.IOwinResponse.Write(System.Byte[],System.Int32,System.Int32)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.WriteAsync(System.String)
      commentId: M:Microsoft.Owin.OwinResponse.WriteAsync(System.String)
      language: CSharp
      name:
        CSharp: WriteAsync(String)
        VB: WriteAsync(String)
      nameWithType:
        CSharp: OwinResponse.WriteAsync(String)
        VB: OwinResponse.WriteAsync(String)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.WriteAsync(System.String)
        VB: Microsoft.Owin.OwinResponse.WriteAsync(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual Task WriteAsync(string text)
          VB: Public Overridable Function WriteAsync(text As String) As Task
        parameters:
        - id: text
          type: System.String
        return:
          type: System.Threading.Tasks.Task
      overload: Microsoft.Owin.OwinResponse.WriteAsync*
      implements:
      - Microsoft.Owin.IOwinResponse.WriteAsync(System.String)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.WriteAsync(System.String,System.Threading.CancellationToken)
      commentId: M:Microsoft.Owin.OwinResponse.WriteAsync(System.String,System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: WriteAsync(String, CancellationToken)
        VB: WriteAsync(String, CancellationToken)
      nameWithType:
        CSharp: OwinResponse.WriteAsync(String, CancellationToken)
        VB: OwinResponse.WriteAsync(String, CancellationToken)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.WriteAsync(System.String, System.Threading.CancellationToken)
        VB: Microsoft.Owin.OwinResponse.WriteAsync(System.String, System.Threading.CancellationToken)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual Task WriteAsync(string text, CancellationToken token)
          VB: Public Overridable Function WriteAsync(text As String, token As CancellationToken) As Task
        parameters:
        - id: text
          type: System.String
        - id: token
          type: System.Threading.CancellationToken
        return:
          type: System.Threading.Tasks.Task
      overload: Microsoft.Owin.OwinResponse.WriteAsync*
      implements:
      - Microsoft.Owin.IOwinResponse.WriteAsync(System.String,System.Threading.CancellationToken)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.WriteAsync(System.Byte[])
      commentId: M:Microsoft.Owin.OwinResponse.WriteAsync(System.Byte[])
      language: CSharp
      name:
        CSharp: WriteAsync(Byte[])
        VB: WriteAsync(Byte())
      nameWithType:
        CSharp: OwinResponse.WriteAsync(Byte[])
        VB: OwinResponse.WriteAsync(Byte())
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.WriteAsync(System.Byte[])
        VB: Microsoft.Owin.OwinResponse.WriteAsync(System.Byte())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual Task WriteAsync(byte[] data)
          VB: Public Overridable Function WriteAsync(data As Byte()) As Task
        parameters:
        - id: data
          type: System.Byte[]
        return:
          type: System.Threading.Tasks.Task
      overload: Microsoft.Owin.OwinResponse.WriteAsync*
      implements:
      - Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[])
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.WriteAsync(System.Byte[],System.Threading.CancellationToken)
      commentId: M:Microsoft.Owin.OwinResponse.WriteAsync(System.Byte[],System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: WriteAsync(Byte[], CancellationToken)
        VB: WriteAsync(Byte(), CancellationToken)
      nameWithType:
        CSharp: OwinResponse.WriteAsync(Byte[], CancellationToken)
        VB: OwinResponse.WriteAsync(Byte(), CancellationToken)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.WriteAsync(System.Byte[], System.Threading.CancellationToken)
        VB: Microsoft.Owin.OwinResponse.WriteAsync(System.Byte(), System.Threading.CancellationToken)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual Task WriteAsync(byte[] data, CancellationToken token)
          VB: Public Overridable Function WriteAsync(data As Byte(), token As CancellationToken) As Task
        parameters:
        - id: data
          type: System.Byte[]
        - id: token
          type: System.Threading.CancellationToken
        return:
          type: System.Threading.Tasks.Task
      overload: Microsoft.Owin.OwinResponse.WriteAsync*
      implements:
      - Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[],System.Threading.CancellationToken)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
      commentId: M:Microsoft.Owin.OwinResponse.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
      language: CSharp
      name:
        CSharp: WriteAsync(Byte[], Int32, Int32, CancellationToken)
        VB: WriteAsync(Byte(), Int32, Int32, CancellationToken)
      nameWithType:
        CSharp: OwinResponse.WriteAsync(Byte[], Int32, Int32, CancellationToken)
        VB: OwinResponse.WriteAsync(Byte(), Int32, Int32, CancellationToken)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
        VB: Microsoft.Owin.OwinResponse.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual Task WriteAsync(byte[] data, int offset, int count, CancellationToken token)
          VB: Public Overridable Function WriteAsync(data As Byte(), offset As Integer, count As Integer, token As CancellationToken) As Task
        parameters:
        - id: data
          type: System.Byte[]
        - id: offset
          type: System.Int32
        - id: count
          type: System.Int32
        - id: token
          type: System.Threading.CancellationToken
        return:
          type: System.Threading.Tasks.Task
      overload: Microsoft.Owin.OwinResponse.WriteAsync*
      implements:
      - Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.Get``1(System.String)
      commentId: M:Microsoft.Owin.OwinResponse.Get``1(System.String)
      language: CSharp
      name:
        CSharp: Get<T>(String)
        VB: Get(Of T)(String)
      nameWithType:
        CSharp: OwinResponse.Get<T>(String)
        VB: OwinResponse.Get(Of T)(String)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.Get<T>(System.String)
        VB: Microsoft.Owin.OwinResponse.Get(Of T)(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual T Get<T>(string key)
          VB: Public Overridable Function Get(Of T)(key As String) As T
        parameters:
        - id: key
          type: System.String
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Microsoft.Owin.OwinResponse.Get*
      implements:
      - Microsoft.Owin.IOwinResponse.Get``1(System.String)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.Set``1(System.String,``0)
      commentId: M:Microsoft.Owin.OwinResponse.Set``1(System.String,``0)
      language: CSharp
      name:
        CSharp: Set<T>(String, T)
        VB: Set(Of T)(String, T)
      nameWithType:
        CSharp: OwinResponse.Set<T>(String, T)
        VB: OwinResponse.Set(Of T)(String, T)
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.Set<T>(System.String, T)
        VB: Microsoft.Owin.OwinResponse.Set(Of T)(System.String, T)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual IOwinResponse Set<T>(string key, T value)
          VB: Public Overridable Function Set(Of T)(key As String, value As T) As IOwinResponse
        parameters:
        - id: key
          type: System.String
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Microsoft.Owin.IOwinResponse
      overload: Microsoft.Owin.OwinResponse.Set*
      implements:
      - Microsoft.Owin.IOwinResponse.Set``1(System.String,{T})
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.Environment
      commentId: P:Microsoft.Owin.OwinResponse.Environment
      language: CSharp
      name:
        CSharp: Environment
        VB: Environment
      nameWithType:
        CSharp: OwinResponse.Environment
        VB: OwinResponse.Environment
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.Environment
        VB: Microsoft.Owin.OwinResponse.Environment
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual IDictionary<string, object> Environment { get; }
          VB: Public Overridable ReadOnly Property Environment As IDictionary(Of String, Object)
        parameters: []
        return:
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.OwinResponse.Environment*
      implements:
      - Microsoft.Owin.IOwinResponse.Environment
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: Microsoft.Owin.OwinResponse.Context
      commentId: P:Microsoft.Owin.OwinResponse.Context
      language: CSharp
      name:
        CSharp: Context
        VB: Context
      nameWithType:
        CSharp: OwinResponse.Context
        VB: OwinResponse.Context
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.Context
        VB: Microsoft.Owin.OwinResponse.Context
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual IOwinContext Context { get; }
          VB: Public Overridable ReadOnly Property Context As IOwinContext
        parameters: []
        return:
          type: Microsoft.Owin.IOwinContext
      overload: Microsoft.Owin.OwinResponse.Context*
      implements:
      - Microsoft.Owin.IOwinResponse.Context
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: Microsoft.Owin.OwinResponse.StatusCode
      commentId: P:Microsoft.Owin.OwinResponse.StatusCode
      language: CSharp
      name:
        CSharp: StatusCode
        VB: StatusCode
      nameWithType:
        CSharp: OwinResponse.StatusCode
        VB: OwinResponse.StatusCode
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.StatusCode
        VB: Microsoft.Owin.OwinResponse.StatusCode
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual int StatusCode { get; set; }
          VB: Public Overridable Property StatusCode As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Microsoft.Owin.OwinResponse.StatusCode*
      implements:
      - Microsoft.Owin.IOwinResponse.StatusCode
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.ReasonPhrase
      commentId: P:Microsoft.Owin.OwinResponse.ReasonPhrase
      language: CSharp
      name:
        CSharp: ReasonPhrase
        VB: ReasonPhrase
      nameWithType:
        CSharp: OwinResponse.ReasonPhrase
        VB: OwinResponse.ReasonPhrase
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.ReasonPhrase
        VB: Microsoft.Owin.OwinResponse.ReasonPhrase
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual string ReasonPhrase { get; set; }
          VB: Public Overridable Property ReasonPhrase As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinResponse.ReasonPhrase*
      implements:
      - Microsoft.Owin.IOwinResponse.ReasonPhrase
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.Protocol
      commentId: P:Microsoft.Owin.OwinResponse.Protocol
      language: CSharp
      name:
        CSharp: Protocol
        VB: Protocol
      nameWithType:
        CSharp: OwinResponse.Protocol
        VB: OwinResponse.Protocol
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.Protocol
        VB: Microsoft.Owin.OwinResponse.Protocol
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual string Protocol { get; set; }
          VB: Public Overridable Property Protocol As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinResponse.Protocol*
      implements:
      - Microsoft.Owin.IOwinResponse.Protocol
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.Headers
      commentId: P:Microsoft.Owin.OwinResponse.Headers
      language: CSharp
      name:
        CSharp: Headers
        VB: Headers
      nameWithType:
        CSharp: OwinResponse.Headers
        VB: OwinResponse.Headers
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.Headers
        VB: Microsoft.Owin.OwinResponse.Headers
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual IHeaderDictionary Headers { get; }
          VB: Public Overridable ReadOnly Property Headers As IHeaderDictionary
        parameters: []
        return:
          type: Microsoft.Owin.IHeaderDictionary
      overload: Microsoft.Owin.OwinResponse.Headers*
      implements:
      - Microsoft.Owin.IOwinResponse.Headers
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: Microsoft.Owin.OwinResponse.Cookies
      commentId: P:Microsoft.Owin.OwinResponse.Cookies
      language: CSharp
      name:
        CSharp: Cookies
        VB: Cookies
      nameWithType:
        CSharp: OwinResponse.Cookies
        VB: OwinResponse.Cookies
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.Cookies
        VB: Microsoft.Owin.OwinResponse.Cookies
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual ResponseCookieCollection Cookies { get; }
          VB: Public Overridable ReadOnly Property Cookies As ResponseCookieCollection
        parameters: []
        return:
          type: Microsoft.Owin.ResponseCookieCollection
      overload: Microsoft.Owin.OwinResponse.Cookies*
      implements:
      - Microsoft.Owin.IOwinResponse.Cookies
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: Microsoft.Owin.OwinResponse.ContentLength
      commentId: P:Microsoft.Owin.OwinResponse.ContentLength
      language: CSharp
      name:
        CSharp: ContentLength
        VB: ContentLength
      nameWithType:
        CSharp: OwinResponse.ContentLength
        VB: OwinResponse.ContentLength
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.ContentLength
        VB: Microsoft.Owin.OwinResponse.ContentLength
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual long? ContentLength { get; set; }
          VB: Public Overridable Property ContentLength As Long?
        parameters: []
        return:
          type: System.Nullable{System.Int64}
      overload: Microsoft.Owin.OwinResponse.ContentLength*
      implements:
      - Microsoft.Owin.IOwinResponse.ContentLength
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.ContentType
      commentId: P:Microsoft.Owin.OwinResponse.ContentType
      language: CSharp
      name:
        CSharp: ContentType
        VB: ContentType
      nameWithType:
        CSharp: OwinResponse.ContentType
        VB: OwinResponse.ContentType
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.ContentType
        VB: Microsoft.Owin.OwinResponse.ContentType
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual string ContentType { get; set; }
          VB: Public Overridable Property ContentType As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinResponse.ContentType*
      implements:
      - Microsoft.Owin.IOwinResponse.ContentType
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.Expires
      commentId: P:Microsoft.Owin.OwinResponse.Expires
      language: CSharp
      name:
        CSharp: Expires
        VB: Expires
      nameWithType:
        CSharp: OwinResponse.Expires
        VB: OwinResponse.Expires
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.Expires
        VB: Microsoft.Owin.OwinResponse.Expires
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual DateTimeOffset? Expires { get; set; }
          VB: Public Overridable Property Expires As DateTimeOffset?
        parameters: []
        return:
          type: System.Nullable{System.DateTimeOffset}
      overload: Microsoft.Owin.OwinResponse.Expires*
      implements:
      - Microsoft.Owin.IOwinResponse.Expires
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.ETag
      commentId: P:Microsoft.Owin.OwinResponse.ETag
      language: CSharp
      name:
        CSharp: ETag
        VB: ETag
      nameWithType:
        CSharp: OwinResponse.ETag
        VB: OwinResponse.ETag
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.ETag
        VB: Microsoft.Owin.OwinResponse.ETag
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual string ETag { get; set; }
          VB: Public Overridable Property ETag As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.OwinResponse.ETag*
      implements:
      - Microsoft.Owin.IOwinResponse.ETag
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
    - id: Microsoft.Owin.OwinResponse.Body
      commentId: P:Microsoft.Owin.OwinResponse.Body
      language: CSharp
      name:
        CSharp: Body
        VB: Body
      nameWithType:
        CSharp: OwinResponse.Body
        VB: OwinResponse.Body
      qualifiedName:
        CSharp: Microsoft.Owin.OwinResponse.Body
        VB: Microsoft.Owin.OwinResponse.Body
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public virtual Stream Body { get; set; }
          VB: Public Overridable Property Body As Stream
        parameters: []
        return:
          type: System.IO.Stream
      overload: Microsoft.Owin.OwinResponse.Body*
      implements:
      - Microsoft.Owin.IOwinResponse.Body
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        - set
        VB:
        - Public
        - Overridable
- id: Microsoft.Owin.Builder
  commentId: N:Microsoft.Owin.Builder
  language: CSharp
  name:
    CSharp: Microsoft.Owin.Builder
    VB: Microsoft.Owin.Builder
  nameWithType:
    CSharp: Microsoft.Owin.Builder
    VB: Microsoft.Owin.Builder
  qualifiedName:
    CSharp: Microsoft.Owin.Builder
    VB: Microsoft.Owin.Builder
  type: Namespace
  assemblies:
  - Microsoft.Owin
  modifiers: {}
  items:
  - id: Microsoft.Owin.Builder.AppBuilder
    commentId: T:Microsoft.Owin.Builder.AppBuilder
    language: CSharp
    name:
      CSharp: AppBuilder
      VB: AppBuilder
    nameWithType:
      CSharp: AppBuilder
      VB: AppBuilder
    qualifiedName:
      CSharp: Microsoft.Owin.Builder.AppBuilder
      VB: Microsoft.Owin.Builder.AppBuilder
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Builder
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public class AppBuilder : IAppBuilder'
        VB: >-
          Public Class AppBuilder

              Implements IAppBuilder
    inheritance:
    - System.Object
    implements:
    - Owin.IAppBuilder
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Builder.AppBuilder.#ctor
      commentId: M:Microsoft.Owin.Builder.AppBuilder.#ctor
      language: CSharp
      name:
        CSharp: AppBuilder()
        VB: AppBuilder()
      nameWithType:
        CSharp: AppBuilder.AppBuilder()
        VB: AppBuilder.AppBuilder()
      qualifiedName:
        CSharp: Microsoft.Owin.Builder.AppBuilder.AppBuilder()
        VB: Microsoft.Owin.Builder.AppBuilder.AppBuilder()
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Builder
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AppBuilder()
          VB: Public Sub New
      overload: Microsoft.Owin.Builder.AppBuilder.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Builder.AppBuilder.Use(System.Object,System.Object[])
      commentId: M:Microsoft.Owin.Builder.AppBuilder.Use(System.Object,System.Object[])
      language: CSharp
      name:
        CSharp: Use(Object, Object[])
        VB: Use(Object, Object())
      nameWithType:
        CSharp: AppBuilder.Use(Object, Object[])
        VB: AppBuilder.Use(Object, Object())
      qualifiedName:
        CSharp: Microsoft.Owin.Builder.AppBuilder.Use(System.Object, System.Object[])
        VB: Microsoft.Owin.Builder.AppBuilder.Use(System.Object, System.Object())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Builder
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IAppBuilder Use(object middleware, params object[] args)
          VB: Public Function Use(middleware As Object, ParamArray args As Object()) As IAppBuilder
        parameters:
        - id: middleware
          type: System.Object
        - id: args
          type: System.Object[]
        return:
          type: Owin.IAppBuilder
      overload: Microsoft.Owin.Builder.AppBuilder.Use*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Builder.AppBuilder.New
      commentId: M:Microsoft.Owin.Builder.AppBuilder.New
      language: CSharp
      name:
        CSharp: New()
        VB: New()
      nameWithType:
        CSharp: AppBuilder.New()
        VB: AppBuilder.New()
      qualifiedName:
        CSharp: Microsoft.Owin.Builder.AppBuilder.New()
        VB: Microsoft.Owin.Builder.AppBuilder.New()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Builder
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IAppBuilder New()
          VB: Public Function New As IAppBuilder
        return:
          type: Owin.IAppBuilder
      overload: Microsoft.Owin.Builder.AppBuilder.New*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Builder.AppBuilder.Build(System.Type)
      commentId: M:Microsoft.Owin.Builder.AppBuilder.Build(System.Type)
      language: CSharp
      name:
        CSharp: Build(Type)
        VB: Build(Type)
      nameWithType:
        CSharp: AppBuilder.Build(Type)
        VB: AppBuilder.Build(Type)
      qualifiedName:
        CSharp: Microsoft.Owin.Builder.AppBuilder.Build(System.Type)
        VB: Microsoft.Owin.Builder.AppBuilder.Build(System.Type)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Builder
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public object Build(Type returnType)
          VB: Public Function Build(returnType As Type) As Object
        parameters:
        - id: returnType
          type: System.Type
        return:
          type: System.Object
      overload: Microsoft.Owin.Builder.AppBuilder.Build*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Builder.AppBuilder.Properties
      commentId: P:Microsoft.Owin.Builder.AppBuilder.Properties
      language: CSharp
      name:
        CSharp: Properties
        VB: Properties
      nameWithType:
        CSharp: AppBuilder.Properties
        VB: AppBuilder.Properties
      qualifiedName:
        CSharp: Microsoft.Owin.Builder.AppBuilder.Properties
        VB: Microsoft.Owin.Builder.AppBuilder.Properties
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Builder
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IDictionary<string, object> Properties { get; }
          VB: Public ReadOnly Property Properties As IDictionary(Of String, Object)
        parameters: []
        return:
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.Builder.AppBuilder.Properties*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.Owin.Builder.AppBuilderExtensions
    commentId: T:Microsoft.Owin.Builder.AppBuilderExtensions
    language: CSharp
    name:
      CSharp: AppBuilderExtensions
      VB: AppBuilderExtensions
    nameWithType:
      CSharp: AppBuilderExtensions
      VB: AppBuilderExtensions
    qualifiedName:
      CSharp: Microsoft.Owin.Builder.AppBuilderExtensions
      VB: Microsoft.Owin.Builder.AppBuilderExtensions
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Builder
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public static class AppBuilderExtensions
        VB: Public Module AppBuilderExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Microsoft.Owin.Builder.AppBuilderExtensions.Build(Owin.IAppBuilder)
      commentId: M:Microsoft.Owin.Builder.AppBuilderExtensions.Build(Owin.IAppBuilder)
      language: CSharp
      name:
        CSharp: Build(IAppBuilder)
        VB: Build(IAppBuilder)
      nameWithType:
        CSharp: AppBuilderExtensions.Build(IAppBuilder)
        VB: AppBuilderExtensions.Build(IAppBuilder)
      qualifiedName:
        CSharp: Microsoft.Owin.Builder.AppBuilderExtensions.Build(Owin.IAppBuilder)
        VB: Microsoft.Owin.Builder.AppBuilderExtensions.Build(Owin.IAppBuilder)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Builder
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static Func<IDictionary<string, object>, Task> Build(this IAppBuilder builder)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Build(builder As IAppBuilder) As Func(Of IDictionary(Of String, Object), Task)
        parameters:
        - id: builder
          type: Owin.IAppBuilder
        return:
          type: System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}
      overload: Microsoft.Owin.Builder.AppBuilderExtensions.Build*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Builder.AppBuilderExtensions.Build``1(Owin.IAppBuilder)
      commentId: M:Microsoft.Owin.Builder.AppBuilderExtensions.Build``1(Owin.IAppBuilder)
      language: CSharp
      name:
        CSharp: Build<TApp>(IAppBuilder)
        VB: Build(Of TApp)(IAppBuilder)
      nameWithType:
        CSharp: AppBuilderExtensions.Build<TApp>(IAppBuilder)
        VB: AppBuilderExtensions.Build(Of TApp)(IAppBuilder)
      qualifiedName:
        CSharp: Microsoft.Owin.Builder.AppBuilderExtensions.Build<TApp>(Owin.IAppBuilder)
        VB: Microsoft.Owin.Builder.AppBuilderExtensions.Build(Of TApp)(Owin.IAppBuilder)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Builder
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static TApp Build<TApp>(this IAppBuilder builder)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Build(Of TApp)(builder As IAppBuilder) As TApp
        parameters:
        - id: builder
          type: Owin.IAppBuilder
        typeParameters:
        - id: TApp
        return:
          type: '{TApp}'
      overload: Microsoft.Owin.Builder.AppBuilderExtensions.Build*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion(Owin.IAppBuilder,System.Delegate)
      commentId: M:Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion(Owin.IAppBuilder,System.Delegate)
      language: CSharp
      name:
        CSharp: AddSignatureConversion(IAppBuilder, Delegate)
        VB: AddSignatureConversion(IAppBuilder, Delegate)
      nameWithType:
        CSharp: AppBuilderExtensions.AddSignatureConversion(IAppBuilder, Delegate)
        VB: AppBuilderExtensions.AddSignatureConversion(IAppBuilder, Delegate)
      qualifiedName:
        CSharp: Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion(Owin.IAppBuilder, System.Delegate)
        VB: Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion(Owin.IAppBuilder, System.Delegate)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Builder
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static void AddSignatureConversion(this IAppBuilder builder, Delegate conversion)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub AddSignatureConversion(builder As IAppBuilder, conversion As  Delegate)
        parameters:
        - id: builder
          type: Owin.IAppBuilder
        - id: conversion
          type: System.Delegate
      overload: Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion``2(Owin.IAppBuilder,System.Func{``0,``1})
      commentId: M:Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion``2(Owin.IAppBuilder,System.Func{``0,``1})
      language: CSharp
      name:
        CSharp: AddSignatureConversion<T1, T2>(IAppBuilder, Func<T1, T2>)
        VB: AddSignatureConversion(Of T1, T2)(IAppBuilder, Func(Of T1, T2))
      nameWithType:
        CSharp: AppBuilderExtensions.AddSignatureConversion<T1, T2>(IAppBuilder, Func<T1, T2>)
        VB: AppBuilderExtensions.AddSignatureConversion(Of T1, T2)(IAppBuilder, Func(Of T1, T2))
      qualifiedName:
        CSharp: Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion<T1, T2>(Owin.IAppBuilder, System.Func<T1, T2>)
        VB: Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion(Of T1, T2)(Owin.IAppBuilder, System.Func(Of T1, T2))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Builder
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static void AddSignatureConversion<T1, T2>(this IAppBuilder builder, Func<T1, T2> conversion)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub AddSignatureConversion(Of T1, T2)(builder As IAppBuilder, conversion As Func(Of T1, T2))
        parameters:
        - id: builder
          type: Owin.IAppBuilder
        - id: conversion
          type: System.Func{{T1},{T2}}
        typeParameters:
        - id: T1
        - id: T2
      overload: Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: Microsoft.Owin.BuilderProperties
  commentId: N:Microsoft.Owin.BuilderProperties
  language: CSharp
  name:
    CSharp: Microsoft.Owin.BuilderProperties
    VB: Microsoft.Owin.BuilderProperties
  nameWithType:
    CSharp: Microsoft.Owin.BuilderProperties
    VB: Microsoft.Owin.BuilderProperties
  qualifiedName:
    CSharp: Microsoft.Owin.BuilderProperties
    VB: Microsoft.Owin.BuilderProperties
  type: Namespace
  assemblies:
  - Microsoft.Owin
  modifiers: {}
  items:
  - id: Microsoft.Owin.BuilderProperties.Address
    commentId: T:Microsoft.Owin.BuilderProperties.Address
    language: CSharp
    name:
      CSharp: Address
      VB: Address
    nameWithType:
      CSharp: Address
      VB: Address
    qualifiedName:
      CSharp: Microsoft.Owin.BuilderProperties.Address
      VB: Microsoft.Owin.BuilderProperties.Address
    type: Struct
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.BuilderProperties
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public struct Address
        VB: Public Structure Address
    inheritedMembers:
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Microsoft.Owin.BuilderProperties.Address.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
      commentId: M:Microsoft.Owin.BuilderProperties.Address.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: Address(IDictionary<String, Object>)
        VB: Address(IDictionary(Of String, Object))
      nameWithType:
        CSharp: Address.Address(IDictionary<String, Object>)
        VB: Address.Address(IDictionary(Of String, Object))
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.Address(System.Collections.Generic.IDictionary<System.String, System.Object>)
        VB: Microsoft.Owin.BuilderProperties.Address.Address(System.Collections.Generic.IDictionary(Of System.String, System.Object))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Address(IDictionary<string, object> dictionary)
          VB: Public Sub New(dictionary As IDictionary(Of String, Object))
        parameters:
        - id: dictionary
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.BuilderProperties.Address.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.Address.#ctor(System.String,System.String,System.String,System.String)
      commentId: M:Microsoft.Owin.BuilderProperties.Address.#ctor(System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: Address(String, String, String, String)
        VB: Address(String, String, String, String)
      nameWithType:
        CSharp: Address.Address(String, String, String, String)
        VB: Address.Address(String, String, String, String)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.Address(System.String, System.String, System.String, System.String)
        VB: Microsoft.Owin.BuilderProperties.Address.Address(System.String, System.String, System.String, System.String)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Address(string scheme, string host, string port, string path)
          VB: Public Sub New(scheme As String, host As String, port As String, path As String)
        parameters:
        - id: scheme
          type: System.String
        - id: host
          type: System.String
        - id: port
          type: System.String
        - id: path
          type: System.String
      overload: Microsoft.Owin.BuilderProperties.Address.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.Address.Create
      commentId: M:Microsoft.Owin.BuilderProperties.Address.Create
      language: CSharp
      name:
        CSharp: Create()
        VB: Create()
      nameWithType:
        CSharp: Address.Create()
        VB: Address.Create()
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.Create()
        VB: Microsoft.Owin.BuilderProperties.Address.Create()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static Address Create()
          VB: Public Shared Function Create As Address
        return:
          type: Microsoft.Owin.BuilderProperties.Address
      overload: Microsoft.Owin.BuilderProperties.Address.Create*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.BuilderProperties.Address.Equals(Microsoft.Owin.BuilderProperties.Address)
      commentId: M:Microsoft.Owin.BuilderProperties.Address.Equals(Microsoft.Owin.BuilderProperties.Address)
      language: CSharp
      name:
        CSharp: Equals(Address)
        VB: Equals(Address)
      nameWithType:
        CSharp: Address.Equals(Address)
        VB: Address.Equals(Address)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.Equals(Microsoft.Owin.BuilderProperties.Address)
        VB: Microsoft.Owin.BuilderProperties.Address.Equals(Microsoft.Owin.BuilderProperties.Address)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool Equals(Address other)
          VB: Public Function Equals(other As Address) As Boolean
        parameters:
        - id: other
          type: Microsoft.Owin.BuilderProperties.Address
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.Address.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.Address.Equals(System.Object)
      commentId: M:Microsoft.Owin.BuilderProperties.Address.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: Address.Equals(Object)
        VB: Address.Equals(Object)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.Equals(System.Object)
        VB: Microsoft.Owin.BuilderProperties.Address.Equals(System.Object)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.Address.Equals*
      overridden: System.ValueType.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.BuilderProperties.Address.GetHashCode
      commentId: M:Microsoft.Owin.BuilderProperties.Address.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: Address.GetHashCode()
        VB: Address.GetHashCode()
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.GetHashCode()
        VB: Microsoft.Owin.BuilderProperties.Address.GetHashCode()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Microsoft.Owin.BuilderProperties.Address.GetHashCode*
      overridden: System.ValueType.GetHashCode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.BuilderProperties.Address.op_Equality(Microsoft.Owin.BuilderProperties.Address,Microsoft.Owin.BuilderProperties.Address)
      commentId: M:Microsoft.Owin.BuilderProperties.Address.op_Equality(Microsoft.Owin.BuilderProperties.Address,Microsoft.Owin.BuilderProperties.Address)
      language: CSharp
      name:
        CSharp: Equality(Address, Address)
        VB: Equality(Address, Address)
      nameWithType:
        CSharp: Address.Equality(Address, Address)
        VB: Address.Equality(Address, Address)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.Equality(Microsoft.Owin.BuilderProperties.Address, Microsoft.Owin.BuilderProperties.Address)
        VB: Microsoft.Owin.BuilderProperties.Address.Equality(Microsoft.Owin.BuilderProperties.Address, Microsoft.Owin.BuilderProperties.Address)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool operator ==(Address left, Address right)
          VB: Public Shared Operator =(left As Address, right As Address) As Boolean
        parameters:
        - id: left
          type: Microsoft.Owin.BuilderProperties.Address
        - id: right
          type: Microsoft.Owin.BuilderProperties.Address
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.Address.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.BuilderProperties.Address.op_Inequality(Microsoft.Owin.BuilderProperties.Address,Microsoft.Owin.BuilderProperties.Address)
      commentId: M:Microsoft.Owin.BuilderProperties.Address.op_Inequality(Microsoft.Owin.BuilderProperties.Address,Microsoft.Owin.BuilderProperties.Address)
      language: CSharp
      name:
        CSharp: Inequality(Address, Address)
        VB: Inequality(Address, Address)
      nameWithType:
        CSharp: Address.Inequality(Address, Address)
        VB: Address.Inequality(Address, Address)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.Inequality(Microsoft.Owin.BuilderProperties.Address, Microsoft.Owin.BuilderProperties.Address)
        VB: Microsoft.Owin.BuilderProperties.Address.Inequality(Microsoft.Owin.BuilderProperties.Address, Microsoft.Owin.BuilderProperties.Address)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool operator !=(Address left, Address right)
          VB: Public Shared Operator <>(left As Address, right As Address) As Boolean
        parameters:
        - id: left
          type: Microsoft.Owin.BuilderProperties.Address
        - id: right
          type: Microsoft.Owin.BuilderProperties.Address
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.Address.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.BuilderProperties.Address.Get``1(System.String)
      commentId: M:Microsoft.Owin.BuilderProperties.Address.Get``1(System.String)
      language: CSharp
      name:
        CSharp: Get<T>(String)
        VB: Get(Of T)(String)
      nameWithType:
        CSharp: Address.Get<T>(String)
        VB: Address.Get(Of T)(String)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.Get<T>(System.String)
        VB: Microsoft.Owin.BuilderProperties.Address.Get(Of T)(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public T Get<T>(string key)
          VB: Public Function Get(Of T)(key As String) As T
        parameters:
        - id: key
          type: System.String
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Microsoft.Owin.BuilderProperties.Address.Get*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.Address.Set(System.String,System.Object)
      commentId: M:Microsoft.Owin.BuilderProperties.Address.Set(System.String,System.Object)
      language: CSharp
      name:
        CSharp: Set(String, Object)
        VB: Set(String, Object)
      nameWithType:
        CSharp: Address.Set(String, Object)
        VB: Address.Set(String, Object)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.Set(System.String, System.Object)
        VB: Microsoft.Owin.BuilderProperties.Address.Set(System.String, System.Object)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Address Set(string key, object value)
          VB: Public Function Set(key As String, value As Object) As Address
        parameters:
        - id: key
          type: System.String
        - id: value
          type: System.Object
        return:
          type: Microsoft.Owin.BuilderProperties.Address
      overload: Microsoft.Owin.BuilderProperties.Address.Set*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.Address.Dictionary
      commentId: P:Microsoft.Owin.BuilderProperties.Address.Dictionary
      language: CSharp
      name:
        CSharp: Dictionary
        VB: Dictionary
      nameWithType:
        CSharp: Address.Dictionary
        VB: Address.Dictionary
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.Dictionary
        VB: Microsoft.Owin.BuilderProperties.Address.Dictionary
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IDictionary<string, object> Dictionary { get; }
          VB: Public ReadOnly Property Dictionary As IDictionary(Of String, Object)
        parameters: []
        return:
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.BuilderProperties.Address.Dictionary*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.BuilderProperties.Address.Scheme
      commentId: P:Microsoft.Owin.BuilderProperties.Address.Scheme
      language: CSharp
      name:
        CSharp: Scheme
        VB: Scheme
      nameWithType:
        CSharp: Address.Scheme
        VB: Address.Scheme
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.Scheme
        VB: Microsoft.Owin.BuilderProperties.Address.Scheme
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string Scheme { get; set; }
          VB: Public Property Scheme As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.BuilderProperties.Address.Scheme*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.Address.Host
      commentId: P:Microsoft.Owin.BuilderProperties.Address.Host
      language: CSharp
      name:
        CSharp: Host
        VB: Host
      nameWithType:
        CSharp: Address.Host
        VB: Address.Host
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.Host
        VB: Microsoft.Owin.BuilderProperties.Address.Host
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string Host { get; set; }
          VB: Public Property Host As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.BuilderProperties.Address.Host*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.Address.Port
      commentId: P:Microsoft.Owin.BuilderProperties.Address.Port
      language: CSharp
      name:
        CSharp: Port
        VB: Port
      nameWithType:
        CSharp: Address.Port
        VB: Address.Port
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.Port
        VB: Microsoft.Owin.BuilderProperties.Address.Port
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string Port { get; set; }
          VB: Public Property Port As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.BuilderProperties.Address.Port*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.Address.Path
      commentId: P:Microsoft.Owin.BuilderProperties.Address.Path
      language: CSharp
      name:
        CSharp: Path
        VB: Path
      nameWithType:
        CSharp: Address.Path
        VB: Address.Path
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Address.Path
        VB: Microsoft.Owin.BuilderProperties.Address.Path
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string Path { get; set; }
          VB: Public Property Path As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.BuilderProperties.Address.Path*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Microsoft.Owin.BuilderProperties.AddressCollection
    commentId: T:Microsoft.Owin.BuilderProperties.AddressCollection
    language: CSharp
    name:
      CSharp: AddressCollection
      VB: AddressCollection
    nameWithType:
      CSharp: AddressCollection
      VB: AddressCollection
    qualifiedName:
      CSharp: Microsoft.Owin.BuilderProperties.AddressCollection
      VB: Microsoft.Owin.BuilderProperties.AddressCollection
    type: Struct
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.BuilderProperties
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public struct AddressCollection : IEnumerable<Address>, IEnumerable'
        VB: >-
          Public Structure AddressCollection

              Implements IEnumerable(Of Address), IEnumerable
    implements:
    - System.Collections.Generic.IEnumerable{Microsoft.Owin.BuilderProperties.Address}
    - System.Collections.IEnumerable
    inheritedMembers:
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Microsoft.Owin.BuilderProperties.AddressCollection.#ctor(System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}})
      commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.#ctor(System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}})
      language: CSharp
      name:
        CSharp: AddressCollection(IList<IDictionary<String, Object>>)
        VB: AddressCollection(IList(Of IDictionary(Of String, Object)))
      nameWithType:
        CSharp: AddressCollection.AddressCollection(IList<IDictionary<String, Object>>)
        VB: AddressCollection.AddressCollection(IList(Of IDictionary(Of String, Object)))
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AddressCollection.AddressCollection(System.Collections.Generic.IList<System.Collections.Generic.IDictionary<System.String, System.Object>>)
        VB: Microsoft.Owin.BuilderProperties.AddressCollection.AddressCollection(System.Collections.Generic.IList(Of System.Collections.Generic.IDictionary(Of System.String, System.Object)))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AddressCollection(IList<IDictionary<string, object>> list)
          VB: Public Sub New(list As IList(Of IDictionary(Of String, Object)))
        parameters:
        - id: list
          type: System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}
      overload: Microsoft.Owin.BuilderProperties.AddressCollection.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AddressCollection.Add(Microsoft.Owin.BuilderProperties.Address)
      commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.Add(Microsoft.Owin.BuilderProperties.Address)
      language: CSharp
      name:
        CSharp: Add(Address)
        VB: Add(Address)
      nameWithType:
        CSharp: AddressCollection.Add(Address)
        VB: AddressCollection.Add(Address)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AddressCollection.Add(Microsoft.Owin.BuilderProperties.Address)
        VB: Microsoft.Owin.BuilderProperties.AddressCollection.Add(Microsoft.Owin.BuilderProperties.Address)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void Add(Address address)
          VB: Public Sub Add(address As Address)
        parameters:
        - id: address
          type: Microsoft.Owin.BuilderProperties.Address
      overload: Microsoft.Owin.BuilderProperties.AddressCollection.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - isEii: true
      id: Microsoft.Owin.BuilderProperties.AddressCollection.System#Collections#IEnumerable#GetEnumerator
      commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.System#Collections#IEnumerable#GetEnumerator
      language: CSharp
      name:
        CSharp: IEnumerable.GetEnumerator()
        VB: System.Collections.IEnumerable.GetEnumerator()
      nameWithType:
        CSharp: AddressCollection.IEnumerable.GetEnumerator()
        VB: AddressCollection.System.Collections.IEnumerable.GetEnumerator()
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AddressCollection.System.Collections.IEnumerable.GetEnumerator()
        VB: Microsoft.Owin.BuilderProperties.AddressCollection.System.Collections.IEnumerable.GetEnumerator()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IEnumerator IEnumerable.GetEnumerator()
          VB: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: Microsoft.Owin.BuilderProperties.AddressCollection.System#Collections#IEnumerable#GetEnumerator*
      implements:
      - System.Collections.IEnumerable.GetEnumerator
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator
      commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: AddressCollection.GetEnumerator()
        VB: AddressCollection.GetEnumerator()
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator()
        VB: Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IEnumerator<Address> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of Address)
        return:
          type: System.Collections.Generic.IEnumerator{Microsoft.Owin.BuilderProperties.Address}
      overload: Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator*
      implements:
      - System.Collections.Generic.IEnumerable{Microsoft.Owin.BuilderProperties.Address}.GetEnumerator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AddressCollection.Create
      commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.Create
      language: CSharp
      name:
        CSharp: Create()
        VB: Create()
      nameWithType:
        CSharp: AddressCollection.Create()
        VB: AddressCollection.Create()
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AddressCollection.Create()
        VB: Microsoft.Owin.BuilderProperties.AddressCollection.Create()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static AddressCollection Create()
          VB: Public Shared Function Create As AddressCollection
        return:
          type: Microsoft.Owin.BuilderProperties.AddressCollection
      overload: Microsoft.Owin.BuilderProperties.AddressCollection.Create*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.BuilderProperties.AddressCollection.Equals(Microsoft.Owin.BuilderProperties.AddressCollection)
      commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.Equals(Microsoft.Owin.BuilderProperties.AddressCollection)
      language: CSharp
      name:
        CSharp: Equals(AddressCollection)
        VB: Equals(AddressCollection)
      nameWithType:
        CSharp: AddressCollection.Equals(AddressCollection)
        VB: AddressCollection.Equals(AddressCollection)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AddressCollection.Equals(Microsoft.Owin.BuilderProperties.AddressCollection)
        VB: Microsoft.Owin.BuilderProperties.AddressCollection.Equals(Microsoft.Owin.BuilderProperties.AddressCollection)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool Equals(AddressCollection other)
          VB: Public Function Equals(other As AddressCollection) As Boolean
        parameters:
        - id: other
          type: Microsoft.Owin.BuilderProperties.AddressCollection
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.AddressCollection.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AddressCollection.Equals(System.Object)
      commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: AddressCollection.Equals(Object)
        VB: AddressCollection.Equals(Object)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AddressCollection.Equals(System.Object)
        VB: Microsoft.Owin.BuilderProperties.AddressCollection.Equals(System.Object)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.AddressCollection.Equals*
      overridden: System.ValueType.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode
      commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: AddressCollection.GetHashCode()
        VB: AddressCollection.GetHashCode()
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode()
        VB: Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode*
      overridden: System.ValueType.GetHashCode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.BuilderProperties.AddressCollection.op_Equality(Microsoft.Owin.BuilderProperties.AddressCollection,Microsoft.Owin.BuilderProperties.AddressCollection)
      commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.op_Equality(Microsoft.Owin.BuilderProperties.AddressCollection,Microsoft.Owin.BuilderProperties.AddressCollection)
      language: CSharp
      name:
        CSharp: Equality(AddressCollection, AddressCollection)
        VB: Equality(AddressCollection, AddressCollection)
      nameWithType:
        CSharp: AddressCollection.Equality(AddressCollection, AddressCollection)
        VB: AddressCollection.Equality(AddressCollection, AddressCollection)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AddressCollection.Equality(Microsoft.Owin.BuilderProperties.AddressCollection, Microsoft.Owin.BuilderProperties.AddressCollection)
        VB: Microsoft.Owin.BuilderProperties.AddressCollection.Equality(Microsoft.Owin.BuilderProperties.AddressCollection, Microsoft.Owin.BuilderProperties.AddressCollection)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool operator ==(AddressCollection left, AddressCollection right)
          VB: Public Shared Operator =(left As AddressCollection, right As AddressCollection) As Boolean
        parameters:
        - id: left
          type: Microsoft.Owin.BuilderProperties.AddressCollection
        - id: right
          type: Microsoft.Owin.BuilderProperties.AddressCollection
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.AddressCollection.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.BuilderProperties.AddressCollection.op_Inequality(Microsoft.Owin.BuilderProperties.AddressCollection,Microsoft.Owin.BuilderProperties.AddressCollection)
      commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.op_Inequality(Microsoft.Owin.BuilderProperties.AddressCollection,Microsoft.Owin.BuilderProperties.AddressCollection)
      language: CSharp
      name:
        CSharp: Inequality(AddressCollection, AddressCollection)
        VB: Inequality(AddressCollection, AddressCollection)
      nameWithType:
        CSharp: AddressCollection.Inequality(AddressCollection, AddressCollection)
        VB: AddressCollection.Inequality(AddressCollection, AddressCollection)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AddressCollection.Inequality(Microsoft.Owin.BuilderProperties.AddressCollection, Microsoft.Owin.BuilderProperties.AddressCollection)
        VB: Microsoft.Owin.BuilderProperties.AddressCollection.Inequality(Microsoft.Owin.BuilderProperties.AddressCollection, Microsoft.Owin.BuilderProperties.AddressCollection)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool operator !=(AddressCollection left, AddressCollection right)
          VB: Public Shared Operator <>(left As AddressCollection, right As AddressCollection) As Boolean
        parameters:
        - id: left
          type: Microsoft.Owin.BuilderProperties.AddressCollection
        - id: right
          type: Microsoft.Owin.BuilderProperties.AddressCollection
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.AddressCollection.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.BuilderProperties.AddressCollection.List
      commentId: P:Microsoft.Owin.BuilderProperties.AddressCollection.List
      language: CSharp
      name:
        CSharp: List
        VB: List
      nameWithType:
        CSharp: AddressCollection.List
        VB: AddressCollection.List
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AddressCollection.List
        VB: Microsoft.Owin.BuilderProperties.AddressCollection.List
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IList<IDictionary<string, object>> List { get; }
          VB: Public ReadOnly Property List As IList(Of IDictionary(Of String, Object))
        parameters: []
        return:
          type: System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}
      overload: Microsoft.Owin.BuilderProperties.AddressCollection.List*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.BuilderProperties.AddressCollection.Count
      commentId: P:Microsoft.Owin.BuilderProperties.AddressCollection.Count
      language: CSharp
      name:
        CSharp: Count
        VB: Count
      nameWithType:
        CSharp: AddressCollection.Count
        VB: AddressCollection.Count
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AddressCollection.Count
        VB: Microsoft.Owin.BuilderProperties.AddressCollection.Count
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public int Count { get; }
          VB: Public ReadOnly Property Count As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Microsoft.Owin.BuilderProperties.AddressCollection.Count*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.BuilderProperties.AddressCollection.Item(System.Int32)
      commentId: P:Microsoft.Owin.BuilderProperties.AddressCollection.Item(System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32]
        VB: Item(Int32)
      nameWithType:
        CSharp: AddressCollection.Item[Int32]
        VB: AddressCollection.Item(Int32)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AddressCollection.Item[System.Int32]
        VB: Microsoft.Owin.BuilderProperties.AddressCollection.Item(System.Int32)
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Address this[int index] { get; set; }
          VB: Public Property Item(index As Integer) As Address
        parameters:
        - id: index
          type: System.Int32
        return:
          type: Microsoft.Owin.BuilderProperties.Address
      overload: Microsoft.Owin.BuilderProperties.AddressCollection.Item*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Microsoft.Owin.BuilderProperties.AppProperties
    commentId: T:Microsoft.Owin.BuilderProperties.AppProperties
    language: CSharp
    name:
      CSharp: AppProperties
      VB: AppProperties
    nameWithType:
      CSharp: AppProperties
      VB: AppProperties
    qualifiedName:
      CSharp: Microsoft.Owin.BuilderProperties.AppProperties
      VB: Microsoft.Owin.BuilderProperties.AppProperties
    type: Struct
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.BuilderProperties
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public struct AppProperties
        VB: Public Structure AppProperties
    inheritedMembers:
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Microsoft.Owin.BuilderProperties.AppProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
      commentId: M:Microsoft.Owin.BuilderProperties.AppProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: AppProperties(IDictionary<String, Object>)
        VB: AppProperties(IDictionary(Of String, Object))
      nameWithType:
        CSharp: AppProperties.AppProperties(IDictionary<String, Object>)
        VB: AppProperties.AppProperties(IDictionary(Of String, Object))
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.AppProperties(System.Collections.Generic.IDictionary<System.String, System.Object>)
        VB: Microsoft.Owin.BuilderProperties.AppProperties.AppProperties(System.Collections.Generic.IDictionary(Of System.String, System.Object))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AppProperties(IDictionary<string, object> dictionary)
          VB: Public Sub New(dictionary As IDictionary(Of String, Object))
        parameters:
        - id: dictionary
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.BuilderProperties.AppProperties.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AppProperties.Equals(Microsoft.Owin.BuilderProperties.AppProperties)
      commentId: M:Microsoft.Owin.BuilderProperties.AppProperties.Equals(Microsoft.Owin.BuilderProperties.AppProperties)
      language: CSharp
      name:
        CSharp: Equals(AppProperties)
        VB: Equals(AppProperties)
      nameWithType:
        CSharp: AppProperties.Equals(AppProperties)
        VB: AppProperties.Equals(AppProperties)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.Equals(Microsoft.Owin.BuilderProperties.AppProperties)
        VB: Microsoft.Owin.BuilderProperties.AppProperties.Equals(Microsoft.Owin.BuilderProperties.AppProperties)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool Equals(AppProperties other)
          VB: Public Function Equals(other As AppProperties) As Boolean
        parameters:
        - id: other
          type: Microsoft.Owin.BuilderProperties.AppProperties
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.AppProperties.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AppProperties.Equals(System.Object)
      commentId: M:Microsoft.Owin.BuilderProperties.AppProperties.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: AppProperties.Equals(Object)
        VB: AppProperties.Equals(Object)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.Equals(System.Object)
        VB: Microsoft.Owin.BuilderProperties.AppProperties.Equals(System.Object)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.AppProperties.Equals*
      overridden: System.ValueType.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.BuilderProperties.AppProperties.GetHashCode
      commentId: M:Microsoft.Owin.BuilderProperties.AppProperties.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: AppProperties.GetHashCode()
        VB: AppProperties.GetHashCode()
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.GetHashCode()
        VB: Microsoft.Owin.BuilderProperties.AppProperties.GetHashCode()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Microsoft.Owin.BuilderProperties.AppProperties.GetHashCode*
      overridden: System.ValueType.GetHashCode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.BuilderProperties.AppProperties.op_Equality(Microsoft.Owin.BuilderProperties.AppProperties,Microsoft.Owin.BuilderProperties.AppProperties)
      commentId: M:Microsoft.Owin.BuilderProperties.AppProperties.op_Equality(Microsoft.Owin.BuilderProperties.AppProperties,Microsoft.Owin.BuilderProperties.AppProperties)
      language: CSharp
      name:
        CSharp: Equality(AppProperties, AppProperties)
        VB: Equality(AppProperties, AppProperties)
      nameWithType:
        CSharp: AppProperties.Equality(AppProperties, AppProperties)
        VB: AppProperties.Equality(AppProperties, AppProperties)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.Equality(Microsoft.Owin.BuilderProperties.AppProperties, Microsoft.Owin.BuilderProperties.AppProperties)
        VB: Microsoft.Owin.BuilderProperties.AppProperties.Equality(Microsoft.Owin.BuilderProperties.AppProperties, Microsoft.Owin.BuilderProperties.AppProperties)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool operator ==(AppProperties left, AppProperties right)
          VB: Public Shared Operator =(left As AppProperties, right As AppProperties) As Boolean
        parameters:
        - id: left
          type: Microsoft.Owin.BuilderProperties.AppProperties
        - id: right
          type: Microsoft.Owin.BuilderProperties.AppProperties
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.AppProperties.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.BuilderProperties.AppProperties.op_Inequality(Microsoft.Owin.BuilderProperties.AppProperties,Microsoft.Owin.BuilderProperties.AppProperties)
      commentId: M:Microsoft.Owin.BuilderProperties.AppProperties.op_Inequality(Microsoft.Owin.BuilderProperties.AppProperties,Microsoft.Owin.BuilderProperties.AppProperties)
      language: CSharp
      name:
        CSharp: Inequality(AppProperties, AppProperties)
        VB: Inequality(AppProperties, AppProperties)
      nameWithType:
        CSharp: AppProperties.Inequality(AppProperties, AppProperties)
        VB: AppProperties.Inequality(AppProperties, AppProperties)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.Inequality(Microsoft.Owin.BuilderProperties.AppProperties, Microsoft.Owin.BuilderProperties.AppProperties)
        VB: Microsoft.Owin.BuilderProperties.AppProperties.Inequality(Microsoft.Owin.BuilderProperties.AppProperties, Microsoft.Owin.BuilderProperties.AppProperties)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool operator !=(AppProperties left, AppProperties right)
          VB: Public Shared Operator <>(left As AppProperties, right As AppProperties) As Boolean
        parameters:
        - id: left
          type: Microsoft.Owin.BuilderProperties.AppProperties
        - id: right
          type: Microsoft.Owin.BuilderProperties.AppProperties
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.AppProperties.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.BuilderProperties.AppProperties.Get``1(System.String)
      commentId: M:Microsoft.Owin.BuilderProperties.AppProperties.Get``1(System.String)
      language: CSharp
      name:
        CSharp: Get<T>(String)
        VB: Get(Of T)(String)
      nameWithType:
        CSharp: AppProperties.Get<T>(String)
        VB: AppProperties.Get(Of T)(String)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.Get<T>(System.String)
        VB: Microsoft.Owin.BuilderProperties.AppProperties.Get(Of T)(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public T Get<T>(string key)
          VB: Public Function Get(Of T)(key As String) As T
        parameters:
        - id: key
          type: System.String
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Microsoft.Owin.BuilderProperties.AppProperties.Get*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AppProperties.Set(System.String,System.Object)
      commentId: M:Microsoft.Owin.BuilderProperties.AppProperties.Set(System.String,System.Object)
      language: CSharp
      name:
        CSharp: Set(String, Object)
        VB: Set(String, Object)
      nameWithType:
        CSharp: AppProperties.Set(String, Object)
        VB: AppProperties.Set(String, Object)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.Set(System.String, System.Object)
        VB: Microsoft.Owin.BuilderProperties.AppProperties.Set(System.String, System.Object)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AppProperties Set(string key, object value)
          VB: Public Function Set(key As String, value As Object) As AppProperties
        parameters:
        - id: key
          type: System.String
        - id: value
          type: System.Object
        return:
          type: Microsoft.Owin.BuilderProperties.AppProperties
      overload: Microsoft.Owin.BuilderProperties.AppProperties.Set*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AppProperties.OwinVersion
      commentId: P:Microsoft.Owin.BuilderProperties.AppProperties.OwinVersion
      language: CSharp
      name:
        CSharp: OwinVersion
        VB: OwinVersion
      nameWithType:
        CSharp: AppProperties.OwinVersion
        VB: AppProperties.OwinVersion
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.OwinVersion
        VB: Microsoft.Owin.BuilderProperties.AppProperties.OwinVersion
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string OwinVersion { get; set; }
          VB: Public Property OwinVersion As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.BuilderProperties.AppProperties.OwinVersion*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AppProperties.DefaultApp
      commentId: P:Microsoft.Owin.BuilderProperties.AppProperties.DefaultApp
      language: CSharp
      name:
        CSharp: DefaultApp
        VB: DefaultApp
      nameWithType:
        CSharp: AppProperties.DefaultApp
        VB: AppProperties.DefaultApp
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.DefaultApp
        VB: Microsoft.Owin.BuilderProperties.AppProperties.DefaultApp
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Func<IDictionary<string, object>, Task> DefaultApp { get; set; }
          VB: Public Property DefaultApp As Func(Of IDictionary(Of String, Object), Task)
        parameters: []
        return:
          type: System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}
      overload: Microsoft.Owin.BuilderProperties.AppProperties.DefaultApp*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AppProperties.AddSignatureConversionDelegate
      commentId: P:Microsoft.Owin.BuilderProperties.AppProperties.AddSignatureConversionDelegate
      language: CSharp
      name:
        CSharp: AddSignatureConversionDelegate
        VB: AddSignatureConversionDelegate
      nameWithType:
        CSharp: AppProperties.AddSignatureConversionDelegate
        VB: AppProperties.AddSignatureConversionDelegate
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.AddSignatureConversionDelegate
        VB: Microsoft.Owin.BuilderProperties.AppProperties.AddSignatureConversionDelegate
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Action<Delegate> AddSignatureConversionDelegate { get; set; }
          VB: Public Property AddSignatureConversionDelegate As Action(Of  Delegate)
        parameters: []
        return:
          type: System.Action{System.Delegate}
      overload: Microsoft.Owin.BuilderProperties.AppProperties.AddSignatureConversionDelegate*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AppProperties.AppName
      commentId: P:Microsoft.Owin.BuilderProperties.AppProperties.AppName
      language: CSharp
      name:
        CSharp: AppName
        VB: AppName
      nameWithType:
        CSharp: AppProperties.AppName
        VB: AppProperties.AppName
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.AppName
        VB: Microsoft.Owin.BuilderProperties.AppProperties.AppName
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string AppName { get; set; }
          VB: Public Property AppName As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.BuilderProperties.AppProperties.AppName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AppProperties.TraceOutput
      commentId: P:Microsoft.Owin.BuilderProperties.AppProperties.TraceOutput
      language: CSharp
      name:
        CSharp: TraceOutput
        VB: TraceOutput
      nameWithType:
        CSharp: AppProperties.TraceOutput
        VB: AppProperties.TraceOutput
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.TraceOutput
        VB: Microsoft.Owin.BuilderProperties.AppProperties.TraceOutput
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public TextWriter TraceOutput { get; set; }
          VB: Public Property TraceOutput As TextWriter
        parameters: []
        return:
          type: System.IO.TextWriter
      overload: Microsoft.Owin.BuilderProperties.AppProperties.TraceOutput*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AppProperties.OnAppDisposing
      commentId: P:Microsoft.Owin.BuilderProperties.AppProperties.OnAppDisposing
      language: CSharp
      name:
        CSharp: OnAppDisposing
        VB: OnAppDisposing
      nameWithType:
        CSharp: AppProperties.OnAppDisposing
        VB: AppProperties.OnAppDisposing
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.OnAppDisposing
        VB: Microsoft.Owin.BuilderProperties.AppProperties.OnAppDisposing
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public CancellationToken OnAppDisposing { get; set; }
          VB: Public Property OnAppDisposing As CancellationToken
        parameters: []
        return:
          type: System.Threading.CancellationToken
      overload: Microsoft.Owin.BuilderProperties.AppProperties.OnAppDisposing*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AppProperties.Addresses
      commentId: P:Microsoft.Owin.BuilderProperties.AppProperties.Addresses
      language: CSharp
      name:
        CSharp: Addresses
        VB: Addresses
      nameWithType:
        CSharp: AppProperties.Addresses
        VB: AppProperties.Addresses
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.Addresses
        VB: Microsoft.Owin.BuilderProperties.AppProperties.Addresses
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AddressCollection Addresses { get; set; }
          VB: Public Property Addresses As AddressCollection
        parameters: []
        return:
          type: Microsoft.Owin.BuilderProperties.AddressCollection
      overload: Microsoft.Owin.BuilderProperties.AppProperties.Addresses*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AppProperties.Capabilities
      commentId: P:Microsoft.Owin.BuilderProperties.AppProperties.Capabilities
      language: CSharp
      name:
        CSharp: Capabilities
        VB: Capabilities
      nameWithType:
        CSharp: AppProperties.Capabilities
        VB: AppProperties.Capabilities
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.Capabilities
        VB: Microsoft.Owin.BuilderProperties.AppProperties.Capabilities
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Capabilities Capabilities { get; set; }
          VB: Public Property Capabilities As Capabilities
        parameters: []
        return:
          type: Microsoft.Owin.BuilderProperties.Capabilities
      overload: Microsoft.Owin.BuilderProperties.AppProperties.Capabilities*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.AppProperties.Dictionary
      commentId: P:Microsoft.Owin.BuilderProperties.AppProperties.Dictionary
      language: CSharp
      name:
        CSharp: Dictionary
        VB: Dictionary
      nameWithType:
        CSharp: AppProperties.Dictionary
        VB: AppProperties.Dictionary
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.AppProperties.Dictionary
        VB: Microsoft.Owin.BuilderProperties.AppProperties.Dictionary
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IDictionary<string, object> Dictionary { get; }
          VB: Public ReadOnly Property Dictionary As IDictionary(Of String, Object)
        parameters: []
        return:
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.BuilderProperties.AppProperties.Dictionary*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.Owin.BuilderProperties.Capabilities
    commentId: T:Microsoft.Owin.BuilderProperties.Capabilities
    language: CSharp
    name:
      CSharp: Capabilities
      VB: Capabilities
    nameWithType:
      CSharp: Capabilities
      VB: Capabilities
    qualifiedName:
      CSharp: Microsoft.Owin.BuilderProperties.Capabilities
      VB: Microsoft.Owin.BuilderProperties.Capabilities
    type: Struct
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.BuilderProperties
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public struct Capabilities
        VB: Public Structure Capabilities
    inheritedMembers:
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Microsoft.Owin.BuilderProperties.Capabilities.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
      commentId: M:Microsoft.Owin.BuilderProperties.Capabilities.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: Capabilities(IDictionary<String, Object>)
        VB: Capabilities(IDictionary(Of String, Object))
      nameWithType:
        CSharp: Capabilities.Capabilities(IDictionary<String, Object>)
        VB: Capabilities.Capabilities(IDictionary(Of String, Object))
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Capabilities.Capabilities(System.Collections.Generic.IDictionary<System.String, System.Object>)
        VB: Microsoft.Owin.BuilderProperties.Capabilities.Capabilities(System.Collections.Generic.IDictionary(Of System.String, System.Object))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Capabilities(IDictionary<string, object> dictionary)
          VB: Public Sub New(dictionary As IDictionary(Of String, Object))
        parameters:
        - id: dictionary
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.BuilderProperties.Capabilities.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.Capabilities.Create
      commentId: M:Microsoft.Owin.BuilderProperties.Capabilities.Create
      language: CSharp
      name:
        CSharp: Create()
        VB: Create()
      nameWithType:
        CSharp: Capabilities.Create()
        VB: Capabilities.Create()
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Capabilities.Create()
        VB: Microsoft.Owin.BuilderProperties.Capabilities.Create()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static Capabilities Create()
          VB: Public Shared Function Create As Capabilities
        return:
          type: Microsoft.Owin.BuilderProperties.Capabilities
      overload: Microsoft.Owin.BuilderProperties.Capabilities.Create*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.BuilderProperties.Capabilities.Equals(Microsoft.Owin.BuilderProperties.Capabilities)
      commentId: M:Microsoft.Owin.BuilderProperties.Capabilities.Equals(Microsoft.Owin.BuilderProperties.Capabilities)
      language: CSharp
      name:
        CSharp: Equals(Capabilities)
        VB: Equals(Capabilities)
      nameWithType:
        CSharp: Capabilities.Equals(Capabilities)
        VB: Capabilities.Equals(Capabilities)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Capabilities.Equals(Microsoft.Owin.BuilderProperties.Capabilities)
        VB: Microsoft.Owin.BuilderProperties.Capabilities.Equals(Microsoft.Owin.BuilderProperties.Capabilities)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool Equals(Capabilities other)
          VB: Public Function Equals(other As Capabilities) As Boolean
        parameters:
        - id: other
          type: Microsoft.Owin.BuilderProperties.Capabilities
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.Capabilities.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.Capabilities.Equals(System.Object)
      commentId: M:Microsoft.Owin.BuilderProperties.Capabilities.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: Capabilities.Equals(Object)
        VB: Capabilities.Equals(Object)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Capabilities.Equals(System.Object)
        VB: Microsoft.Owin.BuilderProperties.Capabilities.Equals(System.Object)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.Capabilities.Equals*
      overridden: System.ValueType.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.BuilderProperties.Capabilities.GetHashCode
      commentId: M:Microsoft.Owin.BuilderProperties.Capabilities.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: Capabilities.GetHashCode()
        VB: Capabilities.GetHashCode()
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Capabilities.GetHashCode()
        VB: Microsoft.Owin.BuilderProperties.Capabilities.GetHashCode()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Microsoft.Owin.BuilderProperties.Capabilities.GetHashCode*
      overridden: System.ValueType.GetHashCode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Microsoft.Owin.BuilderProperties.Capabilities.op_Equality(Microsoft.Owin.BuilderProperties.Capabilities,Microsoft.Owin.BuilderProperties.Capabilities)
      commentId: M:Microsoft.Owin.BuilderProperties.Capabilities.op_Equality(Microsoft.Owin.BuilderProperties.Capabilities,Microsoft.Owin.BuilderProperties.Capabilities)
      language: CSharp
      name:
        CSharp: Equality(Capabilities, Capabilities)
        VB: Equality(Capabilities, Capabilities)
      nameWithType:
        CSharp: Capabilities.Equality(Capabilities, Capabilities)
        VB: Capabilities.Equality(Capabilities, Capabilities)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Capabilities.Equality(Microsoft.Owin.BuilderProperties.Capabilities, Microsoft.Owin.BuilderProperties.Capabilities)
        VB: Microsoft.Owin.BuilderProperties.Capabilities.Equality(Microsoft.Owin.BuilderProperties.Capabilities, Microsoft.Owin.BuilderProperties.Capabilities)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool operator ==(Capabilities left, Capabilities right)
          VB: Public Shared Operator =(left As Capabilities, right As Capabilities) As Boolean
        parameters:
        - id: left
          type: Microsoft.Owin.BuilderProperties.Capabilities
        - id: right
          type: Microsoft.Owin.BuilderProperties.Capabilities
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.Capabilities.op_Equality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.BuilderProperties.Capabilities.op_Inequality(Microsoft.Owin.BuilderProperties.Capabilities,Microsoft.Owin.BuilderProperties.Capabilities)
      commentId: M:Microsoft.Owin.BuilderProperties.Capabilities.op_Inequality(Microsoft.Owin.BuilderProperties.Capabilities,Microsoft.Owin.BuilderProperties.Capabilities)
      language: CSharp
      name:
        CSharp: Inequality(Capabilities, Capabilities)
        VB: Inequality(Capabilities, Capabilities)
      nameWithType:
        CSharp: Capabilities.Inequality(Capabilities, Capabilities)
        VB: Capabilities.Inequality(Capabilities, Capabilities)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Capabilities.Inequality(Microsoft.Owin.BuilderProperties.Capabilities, Microsoft.Owin.BuilderProperties.Capabilities)
        VB: Microsoft.Owin.BuilderProperties.Capabilities.Inequality(Microsoft.Owin.BuilderProperties.Capabilities, Microsoft.Owin.BuilderProperties.Capabilities)
      type: Operator
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool operator !=(Capabilities left, Capabilities right)
          VB: Public Shared Operator <>(left As Capabilities, right As Capabilities) As Boolean
        parameters:
        - id: left
          type: Microsoft.Owin.BuilderProperties.Capabilities
        - id: right
          type: Microsoft.Owin.BuilderProperties.Capabilities
        return:
          type: System.Boolean
      overload: Microsoft.Owin.BuilderProperties.Capabilities.op_Inequality*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.BuilderProperties.Capabilities.Get``1(System.String)
      commentId: M:Microsoft.Owin.BuilderProperties.Capabilities.Get``1(System.String)
      language: CSharp
      name:
        CSharp: Get<T>(String)
        VB: Get(Of T)(String)
      nameWithType:
        CSharp: Capabilities.Get<T>(String)
        VB: Capabilities.Get(Of T)(String)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Capabilities.Get<T>(System.String)
        VB: Microsoft.Owin.BuilderProperties.Capabilities.Get(Of T)(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public T Get<T>(string key)
          VB: Public Function Get(Of T)(key As String) As T
        parameters:
        - id: key
          type: System.String
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Microsoft.Owin.BuilderProperties.Capabilities.Get*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.Capabilities.Set(System.String,System.Object)
      commentId: M:Microsoft.Owin.BuilderProperties.Capabilities.Set(System.String,System.Object)
      language: CSharp
      name:
        CSharp: Set(String, Object)
        VB: Set(String, Object)
      nameWithType:
        CSharp: Capabilities.Set(String, Object)
        VB: Capabilities.Set(String, Object)
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Capabilities.Set(System.String, System.Object)
        VB: Microsoft.Owin.BuilderProperties.Capabilities.Set(System.String, System.Object)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Capabilities Set(string key, object value)
          VB: Public Function Set(key As String, value As Object) As Capabilities
        parameters:
        - id: key
          type: System.String
        - id: value
          type: System.Object
        return:
          type: Microsoft.Owin.BuilderProperties.Capabilities
      overload: Microsoft.Owin.BuilderProperties.Capabilities.Set*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.Capabilities.Dictionary
      commentId: P:Microsoft.Owin.BuilderProperties.Capabilities.Dictionary
      language: CSharp
      name:
        CSharp: Dictionary
        VB: Dictionary
      nameWithType:
        CSharp: Capabilities.Dictionary
        VB: Capabilities.Dictionary
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Capabilities.Dictionary
        VB: Microsoft.Owin.BuilderProperties.Capabilities.Dictionary
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IDictionary<string, object> Dictionary { get; }
          VB: Public ReadOnly Property Dictionary As IDictionary(Of String, Object)
        parameters: []
        return:
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.BuilderProperties.Capabilities.Dictionary*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.BuilderProperties.Capabilities.SendFileVersion
      commentId: P:Microsoft.Owin.BuilderProperties.Capabilities.SendFileVersion
      language: CSharp
      name:
        CSharp: SendFileVersion
        VB: SendFileVersion
      nameWithType:
        CSharp: Capabilities.SendFileVersion
        VB: Capabilities.SendFileVersion
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Capabilities.SendFileVersion
        VB: Microsoft.Owin.BuilderProperties.Capabilities.SendFileVersion
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string SendFileVersion { get; set; }
          VB: Public Property SendFileVersion As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.BuilderProperties.Capabilities.SendFileVersion*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.BuilderProperties.Capabilities.WebSocketVersion
      commentId: P:Microsoft.Owin.BuilderProperties.Capabilities.WebSocketVersion
      language: CSharp
      name:
        CSharp: WebSocketVersion
        VB: WebSocketVersion
      nameWithType:
        CSharp: Capabilities.WebSocketVersion
        VB: Capabilities.WebSocketVersion
      qualifiedName:
        CSharp: Microsoft.Owin.BuilderProperties.Capabilities.WebSocketVersion
        VB: Microsoft.Owin.BuilderProperties.Capabilities.WebSocketVersion
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.BuilderProperties
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string WebSocketVersion { get; set; }
          VB: Public Property WebSocketVersion As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.BuilderProperties.Capabilities.WebSocketVersion*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
- id: Microsoft.Owin.Extensions
  commentId: N:Microsoft.Owin.Extensions
  language: CSharp
  name:
    CSharp: Microsoft.Owin.Extensions
    VB: Microsoft.Owin.Extensions
  nameWithType:
    CSharp: Microsoft.Owin.Extensions
    VB: Microsoft.Owin.Extensions
  qualifiedName:
    CSharp: Microsoft.Owin.Extensions
    VB: Microsoft.Owin.Extensions
  type: Namespace
  assemblies:
  - Microsoft.Owin
  modifiers: {}
  items:
  - id: Microsoft.Owin.Extensions.UseHandlerMiddleware
    commentId: T:Microsoft.Owin.Extensions.UseHandlerMiddleware
    language: CSharp
    name:
      CSharp: UseHandlerMiddleware
      VB: UseHandlerMiddleware
    nameWithType:
      CSharp: UseHandlerMiddleware
      VB: UseHandlerMiddleware
    qualifiedName:
      CSharp: Microsoft.Owin.Extensions.UseHandlerMiddleware
      VB: Microsoft.Owin.Extensions.UseHandlerMiddleware
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Extensions
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public class UseHandlerMiddleware
        VB: Public Class UseHandlerMiddleware
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Extensions.UseHandlerMiddleware.#ctor(System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task})
      commentId: M:Microsoft.Owin.Extensions.UseHandlerMiddleware.#ctor(System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task})
      language: CSharp
      name:
        CSharp: UseHandlerMiddleware(Func<IDictionary<String, Object>, Task>, Func<IOwinContext, Task>)
        VB: UseHandlerMiddleware(Func(Of IDictionary(Of String, Object), Task), Func(Of IOwinContext, Task))
      nameWithType:
        CSharp: UseHandlerMiddleware.UseHandlerMiddleware(Func<IDictionary<String, Object>, Task>, Func<IOwinContext, Task>)
        VB: UseHandlerMiddleware.UseHandlerMiddleware(Func(Of IDictionary(Of String, Object), Task), Func(Of IOwinContext, Task))
      qualifiedName:
        CSharp: Microsoft.Owin.Extensions.UseHandlerMiddleware.UseHandlerMiddleware(System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>, System.Func<Microsoft.Owin.IOwinContext, System.Threading.Tasks.Task>)
        VB: Microsoft.Owin.Extensions.UseHandlerMiddleware.UseHandlerMiddleware(System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task), System.Func(Of Microsoft.Owin.IOwinContext, System.Threading.Tasks.Task))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Extensions
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public UseHandlerMiddleware(Func<IDictionary<string, object>, Task> next, Func<IOwinContext, Task> handler)
          VB: Public Sub New(next As Func(Of IDictionary(Of String, Object), Task), handler As Func(Of IOwinContext, Task))
        parameters:
        - id: next
          type: System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}
        - id: handler
          type: System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task}
      overload: Microsoft.Owin.Extensions.UseHandlerMiddleware.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Extensions.UseHandlerMiddleware.#ctor(System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task})
      commentId: M:Microsoft.Owin.Extensions.UseHandlerMiddleware.#ctor(System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task})
      language: CSharp
      name:
        CSharp: UseHandlerMiddleware(Func<IDictionary<String, Object>, Task>, Func<IOwinContext, Func<Task>, Task>)
        VB: UseHandlerMiddleware(Func(Of IDictionary(Of String, Object), Task), Func(Of IOwinContext, Func(Of Task), Task))
      nameWithType:
        CSharp: UseHandlerMiddleware.UseHandlerMiddleware(Func<IDictionary<String, Object>, Task>, Func<IOwinContext, Func<Task>, Task>)
        VB: UseHandlerMiddleware.UseHandlerMiddleware(Func(Of IDictionary(Of String, Object), Task), Func(Of IOwinContext, Func(Of Task), Task))
      qualifiedName:
        CSharp: Microsoft.Owin.Extensions.UseHandlerMiddleware.UseHandlerMiddleware(System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>, System.Func<Microsoft.Owin.IOwinContext, System.Func<System.Threading.Tasks.Task>, System.Threading.Tasks.Task>)
        VB: Microsoft.Owin.Extensions.UseHandlerMiddleware.UseHandlerMiddleware(System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task), System.Func(Of Microsoft.Owin.IOwinContext, System.Func(Of System.Threading.Tasks.Task), System.Threading.Tasks.Task))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Extensions
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public UseHandlerMiddleware(Func<IDictionary<string, object>, Task> next, Func<IOwinContext, Func<Task>, Task> handler)
          VB: Public Sub New(next As Func(Of IDictionary(Of String, Object), Task), handler As Func(Of IOwinContext, Func(Of Task), Task))
        parameters:
        - id: next
          type: System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}
        - id: handler
          type: System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task}
      overload: Microsoft.Owin.Extensions.UseHandlerMiddleware.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Extensions.UseHandlerMiddleware.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object})
      commentId: M:Microsoft.Owin.Extensions.UseHandlerMiddleware.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: Invoke(IDictionary<String, Object>)
        VB: Invoke(IDictionary(Of String, Object))
      nameWithType:
        CSharp: UseHandlerMiddleware.Invoke(IDictionary<String, Object>)
        VB: UseHandlerMiddleware.Invoke(IDictionary(Of String, Object))
      qualifiedName:
        CSharp: Microsoft.Owin.Extensions.UseHandlerMiddleware.Invoke(System.Collections.Generic.IDictionary<System.String, System.Object>)
        VB: Microsoft.Owin.Extensions.UseHandlerMiddleware.Invoke(System.Collections.Generic.IDictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Extensions
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Task Invoke(IDictionary<string, object> environment)
          VB: Public Function Invoke(environment As IDictionary(Of String, Object)) As Task
        parameters:
        - id: environment
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
        return:
          type: System.Threading.Tasks.Task
      overload: Microsoft.Owin.Extensions.UseHandlerMiddleware.Invoke*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Microsoft.Owin.Extensions.IntegratedPipelineExtensions
    commentId: T:Microsoft.Owin.Extensions.IntegratedPipelineExtensions
    language: CSharp
    name:
      CSharp: IntegratedPipelineExtensions
      VB: IntegratedPipelineExtensions
    nameWithType:
      CSharp: IntegratedPipelineExtensions
      VB: IntegratedPipelineExtensions
    qualifiedName:
      CSharp: Microsoft.Owin.Extensions.IntegratedPipelineExtensions
      VB: Microsoft.Owin.Extensions.IntegratedPipelineExtensions
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Extensions
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public static class IntegratedPipelineExtensions
        VB: Public Module IntegratedPipelineExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker(Owin.IAppBuilder,System.String)
      commentId: M:Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker(Owin.IAppBuilder,System.String)
      language: CSharp
      name:
        CSharp: UseStageMarker(IAppBuilder, String)
        VB: UseStageMarker(IAppBuilder, String)
      nameWithType:
        CSharp: IntegratedPipelineExtensions.UseStageMarker(IAppBuilder, String)
        VB: IntegratedPipelineExtensions.UseStageMarker(IAppBuilder, String)
      qualifiedName:
        CSharp: Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker(Owin.IAppBuilder, System.String)
        VB: Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker(Owin.IAppBuilder, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Extensions
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static IAppBuilder UseStageMarker(this IAppBuilder app, string stageName)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function UseStageMarker(app As IAppBuilder, stageName As String) As IAppBuilder
        parameters:
        - id: app
          type: Owin.IAppBuilder
        - id: stageName
          type: System.String
        return:
          type: Owin.IAppBuilder
      overload: Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker(Owin.IAppBuilder,Owin.PipelineStage)
      commentId: M:Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker(Owin.IAppBuilder,Owin.PipelineStage)
      language: CSharp
      name:
        CSharp: UseStageMarker(IAppBuilder, PipelineStage)
        VB: UseStageMarker(IAppBuilder, PipelineStage)
      nameWithType:
        CSharp: IntegratedPipelineExtensions.UseStageMarker(IAppBuilder, PipelineStage)
        VB: IntegratedPipelineExtensions.UseStageMarker(IAppBuilder, PipelineStage)
      qualifiedName:
        CSharp: Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker(Owin.IAppBuilder, Owin.PipelineStage)
        VB: Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker(Owin.IAppBuilder, Owin.PipelineStage)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Extensions
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static IAppBuilder UseStageMarker(this IAppBuilder app, PipelineStage stage)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function UseStageMarker(app As IAppBuilder, stage As PipelineStage) As IAppBuilder
        parameters:
        - id: app
          type: Owin.IAppBuilder
        - id: stage
          type: Owin.PipelineStage
        return:
          type: Owin.IAppBuilder
      overload: Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: Microsoft.Owin.Helpers
  commentId: N:Microsoft.Owin.Helpers
  language: CSharp
  name:
    CSharp: Microsoft.Owin.Helpers
    VB: Microsoft.Owin.Helpers
  nameWithType:
    CSharp: Microsoft.Owin.Helpers
    VB: Microsoft.Owin.Helpers
  qualifiedName:
    CSharp: Microsoft.Owin.Helpers
    VB: Microsoft.Owin.Helpers
  type: Namespace
  assemblies:
  - Microsoft.Owin
  modifiers: {}
  items:
  - id: Microsoft.Owin.Helpers.WebHelpers
    commentId: T:Microsoft.Owin.Helpers.WebHelpers
    language: CSharp
    name:
      CSharp: WebHelpers
      VB: WebHelpers
    nameWithType:
      CSharp: WebHelpers
      VB: WebHelpers
    qualifiedName:
      CSharp: Microsoft.Owin.Helpers.WebHelpers
      VB: Microsoft.Owin.Helpers.WebHelpers
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Helpers
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public static class WebHelpers
        VB: Public Module WebHelpers
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Microsoft.Owin.Helpers.WebHelpers.ParseForm(System.String)
      commentId: M:Microsoft.Owin.Helpers.WebHelpers.ParseForm(System.String)
      language: CSharp
      name:
        CSharp: ParseForm(String)
        VB: ParseForm(String)
      nameWithType:
        CSharp: WebHelpers.ParseForm(String)
        VB: WebHelpers.ParseForm(String)
      qualifiedName:
        CSharp: Microsoft.Owin.Helpers.WebHelpers.ParseForm(System.String)
        VB: Microsoft.Owin.Helpers.WebHelpers.ParseForm(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Helpers
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static IFormCollection ParseForm(string text)
          VB: Public Shared Function ParseForm(text As String) As IFormCollection
        parameters:
        - id: text
          type: System.String
        return:
          type: Microsoft.Owin.IFormCollection
      overload: Microsoft.Owin.Helpers.WebHelpers.ParseForm*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: Microsoft.Owin.Infrastructure
  commentId: N:Microsoft.Owin.Infrastructure
  language: CSharp
  name:
    CSharp: Microsoft.Owin.Infrastructure
    VB: Microsoft.Owin.Infrastructure
  nameWithType:
    CSharp: Microsoft.Owin.Infrastructure
    VB: Microsoft.Owin.Infrastructure
  qualifiedName:
    CSharp: Microsoft.Owin.Infrastructure
    VB: Microsoft.Owin.Infrastructure
  type: Namespace
  assemblies:
  - Microsoft.Owin
  modifiers: {}
  items:
  - id: Microsoft.Owin.Infrastructure.ICookieManager
    commentId: T:Microsoft.Owin.Infrastructure.ICookieManager
    language: CSharp
    name:
      CSharp: ICookieManager
      VB: ICookieManager
    nameWithType:
      CSharp: ICookieManager
      VB: ICookieManager
    qualifiedName:
      CSharp: Microsoft.Owin.Infrastructure.ICookieManager
      VB: Microsoft.Owin.Infrastructure.ICookieManager
    type: Interface
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Infrastructure
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public interface ICookieManager
        VB: Public Interface ICookieManager
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie(Microsoft.Owin.IOwinContext,System.String)
      commentId: M:Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie(Microsoft.Owin.IOwinContext,System.String)
      language: CSharp
      name:
        CSharp: GetRequestCookie(IOwinContext, String)
        VB: GetRequestCookie(IOwinContext, String)
      nameWithType:
        CSharp: ICookieManager.GetRequestCookie(IOwinContext, String)
        VB: ICookieManager.GetRequestCookie(IOwinContext, String)
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie(Microsoft.Owin.IOwinContext, System.String)
        VB: Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie(Microsoft.Owin.IOwinContext, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: string GetRequestCookie(IOwinContext context, string key)
          VB: Function GetRequestCookie(context As IOwinContext, key As String) As String
        parameters:
        - id: context
          type: Microsoft.Owin.IOwinContext
        - id: key
          type: System.String
        return:
          type: System.String
      overload: Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie(Microsoft.Owin.IOwinContext,System.String,System.String,Microsoft.Owin.CookieOptions)
      commentId: M:Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie(Microsoft.Owin.IOwinContext,System.String,System.String,Microsoft.Owin.CookieOptions)
      language: CSharp
      name:
        CSharp: AppendResponseCookie(IOwinContext, String, String, CookieOptions)
        VB: AppendResponseCookie(IOwinContext, String, String, CookieOptions)
      nameWithType:
        CSharp: ICookieManager.AppendResponseCookie(IOwinContext, String, String, CookieOptions)
        VB: ICookieManager.AppendResponseCookie(IOwinContext, String, String, CookieOptions)
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie(Microsoft.Owin.IOwinContext, System.String, System.String, Microsoft.Owin.CookieOptions)
        VB: Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie(Microsoft.Owin.IOwinContext, System.String, System.String, Microsoft.Owin.CookieOptions)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void AppendResponseCookie(IOwinContext context, string key, string value, CookieOptions options)
          VB: Sub AppendResponseCookie(context As IOwinContext, key As String, value As String, options As CookieOptions)
        parameters:
        - id: context
          type: Microsoft.Owin.IOwinContext
        - id: key
          type: System.String
        - id: value
          type: System.String
        - id: options
          type: Microsoft.Owin.CookieOptions
      overload: Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie(Microsoft.Owin.IOwinContext,System.String,Microsoft.Owin.CookieOptions)
      commentId: M:Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie(Microsoft.Owin.IOwinContext,System.String,Microsoft.Owin.CookieOptions)
      language: CSharp
      name:
        CSharp: DeleteCookie(IOwinContext, String, CookieOptions)
        VB: DeleteCookie(IOwinContext, String, CookieOptions)
      nameWithType:
        CSharp: ICookieManager.DeleteCookie(IOwinContext, String, CookieOptions)
        VB: ICookieManager.DeleteCookie(IOwinContext, String, CookieOptions)
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie(Microsoft.Owin.IOwinContext, System.String, Microsoft.Owin.CookieOptions)
        VB: Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie(Microsoft.Owin.IOwinContext, System.String, Microsoft.Owin.CookieOptions)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void DeleteCookie(IOwinContext context, string key, CookieOptions options)
          VB: Sub DeleteCookie(context As IOwinContext, key As String, options As CookieOptions)
        parameters:
        - id: context
          type: Microsoft.Owin.IOwinContext
        - id: key
          type: System.String
        - id: options
          type: Microsoft.Owin.CookieOptions
      overload: Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie*
      modifiers:
        CSharp: []
        VB: []
  - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager
    commentId: T:Microsoft.Owin.Infrastructure.ChunkingCookieManager
    language: CSharp
    name:
      CSharp: ChunkingCookieManager
      VB: ChunkingCookieManager
    nameWithType:
      CSharp: ChunkingCookieManager
      VB: ChunkingCookieManager
    qualifiedName:
      CSharp: Microsoft.Owin.Infrastructure.ChunkingCookieManager
      VB: Microsoft.Owin.Infrastructure.ChunkingCookieManager
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Infrastructure
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public class ChunkingCookieManager : ICookieManager'
        VB: >-
          Public Class ChunkingCookieManager

              Implements ICookieManager
    inheritance:
    - System.Object
    implements:
    - Microsoft.Owin.Infrastructure.ICookieManager
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.#ctor
      commentId: M:Microsoft.Owin.Infrastructure.ChunkingCookieManager.#ctor
      language: CSharp
      name:
        CSharp: ChunkingCookieManager()
        VB: ChunkingCookieManager()
      nameWithType:
        CSharp: ChunkingCookieManager.ChunkingCookieManager()
        VB: ChunkingCookieManager.ChunkingCookieManager()
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkingCookieManager()
        VB: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkingCookieManager()
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public ChunkingCookieManager()
          VB: Public Sub New
      overload: Microsoft.Owin.Infrastructure.ChunkingCookieManager.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.GetRequestCookie(Microsoft.Owin.IOwinContext,System.String)
      commentId: M:Microsoft.Owin.Infrastructure.ChunkingCookieManager.GetRequestCookie(Microsoft.Owin.IOwinContext,System.String)
      language: CSharp
      name:
        CSharp: GetRequestCookie(IOwinContext, String)
        VB: GetRequestCookie(IOwinContext, String)
      nameWithType:
        CSharp: ChunkingCookieManager.GetRequestCookie(IOwinContext, String)
        VB: ChunkingCookieManager.GetRequestCookie(IOwinContext, String)
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.ChunkingCookieManager.GetRequestCookie(Microsoft.Owin.IOwinContext, System.String)
        VB: Microsoft.Owin.Infrastructure.ChunkingCookieManager.GetRequestCookie(Microsoft.Owin.IOwinContext, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string GetRequestCookie(IOwinContext context, string key)
          VB: Public Function GetRequestCookie(context As IOwinContext, key As String) As String
        parameters:
        - id: context
          type: Microsoft.Owin.IOwinContext
        - id: key
          type: System.String
        return:
          type: System.String
      overload: Microsoft.Owin.Infrastructure.ChunkingCookieManager.GetRequestCookie*
      implements:
      - Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie(Microsoft.Owin.IOwinContext,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.AppendResponseCookie(Microsoft.Owin.IOwinContext,System.String,System.String,Microsoft.Owin.CookieOptions)
      commentId: M:Microsoft.Owin.Infrastructure.ChunkingCookieManager.AppendResponseCookie(Microsoft.Owin.IOwinContext,System.String,System.String,Microsoft.Owin.CookieOptions)
      language: CSharp
      name:
        CSharp: AppendResponseCookie(IOwinContext, String, String, CookieOptions)
        VB: AppendResponseCookie(IOwinContext, String, String, CookieOptions)
      nameWithType:
        CSharp: ChunkingCookieManager.AppendResponseCookie(IOwinContext, String, String, CookieOptions)
        VB: ChunkingCookieManager.AppendResponseCookie(IOwinContext, String, String, CookieOptions)
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.ChunkingCookieManager.AppendResponseCookie(Microsoft.Owin.IOwinContext, System.String, System.String, Microsoft.Owin.CookieOptions)
        VB: Microsoft.Owin.Infrastructure.ChunkingCookieManager.AppendResponseCookie(Microsoft.Owin.IOwinContext, System.String, System.String, Microsoft.Owin.CookieOptions)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void AppendResponseCookie(IOwinContext context, string key, string value, CookieOptions options)
          VB: Public Sub AppendResponseCookie(context As IOwinContext, key As String, value As String, options As CookieOptions)
        parameters:
        - id: context
          type: Microsoft.Owin.IOwinContext
        - id: key
          type: System.String
        - id: value
          type: System.String
        - id: options
          type: Microsoft.Owin.CookieOptions
      overload: Microsoft.Owin.Infrastructure.ChunkingCookieManager.AppendResponseCookie*
      implements:
      - Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie(Microsoft.Owin.IOwinContext,System.String,System.String,Microsoft.Owin.CookieOptions)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.DeleteCookie(Microsoft.Owin.IOwinContext,System.String,Microsoft.Owin.CookieOptions)
      commentId: M:Microsoft.Owin.Infrastructure.ChunkingCookieManager.DeleteCookie(Microsoft.Owin.IOwinContext,System.String,Microsoft.Owin.CookieOptions)
      language: CSharp
      name:
        CSharp: DeleteCookie(IOwinContext, String, CookieOptions)
        VB: DeleteCookie(IOwinContext, String, CookieOptions)
      nameWithType:
        CSharp: ChunkingCookieManager.DeleteCookie(IOwinContext, String, CookieOptions)
        VB: ChunkingCookieManager.DeleteCookie(IOwinContext, String, CookieOptions)
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.ChunkingCookieManager.DeleteCookie(Microsoft.Owin.IOwinContext, System.String, Microsoft.Owin.CookieOptions)
        VB: Microsoft.Owin.Infrastructure.ChunkingCookieManager.DeleteCookie(Microsoft.Owin.IOwinContext, System.String, Microsoft.Owin.CookieOptions)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public void DeleteCookie(IOwinContext context, string key, CookieOptions options)
          VB: Public Sub DeleteCookie(context As IOwinContext, key As String, options As CookieOptions)
        parameters:
        - id: context
          type: Microsoft.Owin.IOwinContext
        - id: key
          type: System.String
        - id: options
          type: Microsoft.Owin.CookieOptions
      overload: Microsoft.Owin.Infrastructure.ChunkingCookieManager.DeleteCookie*
      implements:
      - Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie(Microsoft.Owin.IOwinContext,System.String,Microsoft.Owin.CookieOptions)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkSize
      commentId: P:Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkSize
      language: CSharp
      name:
        CSharp: ChunkSize
        VB: ChunkSize
      nameWithType:
        CSharp: ChunkingCookieManager.ChunkSize
        VB: ChunkingCookieManager.ChunkSize
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkSize
        VB: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkSize
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public int? ChunkSize { get; set; }
          VB: Public Property ChunkSize As Integer?
        parameters: []
        return:
          type: System.Nullable{System.Int32}
      overload: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkSize*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ThrowForPartialCookies
      commentId: P:Microsoft.Owin.Infrastructure.ChunkingCookieManager.ThrowForPartialCookies
      language: CSharp
      name:
        CSharp: ThrowForPartialCookies
        VB: ThrowForPartialCookies
      nameWithType:
        CSharp: ChunkingCookieManager.ThrowForPartialCookies
        VB: ChunkingCookieManager.ThrowForPartialCookies
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ThrowForPartialCookies
        VB: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ThrowForPartialCookies
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool ThrowForPartialCookies { get; set; }
          VB: Public Property ThrowForPartialCookies As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ThrowForPartialCookies*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Microsoft.Owin.Infrastructure.ISystemClock
    commentId: T:Microsoft.Owin.Infrastructure.ISystemClock
    language: CSharp
    name:
      CSharp: ISystemClock
      VB: ISystemClock
    nameWithType:
      CSharp: ISystemClock
      VB: ISystemClock
    qualifiedName:
      CSharp: Microsoft.Owin.Infrastructure.ISystemClock
      VB: Microsoft.Owin.Infrastructure.ISystemClock
    type: Interface
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Infrastructure
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public interface ISystemClock
        VB: Public Interface ISystemClock
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Microsoft.Owin.Infrastructure.ISystemClock.UtcNow
      commentId: P:Microsoft.Owin.Infrastructure.ISystemClock.UtcNow
      language: CSharp
      name:
        CSharp: UtcNow
        VB: UtcNow
      nameWithType:
        CSharp: ISystemClock.UtcNow
        VB: ISystemClock.UtcNow
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.ISystemClock.UtcNow
        VB: Microsoft.Owin.Infrastructure.ISystemClock.UtcNow
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: DateTimeOffset UtcNow { get; }
          VB: ReadOnly Property UtcNow As DateTimeOffset
        parameters: []
        return:
          type: System.DateTimeOffset
      overload: Microsoft.Owin.Infrastructure.ISystemClock.UtcNow*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
  - id: Microsoft.Owin.Infrastructure.SystemClock
    commentId: T:Microsoft.Owin.Infrastructure.SystemClock
    language: CSharp
    name:
      CSharp: SystemClock
      VB: SystemClock
    nameWithType:
      CSharp: SystemClock
      VB: SystemClock
    qualifiedName:
      CSharp: Microsoft.Owin.Infrastructure.SystemClock
      VB: Microsoft.Owin.Infrastructure.SystemClock
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Infrastructure
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public class SystemClock : ISystemClock'
        VB: >-
          Public Class SystemClock

              Implements ISystemClock
    inheritance:
    - System.Object
    implements:
    - Microsoft.Owin.Infrastructure.ISystemClock
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Infrastructure.SystemClock.#ctor
      commentId: M:Microsoft.Owin.Infrastructure.SystemClock.#ctor
      language: CSharp
      name:
        CSharp: SystemClock()
        VB: SystemClock()
      nameWithType:
        CSharp: SystemClock.SystemClock()
        VB: SystemClock.SystemClock()
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.SystemClock.SystemClock()
        VB: Microsoft.Owin.Infrastructure.SystemClock.SystemClock()
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public SystemClock()
          VB: Public Sub New
      overload: Microsoft.Owin.Infrastructure.SystemClock.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Infrastructure.SystemClock.UtcNow
      commentId: P:Microsoft.Owin.Infrastructure.SystemClock.UtcNow
      language: CSharp
      name:
        CSharp: UtcNow
        VB: UtcNow
      nameWithType:
        CSharp: SystemClock.UtcNow
        VB: SystemClock.UtcNow
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.SystemClock.UtcNow
        VB: Microsoft.Owin.Infrastructure.SystemClock.UtcNow
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public DateTimeOffset UtcNow { get; }
          VB: Public ReadOnly Property UtcNow As DateTimeOffset
        parameters: []
        return:
          type: System.DateTimeOffset
      overload: Microsoft.Owin.Infrastructure.SystemClock.UtcNow*
      implements:
      - Microsoft.Owin.Infrastructure.ISystemClock.UtcNow
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.Owin.Infrastructure.WebUtilities
    commentId: T:Microsoft.Owin.Infrastructure.WebUtilities
    language: CSharp
    name:
      CSharp: WebUtilities
      VB: WebUtilities
    nameWithType:
      CSharp: WebUtilities
      VB: WebUtilities
    qualifiedName:
      CSharp: Microsoft.Owin.Infrastructure.WebUtilities
      VB: Microsoft.Owin.Infrastructure.WebUtilities
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Infrastructure
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public static class WebUtilities
        VB: Public Module WebUtilities
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString(System.String,System.String)
      commentId: M:Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString(System.String,System.String)
      language: CSharp
      name:
        CSharp: AddQueryString(String, String)
        VB: AddQueryString(String, String)
      nameWithType:
        CSharp: WebUtilities.AddQueryString(String, String)
        VB: WebUtilities.AddQueryString(String, String)
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString(System.String, System.String)
        VB: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString(System.String, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static string AddQueryString(string uri, string queryString)
          VB: Public Shared Function AddQueryString(uri As String, queryString As String) As String
        parameters:
        - id: uri
          type: System.String
        - id: queryString
          type: System.String
        return:
          type: System.String
      overload: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString(System.String,System.String,System.String)
      commentId: M:Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: AddQueryString(String, String, String)
        VB: AddQueryString(String, String, String)
      nameWithType:
        CSharp: WebUtilities.AddQueryString(String, String, String)
        VB: WebUtilities.AddQueryString(String, String, String)
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString(System.String, System.String, System.String)
        VB: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString(System.String, System.String, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static string AddQueryString(string uri, string name, string value)
          VB: Public Shared Function AddQueryString(uri As String, name As String, value As String) As String
        parameters:
        - id: uri
          type: System.String
        - id: name
          type: System.String
        - id: value
          type: System.String
        return:
          type: System.String
      overload: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
      commentId: M:Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
      language: CSharp
      name:
        CSharp: AddQueryString(String, IDictionary<String, String>)
        VB: AddQueryString(String, IDictionary(Of String, String))
      nameWithType:
        CSharp: WebUtilities.AddQueryString(String, IDictionary<String, String>)
        VB: WebUtilities.AddQueryString(String, IDictionary(Of String, String))
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString(System.String, System.Collections.Generic.IDictionary<System.String, System.String>)
        VB: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString(System.String, System.Collections.Generic.IDictionary(Of System.String, System.String))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static string AddQueryString(string uri, IDictionary<string, string> queryString)
          VB: Public Shared Function AddQueryString(uri As String, queryString As IDictionary(Of String, String)) As String
        parameters:
        - id: uri
          type: System.String
        - id: queryString
          type: System.Collections.Generic.IDictionary{System.String,System.String}
        return:
          type: System.String
      overload: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Microsoft.Owin.Infrastructure.SignatureConversions
    commentId: T:Microsoft.Owin.Infrastructure.SignatureConversions
    language: CSharp
    name:
      CSharp: SignatureConversions
      VB: SignatureConversions
    nameWithType:
      CSharp: SignatureConversions
      VB: SignatureConversions
    qualifiedName:
      CSharp: Microsoft.Owin.Infrastructure.SignatureConversions
      VB: Microsoft.Owin.Infrastructure.SignatureConversions
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Infrastructure
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public static class SignatureConversions
        VB: Public Module SignatureConversions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Microsoft.Owin.Infrastructure.SignatureConversions.AddConversions(Owin.IAppBuilder)
      commentId: M:Microsoft.Owin.Infrastructure.SignatureConversions.AddConversions(Owin.IAppBuilder)
      language: CSharp
      name:
        CSharp: AddConversions(IAppBuilder)
        VB: AddConversions(IAppBuilder)
      nameWithType:
        CSharp: SignatureConversions.AddConversions(IAppBuilder)
        VB: SignatureConversions.AddConversions(IAppBuilder)
      qualifiedName:
        CSharp: Microsoft.Owin.Infrastructure.SignatureConversions.AddConversions(Owin.IAppBuilder)
        VB: Microsoft.Owin.Infrastructure.SignatureConversions.AddConversions(Owin.IAppBuilder)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Infrastructure
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static void AddConversions(IAppBuilder app)
          VB: Public Shared Sub AddConversions(app As IAppBuilder)
        parameters:
        - id: app
          type: Owin.IAppBuilder
      overload: Microsoft.Owin.Infrastructure.SignatureConversions.AddConversions*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: Microsoft.Owin.Logging
  commentId: N:Microsoft.Owin.Logging
  language: CSharp
  name:
    CSharp: Microsoft.Owin.Logging
    VB: Microsoft.Owin.Logging
  nameWithType:
    CSharp: Microsoft.Owin.Logging
    VB: Microsoft.Owin.Logging
  qualifiedName:
    CSharp: Microsoft.Owin.Logging
    VB: Microsoft.Owin.Logging
  type: Namespace
  assemblies:
  - Microsoft.Owin
  modifiers: {}
  items:
  - id: Microsoft.Owin.Logging.AppBuilderLoggerExtensions
    commentId: T:Microsoft.Owin.Logging.AppBuilderLoggerExtensions
    language: CSharp
    name:
      CSharp: AppBuilderLoggerExtensions
      VB: AppBuilderLoggerExtensions
    nameWithType:
      CSharp: AppBuilderLoggerExtensions
      VB: AppBuilderLoggerExtensions
    qualifiedName:
      CSharp: Microsoft.Owin.Logging.AppBuilderLoggerExtensions
      VB: Microsoft.Owin.Logging.AppBuilderLoggerExtensions
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Logging
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public static class AppBuilderLoggerExtensions
        VB: Public Module AppBuilderLoggerExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory(Owin.IAppBuilder,Microsoft.Owin.Logging.ILoggerFactory)
      commentId: M:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory(Owin.IAppBuilder,Microsoft.Owin.Logging.ILoggerFactory)
      language: CSharp
      name:
        CSharp: SetLoggerFactory(IAppBuilder, ILoggerFactory)
        VB: SetLoggerFactory(IAppBuilder, ILoggerFactory)
      nameWithType:
        CSharp: AppBuilderLoggerExtensions.SetLoggerFactory(IAppBuilder, ILoggerFactory)
        VB: AppBuilderLoggerExtensions.SetLoggerFactory(IAppBuilder, ILoggerFactory)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory(Owin.IAppBuilder, Microsoft.Owin.Logging.ILoggerFactory)
        VB: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory(Owin.IAppBuilder, Microsoft.Owin.Logging.ILoggerFactory)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static void SetLoggerFactory(this IAppBuilder app, ILoggerFactory loggerFactory)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SetLoggerFactory(app As IAppBuilder, loggerFactory As ILoggerFactory)
        parameters:
        - id: app
          type: Owin.IAppBuilder
        - id: loggerFactory
          type: Microsoft.Owin.Logging.ILoggerFactory
      overload: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory(Owin.IAppBuilder)
      commentId: M:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory(Owin.IAppBuilder)
      language: CSharp
      name:
        CSharp: GetLoggerFactory(IAppBuilder)
        VB: GetLoggerFactory(IAppBuilder)
      nameWithType:
        CSharp: AppBuilderLoggerExtensions.GetLoggerFactory(IAppBuilder)
        VB: AppBuilderLoggerExtensions.GetLoggerFactory(IAppBuilder)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory(Owin.IAppBuilder)
        VB: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory(Owin.IAppBuilder)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static ILoggerFactory GetLoggerFactory(this IAppBuilder app)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetLoggerFactory(app As IAppBuilder) As ILoggerFactory
        parameters:
        - id: app
          type: Owin.IAppBuilder
        return:
          type: Microsoft.Owin.Logging.ILoggerFactory
      overload: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder,System.String)
      commentId: M:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder,System.String)
      language: CSharp
      name:
        CSharp: CreateLogger(IAppBuilder, String)
        VB: CreateLogger(IAppBuilder, String)
      nameWithType:
        CSharp: AppBuilderLoggerExtensions.CreateLogger(IAppBuilder, String)
        VB: AppBuilderLoggerExtensions.CreateLogger(IAppBuilder, String)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder, System.String)
        VB: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static ILogger CreateLogger(this IAppBuilder app, string name)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function CreateLogger(app As IAppBuilder, name As String) As ILogger
        parameters:
        - id: app
          type: Owin.IAppBuilder
        - id: name
          type: System.String
        return:
          type: Microsoft.Owin.Logging.ILogger
      overload: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder,System.Type)
      commentId: M:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder,System.Type)
      language: CSharp
      name:
        CSharp: CreateLogger(IAppBuilder, Type)
        VB: CreateLogger(IAppBuilder, Type)
      nameWithType:
        CSharp: AppBuilderLoggerExtensions.CreateLogger(IAppBuilder, Type)
        VB: AppBuilderLoggerExtensions.CreateLogger(IAppBuilder, Type)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder, System.Type)
        VB: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder, System.Type)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static ILogger CreateLogger(this IAppBuilder app, Type component)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function CreateLogger(app As IAppBuilder, component As Type) As ILogger
        parameters:
        - id: app
          type: Owin.IAppBuilder
        - id: component
          type: System.Type
        return:
          type: Microsoft.Owin.Logging.ILogger
      overload: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger``1(Owin.IAppBuilder)
      commentId: M:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger``1(Owin.IAppBuilder)
      language: CSharp
      name:
        CSharp: CreateLogger<TType>(IAppBuilder)
        VB: CreateLogger(Of TType)(IAppBuilder)
      nameWithType:
        CSharp: AppBuilderLoggerExtensions.CreateLogger<TType>(IAppBuilder)
        VB: AppBuilderLoggerExtensions.CreateLogger(Of TType)(IAppBuilder)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger<TType>(Owin.IAppBuilder)
        VB: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Of TType)(Owin.IAppBuilder)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static ILogger CreateLogger<TType>(this IAppBuilder app)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function CreateLogger(Of TType)(app As IAppBuilder) As ILogger
        parameters:
        - id: app
          type: Owin.IAppBuilder
        typeParameters:
        - id: TType
        return:
          type: Microsoft.Owin.Logging.ILogger
      overload: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Microsoft.Owin.Logging.ILoggerFactory
    commentId: T:Microsoft.Owin.Logging.ILoggerFactory
    language: CSharp
    name:
      CSharp: ILoggerFactory
      VB: ILoggerFactory
    nameWithType:
      CSharp: ILoggerFactory
      VB: ILoggerFactory
    qualifiedName:
      CSharp: Microsoft.Owin.Logging.ILoggerFactory
      VB: Microsoft.Owin.Logging.ILoggerFactory
    type: Interface
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Logging
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public interface ILoggerFactory
        VB: Public Interface ILoggerFactory
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Microsoft.Owin.Logging.ILoggerFactory.Create(System.String)
      commentId: M:Microsoft.Owin.Logging.ILoggerFactory.Create(System.String)
      language: CSharp
      name:
        CSharp: Create(String)
        VB: Create(String)
      nameWithType:
        CSharp: ILoggerFactory.Create(String)
        VB: ILoggerFactory.Create(String)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.ILoggerFactory.Create(System.String)
        VB: Microsoft.Owin.Logging.ILoggerFactory.Create(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: ILogger Create(string name)
          VB: Function Create(name As String) As ILogger
        parameters:
        - id: name
          type: System.String
        return:
          type: Microsoft.Owin.Logging.ILogger
      overload: Microsoft.Owin.Logging.ILoggerFactory.Create*
      modifiers:
        CSharp: []
        VB: []
  - id: Microsoft.Owin.Logging.ILogger
    commentId: T:Microsoft.Owin.Logging.ILogger
    language: CSharp
    name:
      CSharp: ILogger
      VB: ILogger
    nameWithType:
      CSharp: ILogger
      VB: ILogger
    qualifiedName:
      CSharp: Microsoft.Owin.Logging.ILogger
      VB: Microsoft.Owin.Logging.ILogger
    type: Interface
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Logging
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public interface ILogger
        VB: Public Interface ILogger
    extensionMethods:
    - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(System.Diagnostics.TraceEventType)
    - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(System.String)
    - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(System.String)
    - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.String[])
    - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.Exception)
    - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String)
    - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String,System.Exception)
    - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String)
    - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String,System.Exception)
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Microsoft.Owin.Logging.ILogger.WriteCore(System.Diagnostics.TraceEventType,System.Int32,System.Object,System.Exception,System.Func{System.Object,System.Exception,System.String})
      commentId: M:Microsoft.Owin.Logging.ILogger.WriteCore(System.Diagnostics.TraceEventType,System.Int32,System.Object,System.Exception,System.Func{System.Object,System.Exception,System.String})
      language: CSharp
      name:
        CSharp: WriteCore(TraceEventType, Int32, Object, Exception, Func<Object, Exception, String>)
        VB: WriteCore(TraceEventType, Int32, Object, Exception, Func(Of Object, Exception, String))
      nameWithType:
        CSharp: ILogger.WriteCore(TraceEventType, Int32, Object, Exception, Func<Object, Exception, String>)
        VB: ILogger.WriteCore(TraceEventType, Int32, Object, Exception, Func(Of Object, Exception, String))
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.ILogger.WriteCore(System.Diagnostics.TraceEventType, System.Int32, System.Object, System.Exception, System.Func<System.Object, System.Exception, System.String>)
        VB: Microsoft.Owin.Logging.ILogger.WriteCore(System.Diagnostics.TraceEventType, System.Int32, System.Object, System.Exception, System.Func(Of System.Object, System.Exception, System.String))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: bool WriteCore(TraceEventType eventType, int eventId, object state, Exception exception, Func<object, Exception, string> formatter)
          VB: Function WriteCore(eventType As TraceEventType, eventId As Integer, state As Object, exception As Exception, formatter As Func(Of Object, Exception, String)) As Boolean
        parameters:
        - id: eventType
          type: System.Diagnostics.TraceEventType
        - id: eventId
          type: System.Int32
        - id: state
          type: System.Object
        - id: exception
          type: System.Exception
        - id: formatter
          type: System.Func{System.Object,System.Exception,System.String}
        return:
          type: System.Boolean
      overload: Microsoft.Owin.Logging.ILogger.WriteCore*
      modifiers:
        CSharp: []
        VB: []
  - id: Microsoft.Owin.Logging.LoggerFactory
    commentId: T:Microsoft.Owin.Logging.LoggerFactory
    language: CSharp
    name:
      CSharp: LoggerFactory
      VB: LoggerFactory
    nameWithType:
      CSharp: LoggerFactory
      VB: LoggerFactory
    qualifiedName:
      CSharp: Microsoft.Owin.Logging.LoggerFactory
      VB: Microsoft.Owin.Logging.LoggerFactory
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Logging
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public static class LoggerFactory
        VB: Public Module LoggerFactory
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Microsoft.Owin.Logging.LoggerFactory.Default
      commentId: P:Microsoft.Owin.Logging.LoggerFactory.Default
      language: CSharp
      name:
        CSharp: Default
        VB: Default
      nameWithType:
        CSharp: LoggerFactory.Default
        VB: LoggerFactory.Default
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.LoggerFactory.Default
        VB: Microsoft.Owin.Logging.LoggerFactory.Default
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static ILoggerFactory Default { get; set; }
          VB: Public Shared Property Default As ILoggerFactory
        parameters: []
        return:
          type: Microsoft.Owin.Logging.ILoggerFactory
      overload: Microsoft.Owin.Logging.LoggerFactory.Default*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
  - id: Microsoft.Owin.Logging.DiagnosticsLoggerFactory
    commentId: T:Microsoft.Owin.Logging.DiagnosticsLoggerFactory
    language: CSharp
    name:
      CSharp: DiagnosticsLoggerFactory
      VB: DiagnosticsLoggerFactory
    nameWithType:
      CSharp: DiagnosticsLoggerFactory
      VB: DiagnosticsLoggerFactory
    qualifiedName:
      CSharp: Microsoft.Owin.Logging.DiagnosticsLoggerFactory
      VB: Microsoft.Owin.Logging.DiagnosticsLoggerFactory
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Logging
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: 'public class DiagnosticsLoggerFactory : ILoggerFactory'
        VB: >-
          Public Class DiagnosticsLoggerFactory

              Implements ILoggerFactory
    inheritance:
    - System.Object
    implements:
    - Microsoft.Owin.Logging.ILoggerFactory
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor
      commentId: M:Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor
      language: CSharp
      name:
        CSharp: DiagnosticsLoggerFactory()
        VB: DiagnosticsLoggerFactory()
      nameWithType:
        CSharp: DiagnosticsLoggerFactory.DiagnosticsLoggerFactory()
        VB: DiagnosticsLoggerFactory.DiagnosticsLoggerFactory()
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.DiagnosticsLoggerFactory()
        VB: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.DiagnosticsLoggerFactory()
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public DiagnosticsLoggerFactory()
          VB: Public Sub New
      overload: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
      commentId: M:Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
      language: CSharp
      name:
        CSharp: DiagnosticsLoggerFactory(SourceSwitch, TraceListener)
        VB: DiagnosticsLoggerFactory(SourceSwitch, TraceListener)
      nameWithType:
        CSharp: DiagnosticsLoggerFactory.DiagnosticsLoggerFactory(SourceSwitch, TraceListener)
        VB: DiagnosticsLoggerFactory.DiagnosticsLoggerFactory(SourceSwitch, TraceListener)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.DiagnosticsLoggerFactory(System.Diagnostics.SourceSwitch, System.Diagnostics.TraceListener)
        VB: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.DiagnosticsLoggerFactory(System.Diagnostics.SourceSwitch, System.Diagnostics.TraceListener)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public DiagnosticsLoggerFactory(SourceSwitch rootSourceSwitch, TraceListener rootTraceListener)
          VB: Public Sub New(rootSourceSwitch As SourceSwitch, rootTraceListener As TraceListener)
        parameters:
        - id: rootSourceSwitch
          type: System.Diagnostics.SourceSwitch
        - id: rootTraceListener
          type: System.Diagnostics.TraceListener
      overload: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create(System.String)
      commentId: M:Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create(System.String)
      language: CSharp
      name:
        CSharp: Create(String)
        VB: Create(String)
      nameWithType:
        CSharp: DiagnosticsLoggerFactory.Create(String)
        VB: DiagnosticsLoggerFactory.Create(String)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create(System.String)
        VB: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public ILogger Create(string name)
          VB: Public Function Create(name As String) As ILogger
        parameters:
        - id: name
          type: System.String
        return:
          type: Microsoft.Owin.Logging.ILogger
      overload: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create*
      implements:
      - Microsoft.Owin.Logging.ILoggerFactory.Create(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Microsoft.Owin.Logging.LoggerExtensions
    commentId: T:Microsoft.Owin.Logging.LoggerExtensions
    language: CSharp
    name:
      CSharp: LoggerExtensions
      VB: LoggerExtensions
    nameWithType:
      CSharp: LoggerExtensions
      VB: LoggerExtensions
    qualifiedName:
      CSharp: Microsoft.Owin.Logging.LoggerExtensions
      VB: Microsoft.Owin.Logging.LoggerExtensions
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Logging
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public static class LoggerExtensions
        VB: Public Module LoggerExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger,System.Diagnostics.TraceEventType)
      commentId: M:Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger,System.Diagnostics.TraceEventType)
      language: CSharp
      name:
        CSharp: IsEnabled(ILogger, TraceEventType)
        VB: IsEnabled(ILogger, TraceEventType)
      nameWithType:
        CSharp: LoggerExtensions.IsEnabled(ILogger, TraceEventType)
        VB: LoggerExtensions.IsEnabled(ILogger, TraceEventType)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger, System.Diagnostics.TraceEventType)
        VB: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger, System.Diagnostics.TraceEventType)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static bool IsEnabled(this ILogger logger, TraceEventType eventType)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function IsEnabled(logger As ILogger, eventType As TraceEventType) As Boolean
        parameters:
        - id: logger
          type: Microsoft.Owin.Logging.ILogger
        - id: eventType
          type: System.Diagnostics.TraceEventType
        return:
          type: System.Boolean
      overload: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger,System.String)
      commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger,System.String)
      language: CSharp
      name:
        CSharp: WriteVerbose(ILogger, String)
        VB: WriteVerbose(ILogger, String)
      nameWithType:
        CSharp: LoggerExtensions.WriteVerbose(ILogger, String)
        VB: LoggerExtensions.WriteVerbose(ILogger, String)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger, System.String)
        VB: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static void WriteVerbose(this ILogger logger, string data)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub WriteVerbose(logger As ILogger, data As String)
        parameters:
        - id: logger
          type: Microsoft.Owin.Logging.ILogger
        - id: data
          type: System.String
      overload: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger,System.String)
      commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger,System.String)
      language: CSharp
      name:
        CSharp: WriteInformation(ILogger, String)
        VB: WriteInformation(ILogger, String)
      nameWithType:
        CSharp: LoggerExtensions.WriteInformation(ILogger, String)
        VB: LoggerExtensions.WriteInformation(ILogger, String)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger, System.String)
        VB: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static void WriteInformation(this ILogger logger, string message)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub WriteInformation(logger As ILogger, message As String)
        parameters:
        - id: logger
          type: Microsoft.Owin.Logging.ILogger
        - id: message
          type: System.String
      overload: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.String[])
      commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.String[])
      language: CSharp
      name:
        CSharp: WriteWarning(ILogger, String, String[])
        VB: WriteWarning(ILogger, String, String())
      nameWithType:
        CSharp: LoggerExtensions.WriteWarning(ILogger, String, String[])
        VB: LoggerExtensions.WriteWarning(ILogger, String, String())
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger, System.String, System.String[])
        VB: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger, System.String, System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static void WriteWarning(this ILogger logger, string message, params string[] args)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub WriteWarning(logger As ILogger, message As String, ParamArray args As String())
        parameters:
        - id: logger
          type: Microsoft.Owin.Logging.ILogger
        - id: message
          type: System.String
        - id: args
          type: System.String[]
      overload: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
      commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
      language: CSharp
      name:
        CSharp: WriteWarning(ILogger, String, Exception)
        VB: WriteWarning(ILogger, String, Exception)
      nameWithType:
        CSharp: LoggerExtensions.WriteWarning(ILogger, String, Exception)
        VB: LoggerExtensions.WriteWarning(ILogger, String, Exception)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger, System.String, System.Exception)
        VB: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger, System.String, System.Exception)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static void WriteWarning(this ILogger logger, string message, Exception error)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub WriteWarning(logger As ILogger, message As String, error As Exception)
        parameters:
        - id: logger
          type: Microsoft.Owin.Logging.ILogger
        - id: message
          type: System.String
        - id: error
          type: System.Exception
      overload: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String)
      commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String)
      language: CSharp
      name:
        CSharp: WriteError(ILogger, String)
        VB: WriteError(ILogger, String)
      nameWithType:
        CSharp: LoggerExtensions.WriteError(ILogger, String)
        VB: LoggerExtensions.WriteError(ILogger, String)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger, System.String)
        VB: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static void WriteError(this ILogger logger, string message)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub WriteError(logger As ILogger, message As String)
        parameters:
        - id: logger
          type: Microsoft.Owin.Logging.ILogger
        - id: message
          type: System.String
      overload: Microsoft.Owin.Logging.LoggerExtensions.WriteError*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
      commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
      language: CSharp
      name:
        CSharp: WriteError(ILogger, String, Exception)
        VB: WriteError(ILogger, String, Exception)
      nameWithType:
        CSharp: LoggerExtensions.WriteError(ILogger, String, Exception)
        VB: LoggerExtensions.WriteError(ILogger, String, Exception)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger, System.String, System.Exception)
        VB: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger, System.String, System.Exception)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static void WriteError(this ILogger logger, string message, Exception error)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub WriteError(logger As ILogger, message As String, error As Exception)
        parameters:
        - id: logger
          type: Microsoft.Owin.Logging.ILogger
        - id: message
          type: System.String
        - id: error
          type: System.Exception
      overload: Microsoft.Owin.Logging.LoggerExtensions.WriteError*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String)
      commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String)
      language: CSharp
      name:
        CSharp: WriteCritical(ILogger, String)
        VB: WriteCritical(ILogger, String)
      nameWithType:
        CSharp: LoggerExtensions.WriteCritical(ILogger, String)
        VB: LoggerExtensions.WriteCritical(ILogger, String)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger, System.String)
        VB: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger, System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static void WriteCritical(this ILogger logger, string message)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub WriteCritical(logger As ILogger, message As String)
        parameters:
        - id: logger
          type: Microsoft.Owin.Logging.ILogger
        - id: message
          type: System.String
      overload: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
      commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
      language: CSharp
      name:
        CSharp: WriteCritical(ILogger, String, Exception)
        VB: WriteCritical(ILogger, String, Exception)
      nameWithType:
        CSharp: LoggerExtensions.WriteCritical(ILogger, String, Exception)
        VB: LoggerExtensions.WriteCritical(ILogger, String, Exception)
      qualifiedName:
        CSharp: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger, System.String, System.Exception)
        VB: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger, System.String, System.Exception)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Logging
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static void WriteCritical(this ILogger logger, string message, Exception error)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub WriteCritical(logger As ILogger, message As String, error As Exception)
        parameters:
        - id: logger
          type: Microsoft.Owin.Logging.ILogger
        - id: message
          type: System.String
        - id: error
          type: System.Exception
      overload: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: Microsoft.Owin.Mapping
  commentId: N:Microsoft.Owin.Mapping
  language: CSharp
  name:
    CSharp: Microsoft.Owin.Mapping
    VB: Microsoft.Owin.Mapping
  nameWithType:
    CSharp: Microsoft.Owin.Mapping
    VB: Microsoft.Owin.Mapping
  qualifiedName:
    CSharp: Microsoft.Owin.Mapping
    VB: Microsoft.Owin.Mapping
  type: Namespace
  assemblies:
  - Microsoft.Owin
  modifiers: {}
  items:
  - id: Microsoft.Owin.Mapping.MapMiddleware
    commentId: T:Microsoft.Owin.Mapping.MapMiddleware
    language: CSharp
    name:
      CSharp: MapMiddleware
      VB: MapMiddleware
    nameWithType:
      CSharp: MapMiddleware
      VB: MapMiddleware
    qualifiedName:
      CSharp: Microsoft.Owin.Mapping.MapMiddleware
      VB: Microsoft.Owin.Mapping.MapMiddleware
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Mapping
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public class MapMiddleware
        VB: Public Class MapMiddleware
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Mapping.MapMiddleware.#ctor(System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},Microsoft.Owin.Mapping.MapOptions)
      commentId: M:Microsoft.Owin.Mapping.MapMiddleware.#ctor(System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},Microsoft.Owin.Mapping.MapOptions)
      language: CSharp
      name:
        CSharp: MapMiddleware(Func<IDictionary<String, Object>, Task>, MapOptions)
        VB: MapMiddleware(Func(Of IDictionary(Of String, Object), Task), MapOptions)
      nameWithType:
        CSharp: MapMiddleware.MapMiddleware(Func<IDictionary<String, Object>, Task>, MapOptions)
        VB: MapMiddleware.MapMiddleware(Func(Of IDictionary(Of String, Object), Task), MapOptions)
      qualifiedName:
        CSharp: Microsoft.Owin.Mapping.MapMiddleware.MapMiddleware(System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>, Microsoft.Owin.Mapping.MapOptions)
        VB: Microsoft.Owin.Mapping.MapMiddleware.MapMiddleware(System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task), Microsoft.Owin.Mapping.MapOptions)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Mapping
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public MapMiddleware(Func<IDictionary<string, object>, Task> next, MapOptions options)
          VB: Public Sub New(next As Func(Of IDictionary(Of String, Object), Task), options As MapOptions)
        parameters:
        - id: next
          type: System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}
        - id: options
          type: Microsoft.Owin.Mapping.MapOptions
      overload: Microsoft.Owin.Mapping.MapMiddleware.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Mapping.MapMiddleware.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object})
      commentId: M:Microsoft.Owin.Mapping.MapMiddleware.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: Invoke(IDictionary<String, Object>)
        VB: Invoke(IDictionary(Of String, Object))
      nameWithType:
        CSharp: MapMiddleware.Invoke(IDictionary<String, Object>)
        VB: MapMiddleware.Invoke(IDictionary(Of String, Object))
      qualifiedName:
        CSharp: Microsoft.Owin.Mapping.MapMiddleware.Invoke(System.Collections.Generic.IDictionary<System.String, System.Object>)
        VB: Microsoft.Owin.Mapping.MapMiddleware.Invoke(System.Collections.Generic.IDictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Mapping
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Task Invoke(IDictionary<string, object> environment)
          VB: Public Function Invoke(environment As IDictionary(Of String, Object)) As Task
        parameters:
        - id: environment
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
        return:
          type: System.Threading.Tasks.Task
      overload: Microsoft.Owin.Mapping.MapMiddleware.Invoke*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Microsoft.Owin.Mapping.MapOptions
    commentId: T:Microsoft.Owin.Mapping.MapOptions
    language: CSharp
    name:
      CSharp: MapOptions
      VB: MapOptions
    nameWithType:
      CSharp: MapOptions
      VB: MapOptions
    qualifiedName:
      CSharp: Microsoft.Owin.Mapping.MapOptions
      VB: Microsoft.Owin.Mapping.MapOptions
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Mapping
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public class MapOptions
        VB: Public Class MapOptions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Mapping.MapOptions.#ctor
      commentId: M:Microsoft.Owin.Mapping.MapOptions.#ctor
      language: CSharp
      name:
        CSharp: MapOptions()
        VB: MapOptions()
      nameWithType:
        CSharp: MapOptions.MapOptions()
        VB: MapOptions.MapOptions()
      qualifiedName:
        CSharp: Microsoft.Owin.Mapping.MapOptions.MapOptions()
        VB: Microsoft.Owin.Mapping.MapOptions.MapOptions()
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Mapping
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public MapOptions()
          VB: Public Sub New
      overload: Microsoft.Owin.Mapping.MapOptions.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Mapping.MapOptions.PathMatch
      commentId: P:Microsoft.Owin.Mapping.MapOptions.PathMatch
      language: CSharp
      name:
        CSharp: PathMatch
        VB: PathMatch
      nameWithType:
        CSharp: MapOptions.PathMatch
        VB: MapOptions.PathMatch
      qualifiedName:
        CSharp: Microsoft.Owin.Mapping.MapOptions.PathMatch
        VB: Microsoft.Owin.Mapping.MapOptions.PathMatch
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Mapping
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public PathString PathMatch { get; set; }
          VB: Public Property PathMatch As PathString
        parameters: []
        return:
          type: Microsoft.Owin.PathString
      overload: Microsoft.Owin.Mapping.MapOptions.PathMatch*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.Mapping.MapOptions.Branch
      commentId: P:Microsoft.Owin.Mapping.MapOptions.Branch
      language: CSharp
      name:
        CSharp: Branch
        VB: Branch
      nameWithType:
        CSharp: MapOptions.Branch
        VB: MapOptions.Branch
      qualifiedName:
        CSharp: Microsoft.Owin.Mapping.MapOptions.Branch
        VB: Microsoft.Owin.Mapping.MapOptions.Branch
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Mapping
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Func<IDictionary<string, object>, Task> Branch { get; set; }
          VB: Public Property Branch As Func(Of IDictionary(Of String, Object), Task)
        parameters: []
        return:
          type: System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}
      overload: Microsoft.Owin.Mapping.MapOptions.Branch*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Microsoft.Owin.Mapping.MapWhenMiddleware
    commentId: T:Microsoft.Owin.Mapping.MapWhenMiddleware
    language: CSharp
    name:
      CSharp: MapWhenMiddleware
      VB: MapWhenMiddleware
    nameWithType:
      CSharp: MapWhenMiddleware
      VB: MapWhenMiddleware
    qualifiedName:
      CSharp: Microsoft.Owin.Mapping.MapWhenMiddleware
      VB: Microsoft.Owin.Mapping.MapWhenMiddleware
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Mapping
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public class MapWhenMiddleware
        VB: Public Class MapWhenMiddleware
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Mapping.MapWhenMiddleware.#ctor(System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},Microsoft.Owin.Mapping.MapWhenOptions)
      commentId: M:Microsoft.Owin.Mapping.MapWhenMiddleware.#ctor(System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task},Microsoft.Owin.Mapping.MapWhenOptions)
      language: CSharp
      name:
        CSharp: MapWhenMiddleware(Func<IDictionary<String, Object>, Task>, MapWhenOptions)
        VB: MapWhenMiddleware(Func(Of IDictionary(Of String, Object), Task), MapWhenOptions)
      nameWithType:
        CSharp: MapWhenMiddleware.MapWhenMiddleware(Func<IDictionary<String, Object>, Task>, MapWhenOptions)
        VB: MapWhenMiddleware.MapWhenMiddleware(Func(Of IDictionary(Of String, Object), Task), MapWhenOptions)
      qualifiedName:
        CSharp: Microsoft.Owin.Mapping.MapWhenMiddleware.MapWhenMiddleware(System.Func<System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.Tasks.Task>, Microsoft.Owin.Mapping.MapWhenOptions)
        VB: Microsoft.Owin.Mapping.MapWhenMiddleware.MapWhenMiddleware(System.Func(Of System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.Tasks.Task), Microsoft.Owin.Mapping.MapWhenOptions)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Mapping
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public MapWhenMiddleware(Func<IDictionary<string, object>, Task> next, MapWhenOptions options)
          VB: Public Sub New(next As Func(Of IDictionary(Of String, Object), Task), options As MapWhenOptions)
        parameters:
        - id: next
          type: System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}
        - id: options
          type: Microsoft.Owin.Mapping.MapWhenOptions
      overload: Microsoft.Owin.Mapping.MapWhenMiddleware.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Mapping.MapWhenMiddleware.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object})
      commentId: M:Microsoft.Owin.Mapping.MapWhenMiddleware.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: Invoke(IDictionary<String, Object>)
        VB: Invoke(IDictionary(Of String, Object))
      nameWithType:
        CSharp: MapWhenMiddleware.Invoke(IDictionary<String, Object>)
        VB: MapWhenMiddleware.Invoke(IDictionary(Of String, Object))
      qualifiedName:
        CSharp: Microsoft.Owin.Mapping.MapWhenMiddleware.Invoke(System.Collections.Generic.IDictionary<System.String, System.Object>)
        VB: Microsoft.Owin.Mapping.MapWhenMiddleware.Invoke(System.Collections.Generic.IDictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Mapping
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Task Invoke(IDictionary<string, object> environment)
          VB: Public Function Invoke(environment As IDictionary(Of String, Object)) As Task
        parameters:
        - id: environment
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
        return:
          type: System.Threading.Tasks.Task
      overload: Microsoft.Owin.Mapping.MapWhenMiddleware.Invoke*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Microsoft.Owin.Mapping.MapWhenOptions
    commentId: T:Microsoft.Owin.Mapping.MapWhenOptions
    language: CSharp
    name:
      CSharp: MapWhenOptions
      VB: MapWhenOptions
    nameWithType:
      CSharp: MapWhenOptions
      VB: MapWhenOptions
    qualifiedName:
      CSharp: Microsoft.Owin.Mapping.MapWhenOptions
      VB: Microsoft.Owin.Mapping.MapWhenOptions
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Mapping
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public class MapWhenOptions
        VB: Public Class MapWhenOptions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Mapping.MapWhenOptions.#ctor
      commentId: M:Microsoft.Owin.Mapping.MapWhenOptions.#ctor
      language: CSharp
      name:
        CSharp: MapWhenOptions()
        VB: MapWhenOptions()
      nameWithType:
        CSharp: MapWhenOptions.MapWhenOptions()
        VB: MapWhenOptions.MapWhenOptions()
      qualifiedName:
        CSharp: Microsoft.Owin.Mapping.MapWhenOptions.MapWhenOptions()
        VB: Microsoft.Owin.Mapping.MapWhenOptions.MapWhenOptions()
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Mapping
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public MapWhenOptions()
          VB: Public Sub New
      overload: Microsoft.Owin.Mapping.MapWhenOptions.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Mapping.MapWhenOptions.Predicate
      commentId: P:Microsoft.Owin.Mapping.MapWhenOptions.Predicate
      language: CSharp
      name:
        CSharp: Predicate
        VB: Predicate
      nameWithType:
        CSharp: MapWhenOptions.Predicate
        VB: MapWhenOptions.Predicate
      qualifiedName:
        CSharp: Microsoft.Owin.Mapping.MapWhenOptions.Predicate
        VB: Microsoft.Owin.Mapping.MapWhenOptions.Predicate
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Mapping
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Func<IOwinContext, bool> Predicate { get; set; }
          VB: Public Property Predicate As Func(Of IOwinContext, Boolean)
        parameters: []
        return:
          type: System.Func{Microsoft.Owin.IOwinContext,System.Boolean}
      overload: Microsoft.Owin.Mapping.MapWhenOptions.Predicate*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.Mapping.MapWhenOptions.PredicateAsync
      commentId: P:Microsoft.Owin.Mapping.MapWhenOptions.PredicateAsync
      language: CSharp
      name:
        CSharp: PredicateAsync
        VB: PredicateAsync
      nameWithType:
        CSharp: MapWhenOptions.PredicateAsync
        VB: MapWhenOptions.PredicateAsync
      qualifiedName:
        CSharp: Microsoft.Owin.Mapping.MapWhenOptions.PredicateAsync
        VB: Microsoft.Owin.Mapping.MapWhenOptions.PredicateAsync
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Mapping
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Func<IOwinContext, Task<bool>> PredicateAsync { get; set; }
          VB: Public Property PredicateAsync As Func(Of IOwinContext, Task(Of Boolean))
        parameters: []
        return:
          type: System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task{System.Boolean}}
      overload: Microsoft.Owin.Mapping.MapWhenOptions.PredicateAsync*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.Mapping.MapWhenOptions.Branch
      commentId: P:Microsoft.Owin.Mapping.MapWhenOptions.Branch
      language: CSharp
      name:
        CSharp: Branch
        VB: Branch
      nameWithType:
        CSharp: MapWhenOptions.Branch
        VB: MapWhenOptions.Branch
      qualifiedName:
        CSharp: Microsoft.Owin.Mapping.MapWhenOptions.Branch
        VB: Microsoft.Owin.Mapping.MapWhenOptions.Branch
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Mapping
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public Func<IDictionary<string, object>, Task> Branch { get; set; }
          VB: Public Property Branch As Func(Of IDictionary(Of String, Object), Task)
        parameters: []
        return:
          type: System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}
      overload: Microsoft.Owin.Mapping.MapWhenOptions.Branch*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
- id: Microsoft.Owin.Security
  commentId: N:Microsoft.Owin.Security
  language: CSharp
  name:
    CSharp: Microsoft.Owin.Security
    VB: Microsoft.Owin.Security
  nameWithType:
    CSharp: Microsoft.Owin.Security
    VB: Microsoft.Owin.Security
  qualifiedName:
    CSharp: Microsoft.Owin.Security
    VB: Microsoft.Owin.Security
  type: Namespace
  assemblies:
  - Microsoft.Owin
  modifiers: {}
  items:
  - id: Microsoft.Owin.Security.AuthenticateResult
    commentId: T:Microsoft.Owin.Security.AuthenticateResult
    language: CSharp
    name:
      CSharp: AuthenticateResult
      VB: AuthenticateResult
    nameWithType:
      CSharp: AuthenticateResult
      VB: AuthenticateResult
    qualifiedName:
      CSharp: Microsoft.Owin.Security.AuthenticateResult
      VB: Microsoft.Owin.Security.AuthenticateResult
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Security
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public class AuthenticateResult
        VB: Public Class AuthenticateResult
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Security.AuthenticateResult.#ctor(System.Security.Principal.IIdentity,Microsoft.Owin.Security.AuthenticationProperties,Microsoft.Owin.Security.AuthenticationDescription)
      commentId: M:Microsoft.Owin.Security.AuthenticateResult.#ctor(System.Security.Principal.IIdentity,Microsoft.Owin.Security.AuthenticationProperties,Microsoft.Owin.Security.AuthenticationDescription)
      language: CSharp
      name:
        CSharp: AuthenticateResult(IIdentity, AuthenticationProperties, AuthenticationDescription)
        VB: AuthenticateResult(IIdentity, AuthenticationProperties, AuthenticationDescription)
      nameWithType:
        CSharp: AuthenticateResult.AuthenticateResult(IIdentity, AuthenticationProperties, AuthenticationDescription)
        VB: AuthenticateResult.AuthenticateResult(IIdentity, AuthenticationProperties, AuthenticationDescription)
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticateResult.AuthenticateResult(System.Security.Principal.IIdentity, Microsoft.Owin.Security.AuthenticationProperties, Microsoft.Owin.Security.AuthenticationDescription)
        VB: Microsoft.Owin.Security.AuthenticateResult.AuthenticateResult(System.Security.Principal.IIdentity, Microsoft.Owin.Security.AuthenticationProperties, Microsoft.Owin.Security.AuthenticationDescription)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticateResult(IIdentity identity, AuthenticationProperties properties, AuthenticationDescription description)
          VB: Public Sub New(identity As IIdentity, properties As AuthenticationProperties, description As AuthenticationDescription)
        parameters:
        - id: identity
          type: System.Security.Principal.IIdentity
        - id: properties
          type: Microsoft.Owin.Security.AuthenticationProperties
        - id: description
          type: Microsoft.Owin.Security.AuthenticationDescription
      overload: Microsoft.Owin.Security.AuthenticateResult.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticateResult.Identity
      commentId: P:Microsoft.Owin.Security.AuthenticateResult.Identity
      language: CSharp
      name:
        CSharp: Identity
        VB: Identity
      nameWithType:
        CSharp: AuthenticateResult.Identity
        VB: AuthenticateResult.Identity
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticateResult.Identity
        VB: Microsoft.Owin.Security.AuthenticateResult.Identity
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public ClaimsIdentity Identity { get; }
          VB: Public ReadOnly Property Identity As ClaimsIdentity
        parameters: []
        return:
          type: System.Security.Claims.ClaimsIdentity
      overload: Microsoft.Owin.Security.AuthenticateResult.Identity*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.Security.AuthenticateResult.Properties
      commentId: P:Microsoft.Owin.Security.AuthenticateResult.Properties
      language: CSharp
      name:
        CSharp: Properties
        VB: Properties
      nameWithType:
        CSharp: AuthenticateResult.Properties
        VB: AuthenticateResult.Properties
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticateResult.Properties
        VB: Microsoft.Owin.Security.AuthenticateResult.Properties
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticationProperties Properties { get; }
          VB: Public ReadOnly Property Properties As AuthenticationProperties
        parameters: []
        return:
          type: Microsoft.Owin.Security.AuthenticationProperties
      overload: Microsoft.Owin.Security.AuthenticateResult.Properties*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.Security.AuthenticateResult.Description
      commentId: P:Microsoft.Owin.Security.AuthenticateResult.Description
      language: CSharp
      name:
        CSharp: Description
        VB: Description
      nameWithType:
        CSharp: AuthenticateResult.Description
        VB: AuthenticateResult.Description
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticateResult.Description
        VB: Microsoft.Owin.Security.AuthenticateResult.Description
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticationDescription Description { get; }
          VB: Public ReadOnly Property Description As AuthenticationDescription
        parameters: []
        return:
          type: Microsoft.Owin.Security.AuthenticationDescription
      overload: Microsoft.Owin.Security.AuthenticateResult.Description*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.Owin.Security.AuthenticationDescription
    commentId: T:Microsoft.Owin.Security.AuthenticationDescription
    language: CSharp
    name:
      CSharp: AuthenticationDescription
      VB: AuthenticationDescription
    nameWithType:
      CSharp: AuthenticationDescription
      VB: AuthenticationDescription
    qualifiedName:
      CSharp: Microsoft.Owin.Security.AuthenticationDescription
      VB: Microsoft.Owin.Security.AuthenticationDescription
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Security
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public class AuthenticationDescription
        VB: Public Class AuthenticationDescription
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Security.AuthenticationDescription.#ctor
      commentId: M:Microsoft.Owin.Security.AuthenticationDescription.#ctor
      language: CSharp
      name:
        CSharp: AuthenticationDescription()
        VB: AuthenticationDescription()
      nameWithType:
        CSharp: AuthenticationDescription.AuthenticationDescription()
        VB: AuthenticationDescription.AuthenticationDescription()
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationDescription.AuthenticationDescription()
        VB: Microsoft.Owin.Security.AuthenticationDescription.AuthenticationDescription()
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticationDescription()
          VB: Public Sub New
      overload: Microsoft.Owin.Security.AuthenticationDescription.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticationDescription.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
      commentId: M:Microsoft.Owin.Security.AuthenticationDescription.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: AuthenticationDescription(IDictionary<String, Object>)
        VB: AuthenticationDescription(IDictionary(Of String, Object))
      nameWithType:
        CSharp: AuthenticationDescription.AuthenticationDescription(IDictionary<String, Object>)
        VB: AuthenticationDescription.AuthenticationDescription(IDictionary(Of String, Object))
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationDescription.AuthenticationDescription(System.Collections.Generic.IDictionary<System.String, System.Object>)
        VB: Microsoft.Owin.Security.AuthenticationDescription.AuthenticationDescription(System.Collections.Generic.IDictionary(Of System.String, System.Object))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticationDescription(IDictionary<string, object> properties)
          VB: Public Sub New(properties As IDictionary(Of String, Object))
        parameters:
        - id: properties
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.Security.AuthenticationDescription.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticationDescription.Properties
      commentId: P:Microsoft.Owin.Security.AuthenticationDescription.Properties
      language: CSharp
      name:
        CSharp: Properties
        VB: Properties
      nameWithType:
        CSharp: AuthenticationDescription.Properties
        VB: AuthenticationDescription.Properties
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationDescription.Properties
        VB: Microsoft.Owin.Security.AuthenticationDescription.Properties
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IDictionary<string, object> Properties { get; }
          VB: Public ReadOnly Property Properties As IDictionary(Of String, Object)
        parameters: []
        return:
          type: System.Collections.Generic.IDictionary{System.String,System.Object}
      overload: Microsoft.Owin.Security.AuthenticationDescription.Properties*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.Security.AuthenticationDescription.AuthenticationType
      commentId: P:Microsoft.Owin.Security.AuthenticationDescription.AuthenticationType
      language: CSharp
      name:
        CSharp: AuthenticationType
        VB: AuthenticationType
      nameWithType:
        CSharp: AuthenticationDescription.AuthenticationType
        VB: AuthenticationDescription.AuthenticationType
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationDescription.AuthenticationType
        VB: Microsoft.Owin.Security.AuthenticationDescription.AuthenticationType
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string AuthenticationType { get; set; }
          VB: Public Property AuthenticationType As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.Security.AuthenticationDescription.AuthenticationType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticationDescription.Caption
      commentId: P:Microsoft.Owin.Security.AuthenticationDescription.Caption
      language: CSharp
      name:
        CSharp: Caption
        VB: Caption
      nameWithType:
        CSharp: AuthenticationDescription.Caption
        VB: AuthenticationDescription.Caption
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationDescription.Caption
        VB: Microsoft.Owin.Security.AuthenticationDescription.Caption
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string Caption { get; set; }
          VB: Public Property Caption As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.Security.AuthenticationDescription.Caption*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Microsoft.Owin.Security.IAuthenticationManager
    commentId: T:Microsoft.Owin.Security.IAuthenticationManager
    language: CSharp
    name:
      CSharp: IAuthenticationManager
      VB: IAuthenticationManager
    nameWithType:
      CSharp: IAuthenticationManager
      VB: IAuthenticationManager
    qualifiedName:
      CSharp: Microsoft.Owin.Security.IAuthenticationManager
      VB: Microsoft.Owin.Security.IAuthenticationManager
    type: Interface
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Security
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public interface IAuthenticationManager
        VB: Public Interface IAuthenticationManager
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes
      commentId: M:Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes
      language: CSharp
      name:
        CSharp: GetAuthenticationTypes()
        VB: GetAuthenticationTypes()
      nameWithType:
        CSharp: IAuthenticationManager.GetAuthenticationTypes()
        VB: IAuthenticationManager.GetAuthenticationTypes()
      qualifiedName:
        CSharp: Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes()
        VB: Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes()
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IEnumerable<AuthenticationDescription> GetAuthenticationTypes()
          VB: Function GetAuthenticationTypes As IEnumerable(Of AuthenticationDescription)
        return:
          type: System.Collections.Generic.IEnumerable{Microsoft.Owin.Security.AuthenticationDescription}
      overload: Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes(System.Func{Microsoft.Owin.Security.AuthenticationDescription,System.Boolean})
      commentId: M:Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes(System.Func{Microsoft.Owin.Security.AuthenticationDescription,System.Boolean})
      language: CSharp
      name:
        CSharp: GetAuthenticationTypes(Func<AuthenticationDescription, Boolean>)
        VB: GetAuthenticationTypes(Func(Of AuthenticationDescription, Boolean))
      nameWithType:
        CSharp: IAuthenticationManager.GetAuthenticationTypes(Func<AuthenticationDescription, Boolean>)
        VB: IAuthenticationManager.GetAuthenticationTypes(Func(Of AuthenticationDescription, Boolean))
      qualifiedName:
        CSharp: Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes(System.Func<Microsoft.Owin.Security.AuthenticationDescription, System.Boolean>)
        VB: Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes(System.Func(Of Microsoft.Owin.Security.AuthenticationDescription, System.Boolean))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: IEnumerable<AuthenticationDescription> GetAuthenticationTypes(Func<AuthenticationDescription, bool> predicate)
          VB: Function GetAuthenticationTypes(predicate As Func(Of AuthenticationDescription, Boolean)) As IEnumerable(Of AuthenticationDescription)
        parameters:
        - id: predicate
          type: System.Func{Microsoft.Owin.Security.AuthenticationDescription,System.Boolean}
        return:
          type: System.Collections.Generic.IEnumerable{Microsoft.Owin.Security.AuthenticationDescription}
      overload: Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync(System.String)
      commentId: M:Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync(System.String)
      language: CSharp
      name:
        CSharp: AuthenticateAsync(String)
        VB: AuthenticateAsync(String)
      nameWithType:
        CSharp: IAuthenticationManager.AuthenticateAsync(String)
        VB: IAuthenticationManager.AuthenticateAsync(String)
      qualifiedName:
        CSharp: Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync(System.String)
        VB: Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync(System.String)
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: Task<AuthenticateResult> AuthenticateAsync(string authenticationType)
          VB: Function AuthenticateAsync(authenticationType As String) As Task(Of AuthenticateResult)
        parameters:
        - id: authenticationType
          type: System.String
        return:
          type: System.Threading.Tasks.Task{Microsoft.Owin.Security.AuthenticateResult}
      overload: Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync(System.String[])
      commentId: M:Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync(System.String[])
      language: CSharp
      name:
        CSharp: AuthenticateAsync(String[])
        VB: AuthenticateAsync(String())
      nameWithType:
        CSharp: IAuthenticationManager.AuthenticateAsync(String[])
        VB: IAuthenticationManager.AuthenticateAsync(String())
      qualifiedName:
        CSharp: Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync(System.String[])
        VB: Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync(System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: Task<IEnumerable<AuthenticateResult>> AuthenticateAsync(string[] authenticationTypes)
          VB: Function AuthenticateAsync(authenticationTypes As String()) As Task(Of IEnumerable(Of AuthenticateResult))
        parameters:
        - id: authenticationTypes
          type: System.String[]
        return:
          type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Owin.Security.AuthenticateResult}}
      overload: Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.Security.IAuthenticationManager.Challenge(Microsoft.Owin.Security.AuthenticationProperties,System.String[])
      commentId: M:Microsoft.Owin.Security.IAuthenticationManager.Challenge(Microsoft.Owin.Security.AuthenticationProperties,System.String[])
      language: CSharp
      name:
        CSharp: Challenge(AuthenticationProperties, String[])
        VB: Challenge(AuthenticationProperties, String())
      nameWithType:
        CSharp: IAuthenticationManager.Challenge(AuthenticationProperties, String[])
        VB: IAuthenticationManager.Challenge(AuthenticationProperties, String())
      qualifiedName:
        CSharp: Microsoft.Owin.Security.IAuthenticationManager.Challenge(Microsoft.Owin.Security.AuthenticationProperties, System.String[])
        VB: Microsoft.Owin.Security.IAuthenticationManager.Challenge(Microsoft.Owin.Security.AuthenticationProperties, System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void Challenge(AuthenticationProperties properties, params string[] authenticationTypes)
          VB: Sub Challenge(properties As AuthenticationProperties, ParamArray authenticationTypes As String())
        parameters:
        - id: properties
          type: Microsoft.Owin.Security.AuthenticationProperties
        - id: authenticationTypes
          type: System.String[]
      overload: Microsoft.Owin.Security.IAuthenticationManager.Challenge*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.Security.IAuthenticationManager.Challenge(System.String[])
      commentId: M:Microsoft.Owin.Security.IAuthenticationManager.Challenge(System.String[])
      language: CSharp
      name:
        CSharp: Challenge(String[])
        VB: Challenge(String())
      nameWithType:
        CSharp: IAuthenticationManager.Challenge(String[])
        VB: IAuthenticationManager.Challenge(String())
      qualifiedName:
        CSharp: Microsoft.Owin.Security.IAuthenticationManager.Challenge(System.String[])
        VB: Microsoft.Owin.Security.IAuthenticationManager.Challenge(System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void Challenge(params string[] authenticationTypes)
          VB: Sub Challenge(ParamArray authenticationTypes As String())
        parameters:
        - id: authenticationTypes
          type: System.String[]
      overload: Microsoft.Owin.Security.IAuthenticationManager.Challenge*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.Security.IAuthenticationManager.SignIn(Microsoft.Owin.Security.AuthenticationProperties,System.Security.Claims.ClaimsIdentity[])
      commentId: M:Microsoft.Owin.Security.IAuthenticationManager.SignIn(Microsoft.Owin.Security.AuthenticationProperties,System.Security.Claims.ClaimsIdentity[])
      language: CSharp
      name:
        CSharp: SignIn(AuthenticationProperties, ClaimsIdentity[])
        VB: SignIn(AuthenticationProperties, ClaimsIdentity())
      nameWithType:
        CSharp: IAuthenticationManager.SignIn(AuthenticationProperties, ClaimsIdentity[])
        VB: IAuthenticationManager.SignIn(AuthenticationProperties, ClaimsIdentity())
      qualifiedName:
        CSharp: Microsoft.Owin.Security.IAuthenticationManager.SignIn(Microsoft.Owin.Security.AuthenticationProperties, System.Security.Claims.ClaimsIdentity[])
        VB: Microsoft.Owin.Security.IAuthenticationManager.SignIn(Microsoft.Owin.Security.AuthenticationProperties, System.Security.Claims.ClaimsIdentity())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void SignIn(AuthenticationProperties properties, params ClaimsIdentity[] identities)
          VB: Sub SignIn(properties As AuthenticationProperties, ParamArray identities As ClaimsIdentity())
        parameters:
        - id: properties
          type: Microsoft.Owin.Security.AuthenticationProperties
        - id: identities
          type: System.Security.Claims.ClaimsIdentity[]
      overload: Microsoft.Owin.Security.IAuthenticationManager.SignIn*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.Security.IAuthenticationManager.SignIn(System.Security.Claims.ClaimsIdentity[])
      commentId: M:Microsoft.Owin.Security.IAuthenticationManager.SignIn(System.Security.Claims.ClaimsIdentity[])
      language: CSharp
      name:
        CSharp: SignIn(ClaimsIdentity[])
        VB: SignIn(ClaimsIdentity())
      nameWithType:
        CSharp: IAuthenticationManager.SignIn(ClaimsIdentity[])
        VB: IAuthenticationManager.SignIn(ClaimsIdentity())
      qualifiedName:
        CSharp: Microsoft.Owin.Security.IAuthenticationManager.SignIn(System.Security.Claims.ClaimsIdentity[])
        VB: Microsoft.Owin.Security.IAuthenticationManager.SignIn(System.Security.Claims.ClaimsIdentity())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void SignIn(params ClaimsIdentity[] identities)
          VB: Sub SignIn(ParamArray identities As ClaimsIdentity())
        parameters:
        - id: identities
          type: System.Security.Claims.ClaimsIdentity[]
      overload: Microsoft.Owin.Security.IAuthenticationManager.SignIn*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.Security.IAuthenticationManager.SignOut(Microsoft.Owin.Security.AuthenticationProperties,System.String[])
      commentId: M:Microsoft.Owin.Security.IAuthenticationManager.SignOut(Microsoft.Owin.Security.AuthenticationProperties,System.String[])
      language: CSharp
      name:
        CSharp: SignOut(AuthenticationProperties, String[])
        VB: SignOut(AuthenticationProperties, String())
      nameWithType:
        CSharp: IAuthenticationManager.SignOut(AuthenticationProperties, String[])
        VB: IAuthenticationManager.SignOut(AuthenticationProperties, String())
      qualifiedName:
        CSharp: Microsoft.Owin.Security.IAuthenticationManager.SignOut(Microsoft.Owin.Security.AuthenticationProperties, System.String[])
        VB: Microsoft.Owin.Security.IAuthenticationManager.SignOut(Microsoft.Owin.Security.AuthenticationProperties, System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void SignOut(AuthenticationProperties properties, params string[] authenticationTypes)
          VB: Sub SignOut(properties As AuthenticationProperties, ParamArray authenticationTypes As String())
        parameters:
        - id: properties
          type: Microsoft.Owin.Security.AuthenticationProperties
        - id: authenticationTypes
          type: System.String[]
      overload: Microsoft.Owin.Security.IAuthenticationManager.SignOut*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.Security.IAuthenticationManager.SignOut(System.String[])
      commentId: M:Microsoft.Owin.Security.IAuthenticationManager.SignOut(System.String[])
      language: CSharp
      name:
        CSharp: SignOut(String[])
        VB: SignOut(String())
      nameWithType:
        CSharp: IAuthenticationManager.SignOut(String[])
        VB: IAuthenticationManager.SignOut(String())
      qualifiedName:
        CSharp: Microsoft.Owin.Security.IAuthenticationManager.SignOut(System.String[])
        VB: Microsoft.Owin.Security.IAuthenticationManager.SignOut(System.String())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: void SignOut(params string[] authenticationTypes)
          VB: Sub SignOut(ParamArray authenticationTypes As String())
        parameters:
        - id: authenticationTypes
          type: System.String[]
      overload: Microsoft.Owin.Security.IAuthenticationManager.SignOut*
      modifiers:
        CSharp: []
        VB: []
    - id: Microsoft.Owin.Security.IAuthenticationManager.User
      commentId: P:Microsoft.Owin.Security.IAuthenticationManager.User
      language: CSharp
      name:
        CSharp: User
        VB: User
      nameWithType:
        CSharp: IAuthenticationManager.User
        VB: IAuthenticationManager.User
      qualifiedName:
        CSharp: Microsoft.Owin.Security.IAuthenticationManager.User
        VB: Microsoft.Owin.Security.IAuthenticationManager.User
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: ClaimsPrincipal User { get; set; }
          VB: Property User As ClaimsPrincipal
        parameters: []
        return:
          type: System.Security.Claims.ClaimsPrincipal
      overload: Microsoft.Owin.Security.IAuthenticationManager.User*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseChallenge
      commentId: P:Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseChallenge
      language: CSharp
      name:
        CSharp: AuthenticationResponseChallenge
        VB: AuthenticationResponseChallenge
      nameWithType:
        CSharp: IAuthenticationManager.AuthenticationResponseChallenge
        VB: IAuthenticationManager.AuthenticationResponseChallenge
      qualifiedName:
        CSharp: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseChallenge
        VB: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseChallenge
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: AuthenticationResponseChallenge AuthenticationResponseChallenge { get; set; }
          VB: Property AuthenticationResponseChallenge As AuthenticationResponseChallenge
        parameters: []
        return:
          type: Microsoft.Owin.Security.AuthenticationResponseChallenge
      overload: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseChallenge*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseGrant
      commentId: P:Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseGrant
      language: CSharp
      name:
        CSharp: AuthenticationResponseGrant
        VB: AuthenticationResponseGrant
      nameWithType:
        CSharp: IAuthenticationManager.AuthenticationResponseGrant
        VB: IAuthenticationManager.AuthenticationResponseGrant
      qualifiedName:
        CSharp: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseGrant
        VB: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseGrant
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: AuthenticationResponseGrant AuthenticationResponseGrant { get; set; }
          VB: Property AuthenticationResponseGrant As AuthenticationResponseGrant
        parameters: []
        return:
          type: Microsoft.Owin.Security.AuthenticationResponseGrant
      overload: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseGrant*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseRevoke
      commentId: P:Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseRevoke
      language: CSharp
      name:
        CSharp: AuthenticationResponseRevoke
        VB: AuthenticationResponseRevoke
      nameWithType:
        CSharp: IAuthenticationManager.AuthenticationResponseRevoke
        VB: IAuthenticationManager.AuthenticationResponseRevoke
      qualifiedName:
        CSharp: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseRevoke
        VB: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseRevoke
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: AuthenticationResponseRevoke AuthenticationResponseRevoke { get; set; }
          VB: Property AuthenticationResponseRevoke As AuthenticationResponseRevoke
        parameters: []
        return:
          type: Microsoft.Owin.Security.AuthenticationResponseRevoke
      overload: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseRevoke*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
  - id: Microsoft.Owin.Security.AuthenticationProperties
    commentId: T:Microsoft.Owin.Security.AuthenticationProperties
    language: CSharp
    name:
      CSharp: AuthenticationProperties
      VB: AuthenticationProperties
    nameWithType:
      CSharp: AuthenticationProperties
      VB: AuthenticationProperties
    qualifiedName:
      CSharp: Microsoft.Owin.Security.AuthenticationProperties
      VB: Microsoft.Owin.Security.AuthenticationProperties
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Security
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public class AuthenticationProperties
        VB: Public Class AuthenticationProperties
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Security.AuthenticationProperties.#ctor
      commentId: M:Microsoft.Owin.Security.AuthenticationProperties.#ctor
      language: CSharp
      name:
        CSharp: AuthenticationProperties()
        VB: AuthenticationProperties()
      nameWithType:
        CSharp: AuthenticationProperties.AuthenticationProperties()
        VB: AuthenticationProperties.AuthenticationProperties()
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationProperties.AuthenticationProperties()
        VB: Microsoft.Owin.Security.AuthenticationProperties.AuthenticationProperties()
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticationProperties()
          VB: Public Sub New
      overload: Microsoft.Owin.Security.AuthenticationProperties.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticationProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
      commentId: M:Microsoft.Owin.Security.AuthenticationProperties.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
      language: CSharp
      name:
        CSharp: AuthenticationProperties(IDictionary<String, String>)
        VB: AuthenticationProperties(IDictionary(Of String, String))
      nameWithType:
        CSharp: AuthenticationProperties.AuthenticationProperties(IDictionary<String, String>)
        VB: AuthenticationProperties.AuthenticationProperties(IDictionary(Of String, String))
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationProperties.AuthenticationProperties(System.Collections.Generic.IDictionary<System.String, System.String>)
        VB: Microsoft.Owin.Security.AuthenticationProperties.AuthenticationProperties(System.Collections.Generic.IDictionary(Of System.String, System.String))
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticationProperties(IDictionary<string, string> dictionary)
          VB: Public Sub New(dictionary As IDictionary(Of String, String))
        parameters:
        - id: dictionary
          type: System.Collections.Generic.IDictionary{System.String,System.String}
      overload: Microsoft.Owin.Security.AuthenticationProperties.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticationProperties.Dictionary
      commentId: P:Microsoft.Owin.Security.AuthenticationProperties.Dictionary
      language: CSharp
      name:
        CSharp: Dictionary
        VB: Dictionary
      nameWithType:
        CSharp: AuthenticationProperties.Dictionary
        VB: AuthenticationProperties.Dictionary
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationProperties.Dictionary
        VB: Microsoft.Owin.Security.AuthenticationProperties.Dictionary
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public IDictionary<string, string> Dictionary { get; }
          VB: Public ReadOnly Property Dictionary As IDictionary(Of String, String)
        parameters: []
        return:
          type: System.Collections.Generic.IDictionary{System.String,System.String}
      overload: Microsoft.Owin.Security.AuthenticationProperties.Dictionary*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.Security.AuthenticationProperties.IsPersistent
      commentId: P:Microsoft.Owin.Security.AuthenticationProperties.IsPersistent
      language: CSharp
      name:
        CSharp: IsPersistent
        VB: IsPersistent
      nameWithType:
        CSharp: AuthenticationProperties.IsPersistent
        VB: AuthenticationProperties.IsPersistent
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationProperties.IsPersistent
        VB: Microsoft.Owin.Security.AuthenticationProperties.IsPersistent
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool IsPersistent { get; set; }
          VB: Public Property IsPersistent As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Microsoft.Owin.Security.AuthenticationProperties.IsPersistent*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticationProperties.RedirectUri
      commentId: P:Microsoft.Owin.Security.AuthenticationProperties.RedirectUri
      language: CSharp
      name:
        CSharp: RedirectUri
        VB: RedirectUri
      nameWithType:
        CSharp: AuthenticationProperties.RedirectUri
        VB: AuthenticationProperties.RedirectUri
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationProperties.RedirectUri
        VB: Microsoft.Owin.Security.AuthenticationProperties.RedirectUri
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string RedirectUri { get; set; }
          VB: Public Property RedirectUri As String
        parameters: []
        return:
          type: System.String
      overload: Microsoft.Owin.Security.AuthenticationProperties.RedirectUri*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticationProperties.IssuedUtc
      commentId: P:Microsoft.Owin.Security.AuthenticationProperties.IssuedUtc
      language: CSharp
      name:
        CSharp: IssuedUtc
        VB: IssuedUtc
      nameWithType:
        CSharp: AuthenticationProperties.IssuedUtc
        VB: AuthenticationProperties.IssuedUtc
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationProperties.IssuedUtc
        VB: Microsoft.Owin.Security.AuthenticationProperties.IssuedUtc
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public DateTimeOffset? IssuedUtc { get; set; }
          VB: Public Property IssuedUtc As DateTimeOffset?
        parameters: []
        return:
          type: System.Nullable{System.DateTimeOffset}
      overload: Microsoft.Owin.Security.AuthenticationProperties.IssuedUtc*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticationProperties.ExpiresUtc
      commentId: P:Microsoft.Owin.Security.AuthenticationProperties.ExpiresUtc
      language: CSharp
      name:
        CSharp: ExpiresUtc
        VB: ExpiresUtc
      nameWithType:
        CSharp: AuthenticationProperties.ExpiresUtc
        VB: AuthenticationProperties.ExpiresUtc
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationProperties.ExpiresUtc
        VB: Microsoft.Owin.Security.AuthenticationProperties.ExpiresUtc
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public DateTimeOffset? ExpiresUtc { get; set; }
          VB: Public Property ExpiresUtc As DateTimeOffset?
        parameters: []
        return:
          type: System.Nullable{System.DateTimeOffset}
      overload: Microsoft.Owin.Security.AuthenticationProperties.ExpiresUtc*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticationProperties.AllowRefresh
      commentId: P:Microsoft.Owin.Security.AuthenticationProperties.AllowRefresh
      language: CSharp
      name:
        CSharp: AllowRefresh
        VB: AllowRefresh
      nameWithType:
        CSharp: AuthenticationProperties.AllowRefresh
        VB: AuthenticationProperties.AllowRefresh
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationProperties.AllowRefresh
        VB: Microsoft.Owin.Security.AuthenticationProperties.AllowRefresh
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public bool? AllowRefresh { get; set; }
          VB: Public Property AllowRefresh As Boolean?
        parameters: []
        return:
          type: System.Nullable{System.Boolean}
      overload: Microsoft.Owin.Security.AuthenticationProperties.AllowRefresh*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Microsoft.Owin.Security.AuthenticationResponseChallenge
    commentId: T:Microsoft.Owin.Security.AuthenticationResponseChallenge
    language: CSharp
    name:
      CSharp: AuthenticationResponseChallenge
      VB: AuthenticationResponseChallenge
    nameWithType:
      CSharp: AuthenticationResponseChallenge
      VB: AuthenticationResponseChallenge
    qualifiedName:
      CSharp: Microsoft.Owin.Security.AuthenticationResponseChallenge
      VB: Microsoft.Owin.Security.AuthenticationResponseChallenge
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Security
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public class AuthenticationResponseChallenge
        VB: Public Class AuthenticationResponseChallenge
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Security.AuthenticationResponseChallenge.#ctor(System.String[],Microsoft.Owin.Security.AuthenticationProperties)
      commentId: M:Microsoft.Owin.Security.AuthenticationResponseChallenge.#ctor(System.String[],Microsoft.Owin.Security.AuthenticationProperties)
      language: CSharp
      name:
        CSharp: AuthenticationResponseChallenge(String[], AuthenticationProperties)
        VB: AuthenticationResponseChallenge(String(), AuthenticationProperties)
      nameWithType:
        CSharp: AuthenticationResponseChallenge.AuthenticationResponseChallenge(String[], AuthenticationProperties)
        VB: AuthenticationResponseChallenge.AuthenticationResponseChallenge(String(), AuthenticationProperties)
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationResponseChallenge(System.String[], Microsoft.Owin.Security.AuthenticationProperties)
        VB: Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationResponseChallenge(System.String(), Microsoft.Owin.Security.AuthenticationProperties)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticationResponseChallenge(string[] authenticationTypes, AuthenticationProperties properties)
          VB: Public Sub New(authenticationTypes As String(), properties As AuthenticationProperties)
        parameters:
        - id: authenticationTypes
          type: System.String[]
        - id: properties
          type: Microsoft.Owin.Security.AuthenticationProperties
      overload: Microsoft.Owin.Security.AuthenticationResponseChallenge.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationTypes
      commentId: P:Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationTypes
      language: CSharp
      name:
        CSharp: AuthenticationTypes
        VB: AuthenticationTypes
      nameWithType:
        CSharp: AuthenticationResponseChallenge.AuthenticationTypes
        VB: AuthenticationResponseChallenge.AuthenticationTypes
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationTypes
        VB: Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationTypes
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string[] AuthenticationTypes { get; }
          VB: Public ReadOnly Property AuthenticationTypes As String()
        parameters: []
        return:
          type: System.String[]
      overload: Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationTypes*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.Security.AuthenticationResponseChallenge.Properties
      commentId: P:Microsoft.Owin.Security.AuthenticationResponseChallenge.Properties
      language: CSharp
      name:
        CSharp: Properties
        VB: Properties
      nameWithType:
        CSharp: AuthenticationResponseChallenge.Properties
        VB: AuthenticationResponseChallenge.Properties
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationResponseChallenge.Properties
        VB: Microsoft.Owin.Security.AuthenticationResponseChallenge.Properties
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticationProperties Properties { get; }
          VB: Public ReadOnly Property Properties As AuthenticationProperties
        parameters: []
        return:
          type: Microsoft.Owin.Security.AuthenticationProperties
      overload: Microsoft.Owin.Security.AuthenticationResponseChallenge.Properties*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.Owin.Security.AuthenticationResponseGrant
    commentId: T:Microsoft.Owin.Security.AuthenticationResponseGrant
    language: CSharp
    name:
      CSharp: AuthenticationResponseGrant
      VB: AuthenticationResponseGrant
    nameWithType:
      CSharp: AuthenticationResponseGrant
      VB: AuthenticationResponseGrant
    qualifiedName:
      CSharp: Microsoft.Owin.Security.AuthenticationResponseGrant
      VB: Microsoft.Owin.Security.AuthenticationResponseGrant
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Security
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public class AuthenticationResponseGrant
        VB: Public Class AuthenticationResponseGrant
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Security.AuthenticationResponseGrant.#ctor(System.Security.Claims.ClaimsIdentity,Microsoft.Owin.Security.AuthenticationProperties)
      commentId: M:Microsoft.Owin.Security.AuthenticationResponseGrant.#ctor(System.Security.Claims.ClaimsIdentity,Microsoft.Owin.Security.AuthenticationProperties)
      language: CSharp
      name:
        CSharp: AuthenticationResponseGrant(ClaimsIdentity, AuthenticationProperties)
        VB: AuthenticationResponseGrant(ClaimsIdentity, AuthenticationProperties)
      nameWithType:
        CSharp: AuthenticationResponseGrant.AuthenticationResponseGrant(ClaimsIdentity, AuthenticationProperties)
        VB: AuthenticationResponseGrant.AuthenticationResponseGrant(ClaimsIdentity, AuthenticationProperties)
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationResponseGrant.AuthenticationResponseGrant(System.Security.Claims.ClaimsIdentity, Microsoft.Owin.Security.AuthenticationProperties)
        VB: Microsoft.Owin.Security.AuthenticationResponseGrant.AuthenticationResponseGrant(System.Security.Claims.ClaimsIdentity, Microsoft.Owin.Security.AuthenticationProperties)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticationResponseGrant(ClaimsIdentity identity, AuthenticationProperties properties)
          VB: Public Sub New(identity As ClaimsIdentity, properties As AuthenticationProperties)
        parameters:
        - id: identity
          type: System.Security.Claims.ClaimsIdentity
        - id: properties
          type: Microsoft.Owin.Security.AuthenticationProperties
      overload: Microsoft.Owin.Security.AuthenticationResponseGrant.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticationResponseGrant.#ctor(System.Security.Claims.ClaimsPrincipal,Microsoft.Owin.Security.AuthenticationProperties)
      commentId: M:Microsoft.Owin.Security.AuthenticationResponseGrant.#ctor(System.Security.Claims.ClaimsPrincipal,Microsoft.Owin.Security.AuthenticationProperties)
      language: CSharp
      name:
        CSharp: AuthenticationResponseGrant(ClaimsPrincipal, AuthenticationProperties)
        VB: AuthenticationResponseGrant(ClaimsPrincipal, AuthenticationProperties)
      nameWithType:
        CSharp: AuthenticationResponseGrant.AuthenticationResponseGrant(ClaimsPrincipal, AuthenticationProperties)
        VB: AuthenticationResponseGrant.AuthenticationResponseGrant(ClaimsPrincipal, AuthenticationProperties)
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationResponseGrant.AuthenticationResponseGrant(System.Security.Claims.ClaimsPrincipal, Microsoft.Owin.Security.AuthenticationProperties)
        VB: Microsoft.Owin.Security.AuthenticationResponseGrant.AuthenticationResponseGrant(System.Security.Claims.ClaimsPrincipal, Microsoft.Owin.Security.AuthenticationProperties)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticationResponseGrant(ClaimsPrincipal principal, AuthenticationProperties properties)
          VB: Public Sub New(principal As ClaimsPrincipal, properties As AuthenticationProperties)
        parameters:
        - id: principal
          type: System.Security.Claims.ClaimsPrincipal
        - id: properties
          type: Microsoft.Owin.Security.AuthenticationProperties
      overload: Microsoft.Owin.Security.AuthenticationResponseGrant.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticationResponseGrant.Identity
      commentId: P:Microsoft.Owin.Security.AuthenticationResponseGrant.Identity
      language: CSharp
      name:
        CSharp: Identity
        VB: Identity
      nameWithType:
        CSharp: AuthenticationResponseGrant.Identity
        VB: AuthenticationResponseGrant.Identity
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationResponseGrant.Identity
        VB: Microsoft.Owin.Security.AuthenticationResponseGrant.Identity
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public ClaimsIdentity Identity { get; }
          VB: Public ReadOnly Property Identity As ClaimsIdentity
        parameters: []
        return:
          type: System.Security.Claims.ClaimsIdentity
      overload: Microsoft.Owin.Security.AuthenticationResponseGrant.Identity*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.Security.AuthenticationResponseGrant.Principal
      commentId: P:Microsoft.Owin.Security.AuthenticationResponseGrant.Principal
      language: CSharp
      name:
        CSharp: Principal
        VB: Principal
      nameWithType:
        CSharp: AuthenticationResponseGrant.Principal
        VB: AuthenticationResponseGrant.Principal
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationResponseGrant.Principal
        VB: Microsoft.Owin.Security.AuthenticationResponseGrant.Principal
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public ClaimsPrincipal Principal { get; }
          VB: Public ReadOnly Property Principal As ClaimsPrincipal
        parameters: []
        return:
          type: System.Security.Claims.ClaimsPrincipal
      overload: Microsoft.Owin.Security.AuthenticationResponseGrant.Principal*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.Security.AuthenticationResponseGrant.Properties
      commentId: P:Microsoft.Owin.Security.AuthenticationResponseGrant.Properties
      language: CSharp
      name:
        CSharp: Properties
        VB: Properties
      nameWithType:
        CSharp: AuthenticationResponseGrant.Properties
        VB: AuthenticationResponseGrant.Properties
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationResponseGrant.Properties
        VB: Microsoft.Owin.Security.AuthenticationResponseGrant.Properties
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticationProperties Properties { get; }
          VB: Public ReadOnly Property Properties As AuthenticationProperties
        parameters: []
        return:
          type: Microsoft.Owin.Security.AuthenticationProperties
      overload: Microsoft.Owin.Security.AuthenticationResponseGrant.Properties*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Microsoft.Owin.Security.AuthenticationResponseRevoke
    commentId: T:Microsoft.Owin.Security.AuthenticationResponseRevoke
    language: CSharp
    name:
      CSharp: AuthenticationResponseRevoke
      VB: AuthenticationResponseRevoke
    nameWithType:
      CSharp: AuthenticationResponseRevoke
      VB: AuthenticationResponseRevoke
    qualifiedName:
      CSharp: Microsoft.Owin.Security.AuthenticationResponseRevoke
      VB: Microsoft.Owin.Security.AuthenticationResponseRevoke
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Microsoft.Owin.Security
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public class AuthenticationResponseRevoke
        VB: Public Class AuthenticationResponseRevoke
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Microsoft.Owin.Security.AuthenticationResponseRevoke.#ctor(System.String[])
      commentId: M:Microsoft.Owin.Security.AuthenticationResponseRevoke.#ctor(System.String[])
      language: CSharp
      name:
        CSharp: AuthenticationResponseRevoke(String[])
        VB: AuthenticationResponseRevoke(String())
      nameWithType:
        CSharp: AuthenticationResponseRevoke.AuthenticationResponseRevoke(String[])
        VB: AuthenticationResponseRevoke.AuthenticationResponseRevoke(String())
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationResponseRevoke(System.String[])
        VB: Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationResponseRevoke(System.String())
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticationResponseRevoke(string[] authenticationTypes)
          VB: Public Sub New(authenticationTypes As String())
        parameters:
        - id: authenticationTypes
          type: System.String[]
      overload: Microsoft.Owin.Security.AuthenticationResponseRevoke.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticationResponseRevoke.#ctor(System.String[],Microsoft.Owin.Security.AuthenticationProperties)
      commentId: M:Microsoft.Owin.Security.AuthenticationResponseRevoke.#ctor(System.String[],Microsoft.Owin.Security.AuthenticationProperties)
      language: CSharp
      name:
        CSharp: AuthenticationResponseRevoke(String[], AuthenticationProperties)
        VB: AuthenticationResponseRevoke(String(), AuthenticationProperties)
      nameWithType:
        CSharp: AuthenticationResponseRevoke.AuthenticationResponseRevoke(String[], AuthenticationProperties)
        VB: AuthenticationResponseRevoke.AuthenticationResponseRevoke(String(), AuthenticationProperties)
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationResponseRevoke(System.String[], Microsoft.Owin.Security.AuthenticationProperties)
        VB: Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationResponseRevoke(System.String(), Microsoft.Owin.Security.AuthenticationProperties)
      type: Constructor
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticationResponseRevoke(string[] authenticationTypes, AuthenticationProperties properties)
          VB: Public Sub New(authenticationTypes As String(), properties As AuthenticationProperties)
        parameters:
        - id: authenticationTypes
          type: System.String[]
        - id: properties
          type: Microsoft.Owin.Security.AuthenticationProperties
      overload: Microsoft.Owin.Security.AuthenticationResponseRevoke.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationTypes
      commentId: P:Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationTypes
      language: CSharp
      name:
        CSharp: AuthenticationTypes
        VB: AuthenticationTypes
      nameWithType:
        CSharp: AuthenticationResponseRevoke.AuthenticationTypes
        VB: AuthenticationResponseRevoke.AuthenticationTypes
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationTypes
        VB: Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationTypes
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public string[] AuthenticationTypes { get; }
          VB: Public ReadOnly Property AuthenticationTypes As String()
        parameters: []
        return:
          type: System.String[]
      overload: Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationTypes*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Microsoft.Owin.Security.AuthenticationResponseRevoke.Properties
      commentId: P:Microsoft.Owin.Security.AuthenticationResponseRevoke.Properties
      language: CSharp
      name:
        CSharp: Properties
        VB: Properties
      nameWithType:
        CSharp: AuthenticationResponseRevoke.Properties
        VB: AuthenticationResponseRevoke.Properties
      qualifiedName:
        CSharp: Microsoft.Owin.Security.AuthenticationResponseRevoke.Properties
        VB: Microsoft.Owin.Security.AuthenticationResponseRevoke.Properties
      type: Property
      assemblies:
      - Microsoft.Owin
      namespace: Microsoft.Owin.Security
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public AuthenticationProperties Properties { get; }
          VB: Public ReadOnly Property Properties As AuthenticationProperties
        parameters: []
        return:
          type: Microsoft.Owin.Security.AuthenticationProperties
      overload: Microsoft.Owin.Security.AuthenticationResponseRevoke.Properties*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
- id: Owin
  commentId: N:Owin
  language: CSharp
  name:
    CSharp: Owin
    VB: Owin
  nameWithType:
    CSharp: Owin
    VB: Owin
  qualifiedName:
    CSharp: Owin
    VB: Owin
  type: Namespace
  assemblies:
  - Microsoft.Owin
  modifiers: {}
  items:
  - id: Owin.AppBuilderUseExtensions
    commentId: T:Owin.AppBuilderUseExtensions
    language: CSharp
    name:
      CSharp: AppBuilderUseExtensions
      VB: AppBuilderUseExtensions
    nameWithType:
      CSharp: AppBuilderUseExtensions
      VB: AppBuilderUseExtensions
    qualifiedName:
      CSharp: Owin.AppBuilderUseExtensions
      VB: Owin.AppBuilderUseExtensions
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public static class AppBuilderUseExtensions
        VB: Public Module AppBuilderUseExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Owin.AppBuilderUseExtensions.Use``1(Owin.IAppBuilder,System.Object[])
      commentId: M:Owin.AppBuilderUseExtensions.Use``1(Owin.IAppBuilder,System.Object[])
      language: CSharp
      name:
        CSharp: Use<T>(IAppBuilder, Object[])
        VB: Use(Of T)(IAppBuilder, Object())
      nameWithType:
        CSharp: AppBuilderUseExtensions.Use<T>(IAppBuilder, Object[])
        VB: AppBuilderUseExtensions.Use(Of T)(IAppBuilder, Object())
      qualifiedName:
        CSharp: Owin.AppBuilderUseExtensions.Use<T>(Owin.IAppBuilder, System.Object[])
        VB: Owin.AppBuilderUseExtensions.Use(Of T)(Owin.IAppBuilder, System.Object())
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static IAppBuilder Use<T>(this IAppBuilder app, params object[] args)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Use(Of T)(app As IAppBuilder, ParamArray args As Object()) As IAppBuilder
        parameters:
        - id: app
          type: Owin.IAppBuilder
        - id: args
          type: System.Object[]
        typeParameters:
        - id: T
        return:
          type: Owin.IAppBuilder
      overload: Owin.AppBuilderUseExtensions.Use*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Owin.AppBuilderUseExtensions.Run(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task})
      commentId: M:Owin.AppBuilderUseExtensions.Run(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task})
      language: CSharp
      name:
        CSharp: Run(IAppBuilder, Func<IOwinContext, Task>)
        VB: Run(IAppBuilder, Func(Of IOwinContext, Task))
      nameWithType:
        CSharp: AppBuilderUseExtensions.Run(IAppBuilder, Func<IOwinContext, Task>)
        VB: AppBuilderUseExtensions.Run(IAppBuilder, Func(Of IOwinContext, Task))
      qualifiedName:
        CSharp: Owin.AppBuilderUseExtensions.Run(Owin.IAppBuilder, System.Func<Microsoft.Owin.IOwinContext, System.Threading.Tasks.Task>)
        VB: Owin.AppBuilderUseExtensions.Run(Owin.IAppBuilder, System.Func(Of Microsoft.Owin.IOwinContext, System.Threading.Tasks.Task))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static void Run(this IAppBuilder app, Func<IOwinContext, Task> handler)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub Run(app As IAppBuilder, handler As Func(Of IOwinContext, Task))
        parameters:
        - id: app
          type: Owin.IAppBuilder
        - id: handler
          type: System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task}
      overload: Owin.AppBuilderUseExtensions.Run*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Owin.AppBuilderUseExtensions.Use(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task})
      commentId: M:Owin.AppBuilderUseExtensions.Use(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task})
      language: CSharp
      name:
        CSharp: Use(IAppBuilder, Func<IOwinContext, Func<Task>, Task>)
        VB: Use(IAppBuilder, Func(Of IOwinContext, Func(Of Task), Task))
      nameWithType:
        CSharp: AppBuilderUseExtensions.Use(IAppBuilder, Func<IOwinContext, Func<Task>, Task>)
        VB: AppBuilderUseExtensions.Use(IAppBuilder, Func(Of IOwinContext, Func(Of Task), Task))
      qualifiedName:
        CSharp: Owin.AppBuilderUseExtensions.Use(Owin.IAppBuilder, System.Func<Microsoft.Owin.IOwinContext, System.Func<System.Threading.Tasks.Task>, System.Threading.Tasks.Task>)
        VB: Owin.AppBuilderUseExtensions.Use(Owin.IAppBuilder, System.Func(Of Microsoft.Owin.IOwinContext, System.Func(Of System.Threading.Tasks.Task), System.Threading.Tasks.Task))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static IAppBuilder Use(this IAppBuilder app, Func<IOwinContext, Func<Task>, Task> handler)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Use(app As IAppBuilder, handler As Func(Of IOwinContext, Func(Of Task), Task)) As IAppBuilder
        parameters:
        - id: app
          type: Owin.IAppBuilder
        - id: handler
          type: System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task}
        return:
          type: Owin.IAppBuilder
      overload: Owin.AppBuilderUseExtensions.Use*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Owin.PipelineStage
    commentId: T:Owin.PipelineStage
    language: CSharp
    name:
      CSharp: PipelineStage
      VB: PipelineStage
    nameWithType:
      CSharp: PipelineStage
      VB: PipelineStage
    qualifiedName:
      CSharp: Owin.PipelineStage
      VB: Owin.PipelineStage
    type: Enum
    assemblies:
    - Microsoft.Owin
    namespace: Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public enum PipelineStage
        VB: Public Enum PipelineStage
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Owin.PipelineStage.Authenticate
      commentId: F:Owin.PipelineStage.Authenticate
      language: CSharp
      name:
        CSharp: Authenticate
        VB: Authenticate
      nameWithType:
        CSharp: PipelineStage.Authenticate
        VB: PipelineStage.Authenticate
      qualifiedName:
        CSharp: Owin.PipelineStage.Authenticate
        VB: Owin.PipelineStage.Authenticate
      type: Field
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: Authenticate = 0
          VB: Authenticate = 0
        return:
          type: Owin.PipelineStage
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Owin.PipelineStage.PostAuthenticate
      commentId: F:Owin.PipelineStage.PostAuthenticate
      language: CSharp
      name:
        CSharp: PostAuthenticate
        VB: PostAuthenticate
      nameWithType:
        CSharp: PipelineStage.PostAuthenticate
        VB: PipelineStage.PostAuthenticate
      qualifiedName:
        CSharp: Owin.PipelineStage.PostAuthenticate
        VB: Owin.PipelineStage.PostAuthenticate
      type: Field
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: PostAuthenticate = 1
          VB: PostAuthenticate = 1
        return:
          type: Owin.PipelineStage
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Owin.PipelineStage.Authorize
      commentId: F:Owin.PipelineStage.Authorize
      language: CSharp
      name:
        CSharp: Authorize
        VB: Authorize
      nameWithType:
        CSharp: PipelineStage.Authorize
        VB: PipelineStage.Authorize
      qualifiedName:
        CSharp: Owin.PipelineStage.Authorize
        VB: Owin.PipelineStage.Authorize
      type: Field
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: Authorize = 2
          VB: Authorize = 2
        return:
          type: Owin.PipelineStage
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Owin.PipelineStage.PostAuthorize
      commentId: F:Owin.PipelineStage.PostAuthorize
      language: CSharp
      name:
        CSharp: PostAuthorize
        VB: PostAuthorize
      nameWithType:
        CSharp: PipelineStage.PostAuthorize
        VB: PipelineStage.PostAuthorize
      qualifiedName:
        CSharp: Owin.PipelineStage.PostAuthorize
        VB: Owin.PipelineStage.PostAuthorize
      type: Field
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: PostAuthorize = 3
          VB: PostAuthorize = 3
        return:
          type: Owin.PipelineStage
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Owin.PipelineStage.ResolveCache
      commentId: F:Owin.PipelineStage.ResolveCache
      language: CSharp
      name:
        CSharp: ResolveCache
        VB: ResolveCache
      nameWithType:
        CSharp: PipelineStage.ResolveCache
        VB: PipelineStage.ResolveCache
      qualifiedName:
        CSharp: Owin.PipelineStage.ResolveCache
        VB: Owin.PipelineStage.ResolveCache
      type: Field
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: ResolveCache = 4
          VB: ResolveCache = 4
        return:
          type: Owin.PipelineStage
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Owin.PipelineStage.PostResolveCache
      commentId: F:Owin.PipelineStage.PostResolveCache
      language: CSharp
      name:
        CSharp: PostResolveCache
        VB: PostResolveCache
      nameWithType:
        CSharp: PipelineStage.PostResolveCache
        VB: PipelineStage.PostResolveCache
      qualifiedName:
        CSharp: Owin.PipelineStage.PostResolveCache
        VB: Owin.PipelineStage.PostResolveCache
      type: Field
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: PostResolveCache = 5
          VB: PostResolveCache = 5
        return:
          type: Owin.PipelineStage
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Owin.PipelineStage.MapHandler
      commentId: F:Owin.PipelineStage.MapHandler
      language: CSharp
      name:
        CSharp: MapHandler
        VB: MapHandler
      nameWithType:
        CSharp: PipelineStage.MapHandler
        VB: PipelineStage.MapHandler
      qualifiedName:
        CSharp: Owin.PipelineStage.MapHandler
        VB: Owin.PipelineStage.MapHandler
      type: Field
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: MapHandler = 6
          VB: MapHandler = 6
        return:
          type: Owin.PipelineStage
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Owin.PipelineStage.PostMapHandler
      commentId: F:Owin.PipelineStage.PostMapHandler
      language: CSharp
      name:
        CSharp: PostMapHandler
        VB: PostMapHandler
      nameWithType:
        CSharp: PipelineStage.PostMapHandler
        VB: PipelineStage.PostMapHandler
      qualifiedName:
        CSharp: Owin.PipelineStage.PostMapHandler
        VB: Owin.PipelineStage.PostMapHandler
      type: Field
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: PostMapHandler = 7
          VB: PostMapHandler = 7
        return:
          type: Owin.PipelineStage
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Owin.PipelineStage.AcquireState
      commentId: F:Owin.PipelineStage.AcquireState
      language: CSharp
      name:
        CSharp: AcquireState
        VB: AcquireState
      nameWithType:
        CSharp: PipelineStage.AcquireState
        VB: PipelineStage.AcquireState
      qualifiedName:
        CSharp: Owin.PipelineStage.AcquireState
        VB: Owin.PipelineStage.AcquireState
      type: Field
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: AcquireState = 8
          VB: AcquireState = 8
        return:
          type: Owin.PipelineStage
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Owin.PipelineStage.PostAcquireState
      commentId: F:Owin.PipelineStage.PostAcquireState
      language: CSharp
      name:
        CSharp: PostAcquireState
        VB: PostAcquireState
      nameWithType:
        CSharp: PipelineStage.PostAcquireState
        VB: PipelineStage.PostAcquireState
      qualifiedName:
        CSharp: Owin.PipelineStage.PostAcquireState
        VB: Owin.PipelineStage.PostAcquireState
      type: Field
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: PostAcquireState = 9
          VB: PostAcquireState = 9
        return:
          type: Owin.PipelineStage
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Owin.PipelineStage.PreHandlerExecute
      commentId: F:Owin.PipelineStage.PreHandlerExecute
      language: CSharp
      name:
        CSharp: PreHandlerExecute
        VB: PreHandlerExecute
      nameWithType:
        CSharp: PipelineStage.PreHandlerExecute
        VB: PipelineStage.PreHandlerExecute
      qualifiedName:
        CSharp: Owin.PipelineStage.PreHandlerExecute
        VB: Owin.PipelineStage.PreHandlerExecute
      type: Field
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: PreHandlerExecute = 10
          VB: PreHandlerExecute = 10
        return:
          type: Owin.PipelineStage
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Owin.MapExtensions
    commentId: T:Owin.MapExtensions
    language: CSharp
    name:
      CSharp: MapExtensions
      VB: MapExtensions
    nameWithType:
      CSharp: MapExtensions
      VB: MapExtensions
    qualifiedName:
      CSharp: Owin.MapExtensions
      VB: Owin.MapExtensions
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public static class MapExtensions
        VB: Public Module MapExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Owin.MapExtensions.Map(Owin.IAppBuilder,System.String,System.Action{Owin.IAppBuilder})
      commentId: M:Owin.MapExtensions.Map(Owin.IAppBuilder,System.String,System.Action{Owin.IAppBuilder})
      language: CSharp
      name:
        CSharp: Map(IAppBuilder, String, Action<IAppBuilder>)
        VB: Map(IAppBuilder, String, Action(Of IAppBuilder))
      nameWithType:
        CSharp: MapExtensions.Map(IAppBuilder, String, Action<IAppBuilder>)
        VB: MapExtensions.Map(IAppBuilder, String, Action(Of IAppBuilder))
      qualifiedName:
        CSharp: Owin.MapExtensions.Map(Owin.IAppBuilder, System.String, System.Action<Owin.IAppBuilder>)
        VB: Owin.MapExtensions.Map(Owin.IAppBuilder, System.String, System.Action(Of Owin.IAppBuilder))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static IAppBuilder Map(this IAppBuilder app, string pathMatch, Action<IAppBuilder> configuration)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Map(app As IAppBuilder, pathMatch As String, configuration As Action(Of IAppBuilder)) As IAppBuilder
        parameters:
        - id: app
          type: Owin.IAppBuilder
        - id: pathMatch
          type: System.String
        - id: configuration
          type: System.Action{Owin.IAppBuilder}
        return:
          type: Owin.IAppBuilder
      overload: Owin.MapExtensions.Map*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Owin.MapExtensions.Map(Owin.IAppBuilder,Microsoft.Owin.PathString,System.Action{Owin.IAppBuilder})
      commentId: M:Owin.MapExtensions.Map(Owin.IAppBuilder,Microsoft.Owin.PathString,System.Action{Owin.IAppBuilder})
      language: CSharp
      name:
        CSharp: Map(IAppBuilder, PathString, Action<IAppBuilder>)
        VB: Map(IAppBuilder, PathString, Action(Of IAppBuilder))
      nameWithType:
        CSharp: MapExtensions.Map(IAppBuilder, PathString, Action<IAppBuilder>)
        VB: MapExtensions.Map(IAppBuilder, PathString, Action(Of IAppBuilder))
      qualifiedName:
        CSharp: Owin.MapExtensions.Map(Owin.IAppBuilder, Microsoft.Owin.PathString, System.Action<Owin.IAppBuilder>)
        VB: Owin.MapExtensions.Map(Owin.IAppBuilder, Microsoft.Owin.PathString, System.Action(Of Owin.IAppBuilder))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static IAppBuilder Map(this IAppBuilder app, PathString pathMatch, Action<IAppBuilder> configuration)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Map(app As IAppBuilder, pathMatch As PathString, configuration As Action(Of IAppBuilder)) As IAppBuilder
        parameters:
        - id: app
          type: Owin.IAppBuilder
        - id: pathMatch
          type: Microsoft.Owin.PathString
        - id: configuration
          type: System.Action{Owin.IAppBuilder}
        return:
          type: Owin.IAppBuilder
      overload: Owin.MapExtensions.Map*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Owin.MapWhenExtensions
    commentId: T:Owin.MapWhenExtensions
    language: CSharp
    name:
      CSharp: MapWhenExtensions
      VB: MapWhenExtensions
    nameWithType:
      CSharp: MapWhenExtensions
      VB: MapWhenExtensions
    qualifiedName:
      CSharp: Owin.MapWhenExtensions
      VB: Owin.MapWhenExtensions
    type: Class
    assemblies:
    - Microsoft.Owin
    namespace: Owin
    source:
      path: Microsoft.Owin
      isExternal: true
    syntax:
      content:
        CSharp: public static class MapWhenExtensions
        VB: Public Module MapWhenExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Owin.MapWhenExtensions.MapWhen(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Boolean},System.Action{Owin.IAppBuilder})
      commentId: M:Owin.MapWhenExtensions.MapWhen(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Boolean},System.Action{Owin.IAppBuilder})
      language: CSharp
      name:
        CSharp: MapWhen(IAppBuilder, Func<IOwinContext, Boolean>, Action<IAppBuilder>)
        VB: MapWhen(IAppBuilder, Func(Of IOwinContext, Boolean), Action(Of IAppBuilder))
      nameWithType:
        CSharp: MapWhenExtensions.MapWhen(IAppBuilder, Func<IOwinContext, Boolean>, Action<IAppBuilder>)
        VB: MapWhenExtensions.MapWhen(IAppBuilder, Func(Of IOwinContext, Boolean), Action(Of IAppBuilder))
      qualifiedName:
        CSharp: Owin.MapWhenExtensions.MapWhen(Owin.IAppBuilder, System.Func<Microsoft.Owin.IOwinContext, System.Boolean>, System.Action<Owin.IAppBuilder>)
        VB: Owin.MapWhenExtensions.MapWhen(Owin.IAppBuilder, System.Func(Of Microsoft.Owin.IOwinContext, System.Boolean), System.Action(Of Owin.IAppBuilder))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static IAppBuilder MapWhen(this IAppBuilder app, Func<IOwinContext, bool> predicate, Action<IAppBuilder> configuration)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function MapWhen(app As IAppBuilder, predicate As Func(Of IOwinContext, Boolean), configuration As Action(Of IAppBuilder)) As IAppBuilder
        parameters:
        - id: app
          type: Owin.IAppBuilder
        - id: predicate
          type: System.Func{Microsoft.Owin.IOwinContext,System.Boolean}
        - id: configuration
          type: System.Action{Owin.IAppBuilder}
        return:
          type: Owin.IAppBuilder
      overload: Owin.MapWhenExtensions.MapWhen*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Owin.MapWhenExtensions.MapWhenAsync(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task{System.Boolean}},System.Action{Owin.IAppBuilder})
      commentId: M:Owin.MapWhenExtensions.MapWhenAsync(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task{System.Boolean}},System.Action{Owin.IAppBuilder})
      language: CSharp
      name:
        CSharp: MapWhenAsync(IAppBuilder, Func<IOwinContext, Task<Boolean>>, Action<IAppBuilder>)
        VB: MapWhenAsync(IAppBuilder, Func(Of IOwinContext, Task(Of Boolean)), Action(Of IAppBuilder))
      nameWithType:
        CSharp: MapWhenExtensions.MapWhenAsync(IAppBuilder, Func<IOwinContext, Task<Boolean>>, Action<IAppBuilder>)
        VB: MapWhenExtensions.MapWhenAsync(IAppBuilder, Func(Of IOwinContext, Task(Of Boolean)), Action(Of IAppBuilder))
      qualifiedName:
        CSharp: Owin.MapWhenExtensions.MapWhenAsync(Owin.IAppBuilder, System.Func<Microsoft.Owin.IOwinContext, System.Threading.Tasks.Task<System.Boolean>>, System.Action<Owin.IAppBuilder>)
        VB: Owin.MapWhenExtensions.MapWhenAsync(Owin.IAppBuilder, System.Func(Of Microsoft.Owin.IOwinContext, System.Threading.Tasks.Task(Of System.Boolean)), System.Action(Of Owin.IAppBuilder))
      type: Method
      assemblies:
      - Microsoft.Owin
      namespace: Owin
      source:
        path: Microsoft.Owin
        isExternal: true
      syntax:
        content:
          CSharp: public static IAppBuilder MapWhenAsync(this IAppBuilder app, Func<IOwinContext, Task<bool>> predicate, Action<IAppBuilder> configuration)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function MapWhenAsync(app As IAppBuilder, predicate As Func(Of IOwinContext, Task(Of Boolean)), configuration As Action(Of IAppBuilder)) As IAppBuilder
        parameters:
        - id: app
          type: Owin.IAppBuilder
        - id: predicate
          type: System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task{System.Boolean}}
        - id: configuration
          type: System.Action{Owin.IAppBuilder}
        return:
          type: Owin.IAppBuilder
      overload: Owin.MapWhenExtensions.MapWhenAsync*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  System.Collections.Generic.IEnumerable`1.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable<T>.GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable(Of T).GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  System.Collections.Generic.IEnumerable`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerable`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
  System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable<KeyValuePair<String, String[]>>.GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String[]>>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable(Of KeyValuePair(Of String, String())).GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String())).GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
    parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
    commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.GetEnumerator
  System.Collections:
    name:
      CSharp:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
      VB:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
    isDefinition: true
    commentId: N:System.Collections
  System.Collections.IEnumerable:
    name:
      CSharp:
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
      VB:
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerable
  System.Collections.IEnumerable.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.IEnumerable.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable.GetEnumerator
        qualifiedName: System.Collections.IEnumerable.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.IEnumerable.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable.GetEnumerator
        qualifiedName: System.Collections.IEnumerable.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Collections.IEnumerable
    commentId: M:System.Collections.IEnumerable.GetEnumerator
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Microsoft.Owin.IReadableStringCollection.Get*:
    name:
      CSharp:
      - id: Microsoft.Owin.IReadableStringCollection.Get*
        name: Get
        nameWithType: IReadableStringCollection.Get
        qualifiedName: Microsoft.Owin.IReadableStringCollection.Get
        isExternal: true
      VB:
      - id: Microsoft.Owin.IReadableStringCollection.Get*
        name: Get
        nameWithType: IReadableStringCollection.Get
        qualifiedName: Microsoft.Owin.IReadableStringCollection.Get
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IReadableStringCollection.Get
  System.Collections.Generic.IList`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IList`1
  System.Collections.Generic.IList{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IList`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IList{System.String}
  Microsoft.Owin.IReadableStringCollection.GetValues*:
    name:
      CSharp:
      - id: Microsoft.Owin.IReadableStringCollection.GetValues*
        name: GetValues
        nameWithType: IReadableStringCollection.GetValues
        qualifiedName: Microsoft.Owin.IReadableStringCollection.GetValues
        isExternal: true
      VB:
      - id: Microsoft.Owin.IReadableStringCollection.GetValues*
        name: GetValues
        nameWithType: IReadableStringCollection.GetValues
        qualifiedName: Microsoft.Owin.IReadableStringCollection.GetValues
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IReadableStringCollection.GetValues
  Microsoft.Owin.IReadableStringCollection.Item*:
    name:
      CSharp:
      - id: Microsoft.Owin.IReadableStringCollection.Item*
        name: Item
        nameWithType: IReadableStringCollection.Item
        qualifiedName: Microsoft.Owin.IReadableStringCollection.Item
        isExternal: true
      VB:
      - id: Microsoft.Owin.IReadableStringCollection.Item*
        name: Item
        nameWithType: IReadableStringCollection.Item
        qualifiedName: Microsoft.Owin.IReadableStringCollection.Item
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IReadableStringCollection.Item
  Microsoft.Owin.IReadableStringCollection:
    name:
      CSharp:
      - id: Microsoft.Owin.IReadableStringCollection
        name: IReadableStringCollection
        nameWithType: IReadableStringCollection
        qualifiedName: Microsoft.Owin.IReadableStringCollection
        isExternal: true
      VB:
      - id: Microsoft.Owin.IReadableStringCollection
        name: IReadableStringCollection
        nameWithType: IReadableStringCollection
        qualifiedName: Microsoft.Owin.IReadableStringCollection
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.IReadableStringCollection
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  Microsoft.Owin:
    name:
      CSharp:
      - name: Microsoft.Owin
        nameWithType: Microsoft.Owin
        qualifiedName: Microsoft.Owin
      VB:
      - name: Microsoft.Owin
        nameWithType: Microsoft.Owin
        qualifiedName: Microsoft.Owin
    isDefinition: true
    commentId: N:Microsoft.Owin
  System.Collections.Generic.IDictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IDictionary`2
  System.Collections.Generic.IDictionary{System.String,System.String[]}:
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IDictionary{System.String,System.String[]}
  Microsoft.Owin.ReadableStringCollection.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.ReadableStringCollection.#ctor*
        name: ReadableStringCollection
        nameWithType: ReadableStringCollection.ReadableStringCollection
        qualifiedName: Microsoft.Owin.ReadableStringCollection.ReadableStringCollection
        isExternal: true
      VB:
      - id: Microsoft.Owin.ReadableStringCollection.#ctor*
        name: ReadableStringCollection
        nameWithType: ReadableStringCollection.ReadableStringCollection
        qualifiedName: Microsoft.Owin.ReadableStringCollection.ReadableStringCollection
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.ReadableStringCollection.#ctor
  Microsoft.Owin.ReadableStringCollection.Get*:
    name:
      CSharp:
      - id: Microsoft.Owin.ReadableStringCollection.Get*
        name: Get
        nameWithType: ReadableStringCollection.Get
        qualifiedName: Microsoft.Owin.ReadableStringCollection.Get
        isExternal: true
      VB:
      - id: Microsoft.Owin.ReadableStringCollection.Get*
        name: Get
        nameWithType: ReadableStringCollection.Get
        qualifiedName: Microsoft.Owin.ReadableStringCollection.Get
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.ReadableStringCollection.Get
  Microsoft.Owin.IReadableStringCollection.Get(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.IReadableStringCollection.Get(System.String)
        name: Get
        nameWithType: IReadableStringCollection.Get
        qualifiedName: Microsoft.Owin.IReadableStringCollection.Get
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IReadableStringCollection.Get(System.String)
        name: Get
        nameWithType: IReadableStringCollection.Get
        qualifiedName: Microsoft.Owin.IReadableStringCollection.Get
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IReadableStringCollection
    commentId: M:Microsoft.Owin.IReadableStringCollection.Get(System.String)
  Microsoft.Owin.ReadableStringCollection.GetValues*:
    name:
      CSharp:
      - id: Microsoft.Owin.ReadableStringCollection.GetValues*
        name: GetValues
        nameWithType: ReadableStringCollection.GetValues
        qualifiedName: Microsoft.Owin.ReadableStringCollection.GetValues
        isExternal: true
      VB:
      - id: Microsoft.Owin.ReadableStringCollection.GetValues*
        name: GetValues
        nameWithType: ReadableStringCollection.GetValues
        qualifiedName: Microsoft.Owin.ReadableStringCollection.GetValues
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.ReadableStringCollection.GetValues
  Microsoft.Owin.IReadableStringCollection.GetValues(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.IReadableStringCollection.GetValues(System.String)
        name: GetValues
        nameWithType: IReadableStringCollection.GetValues
        qualifiedName: Microsoft.Owin.IReadableStringCollection.GetValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IReadableStringCollection.GetValues(System.String)
        name: GetValues
        nameWithType: IReadableStringCollection.GetValues
        qualifiedName: Microsoft.Owin.IReadableStringCollection.GetValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IReadableStringCollection
    commentId: M:Microsoft.Owin.IReadableStringCollection.GetValues(System.String)
  System.Collections.Generic.IEnumerator`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerator`1
  System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerator`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
  Microsoft.Owin.ReadableStringCollection.GetEnumerator*:
    name:
      CSharp:
      - id: Microsoft.Owin.ReadableStringCollection.GetEnumerator*
        name: GetEnumerator
        nameWithType: ReadableStringCollection.GetEnumerator
        qualifiedName: Microsoft.Owin.ReadableStringCollection.GetEnumerator
        isExternal: true
      VB:
      - id: Microsoft.Owin.ReadableStringCollection.GetEnumerator*
        name: GetEnumerator
        nameWithType: ReadableStringCollection.GetEnumerator
        qualifiedName: Microsoft.Owin.ReadableStringCollection.GetEnumerator
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.ReadableStringCollection.GetEnumerator
  System.Collections.IEnumerator:
    name:
      CSharp:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      VB:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerator
  Microsoft.Owin.ReadableStringCollection.System#Collections#IEnumerable#GetEnumerator*:
    name:
      CSharp:
      - id: Microsoft.Owin.ReadableStringCollection.System#Collections#IEnumerable#GetEnumerator*
        name: IEnumerable.GetEnumerator
        nameWithType: ReadableStringCollection.IEnumerable.GetEnumerator
        qualifiedName: Microsoft.Owin.ReadableStringCollection.System.Collections.IEnumerable.GetEnumerator
        isExternal: true
      VB:
      - id: Microsoft.Owin.ReadableStringCollection.System#Collections#IEnumerable#GetEnumerator*
        name: System.Collections.IEnumerable.GetEnumerator
        nameWithType: ReadableStringCollection.System.Collections.IEnumerable.GetEnumerator
        qualifiedName: Microsoft.Owin.ReadableStringCollection.System.Collections.IEnumerable.GetEnumerator
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.ReadableStringCollection.System#Collections#IEnumerable#GetEnumerator
  Microsoft.Owin.ReadableStringCollection.Item*:
    name:
      CSharp:
      - id: Microsoft.Owin.ReadableStringCollection.Item*
        name: Item
        nameWithType: ReadableStringCollection.Item
        qualifiedName: Microsoft.Owin.ReadableStringCollection.Item
        isExternal: true
      VB:
      - id: Microsoft.Owin.ReadableStringCollection.Item*
        name: Item
        nameWithType: ReadableStringCollection.Item
        qualifiedName: Microsoft.Owin.ReadableStringCollection.Item
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.ReadableStringCollection.Item
  Microsoft.Owin.IReadableStringCollection.Item(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.IReadableStringCollection.Item(System.String)
        name: Item
        nameWithType: IReadableStringCollection.Item
        qualifiedName: Microsoft.Owin.IReadableStringCollection.Item
        isExternal: true
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: Microsoft.Owin.IReadableStringCollection.Item(System.String)
        name: Item
        nameWithType: IReadableStringCollection.Item
        qualifiedName: Microsoft.Owin.IReadableStringCollection.Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IReadableStringCollection
    commentId: P:Microsoft.Owin.IReadableStringCollection.Item(System.String)
  Microsoft.Owin.ReadableStringCollection:
    name:
      CSharp:
      - id: Microsoft.Owin.ReadableStringCollection
        name: ReadableStringCollection
        nameWithType: ReadableStringCollection
        qualifiedName: Microsoft.Owin.ReadableStringCollection
        isExternal: true
      VB:
      - id: Microsoft.Owin.ReadableStringCollection
        name: ReadableStringCollection
        nameWithType: ReadableStringCollection
        qualifiedName: Microsoft.Owin.ReadableStringCollection
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.ReadableStringCollection
  Microsoft.Owin.IFormCollection:
    name:
      CSharp:
      - id: Microsoft.Owin.IFormCollection
        name: IFormCollection
        nameWithType: IFormCollection
        qualifiedName: Microsoft.Owin.IFormCollection
        isExternal: true
      VB:
      - id: Microsoft.Owin.IFormCollection
        name: IFormCollection
        nameWithType: IFormCollection
        qualifiedName: Microsoft.Owin.IFormCollection
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.IFormCollection
  Microsoft.Owin.ReadableStringCollection.Get(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.ReadableStringCollection.Get(System.String)
        name: Get
        nameWithType: ReadableStringCollection.Get
        qualifiedName: Microsoft.Owin.ReadableStringCollection.Get
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.ReadableStringCollection.Get(System.String)
        name: Get
        nameWithType: ReadableStringCollection.Get
        qualifiedName: Microsoft.Owin.ReadableStringCollection.Get
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.ReadableStringCollection
    commentId: M:Microsoft.Owin.ReadableStringCollection.Get(System.String)
  Microsoft.Owin.ReadableStringCollection.GetValues(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.ReadableStringCollection.GetValues(System.String)
        name: GetValues
        nameWithType: ReadableStringCollection.GetValues
        qualifiedName: Microsoft.Owin.ReadableStringCollection.GetValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.ReadableStringCollection.GetValues(System.String)
        name: GetValues
        nameWithType: ReadableStringCollection.GetValues
        qualifiedName: Microsoft.Owin.ReadableStringCollection.GetValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.ReadableStringCollection
    commentId: M:Microsoft.Owin.ReadableStringCollection.GetValues(System.String)
  Microsoft.Owin.ReadableStringCollection.GetEnumerator:
    name:
      CSharp:
      - id: Microsoft.Owin.ReadableStringCollection.GetEnumerator
        name: GetEnumerator
        nameWithType: ReadableStringCollection.GetEnumerator
        qualifiedName: Microsoft.Owin.ReadableStringCollection.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.ReadableStringCollection.GetEnumerator
        name: GetEnumerator
        nameWithType: ReadableStringCollection.GetEnumerator
        qualifiedName: Microsoft.Owin.ReadableStringCollection.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.ReadableStringCollection
    commentId: M:Microsoft.Owin.ReadableStringCollection.GetEnumerator
  Microsoft.Owin.ReadableStringCollection.System#Collections#IEnumerable#GetEnumerator:
    name:
      CSharp:
      - id: Microsoft.Owin.ReadableStringCollection.System#Collections#IEnumerable#GetEnumerator
        name: IEnumerable.GetEnumerator
        nameWithType: ReadableStringCollection.IEnumerable.GetEnumerator
        qualifiedName: Microsoft.Owin.ReadableStringCollection.System.Collections.IEnumerable.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.ReadableStringCollection.System#Collections#IEnumerable#GetEnumerator
        name: System.Collections.IEnumerable.GetEnumerator
        nameWithType: ReadableStringCollection.System.Collections.IEnumerable.GetEnumerator
        qualifiedName: Microsoft.Owin.ReadableStringCollection.System.Collections.IEnumerable.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.ReadableStringCollection
    commentId: M:Microsoft.Owin.ReadableStringCollection.System#Collections#IEnumerable#GetEnumerator
  Microsoft.Owin.ReadableStringCollection.Item(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.ReadableStringCollection.Item(System.String)
        name: Item
        nameWithType: ReadableStringCollection.Item
        qualifiedName: Microsoft.Owin.ReadableStringCollection.Item
        isExternal: true
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: Microsoft.Owin.ReadableStringCollection.Item(System.String)
        name: Item
        nameWithType: ReadableStringCollection.Item
        qualifiedName: Microsoft.Owin.ReadableStringCollection.Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.ReadableStringCollection
    commentId: P:Microsoft.Owin.ReadableStringCollection.Item(System.String)
  Microsoft.Owin.FormCollection.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.FormCollection.#ctor*
        name: FormCollection
        nameWithType: FormCollection.FormCollection
        qualifiedName: Microsoft.Owin.FormCollection.FormCollection
        isExternal: true
      VB:
      - id: Microsoft.Owin.FormCollection.#ctor*
        name: FormCollection
        nameWithType: FormCollection.FormCollection
        qualifiedName: Microsoft.Owin.FormCollection.FormCollection
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.FormCollection.#ctor
  Microsoft.Owin.FormCollection:
    name:
      CSharp:
      - id: Microsoft.Owin.FormCollection
        name: FormCollection
        nameWithType: FormCollection
        qualifiedName: Microsoft.Owin.FormCollection
        isExternal: true
      VB:
      - id: Microsoft.Owin.FormCollection
        name: FormCollection
        nameWithType: FormCollection
        qualifiedName: Microsoft.Owin.FormCollection
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.FormCollection
  System.Collections.Generic.IDictionary`2.ContainsKey(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
        name: ContainsKey
        nameWithType: IDictionary<TKey, TValue>.ContainsKey
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
        name: ContainsKey
        nameWithType: IDictionary(Of TKey, TValue).ContainsKey
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  System.Collections.Generic.IDictionary{System.String,System.String[]}.ContainsKey(System.String):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
        name: ContainsKey
        nameWithType: IDictionary<String, String[]>.ContainsKey
        qualifiedName: System.Collections.Generic.IDictionary<System.String, System.String[]>.ContainsKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
        name: ContainsKey
        nameWithType: IDictionary(Of String, String()).ContainsKey
        qualifiedName: System.Collections.Generic.IDictionary(Of System.String, System.String()).ContainsKey
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    parent: System.Collections.Generic.IDictionary{System.String,System.String[]}
    commentId: M:System.Collections.Generic.IDictionary{System.String,System.String[]}.ContainsKey(System.String)
  System.Collections.Generic.IDictionary`2.Add(`0,`1):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Add(`0,`1)
        name: Add
        nameWithType: IDictionary<TKey, TValue>.Add
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.Add(`0,`1)
        name: Add
        nameWithType: IDictionary(Of TKey, TValue).Add
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)
  System.Collections.Generic.IDictionary{System.String,System.String[]}.Add(System.String,System.String[]):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Add(`0,`1)
        name: Add
        nameWithType: IDictionary<String, String[]>.Add
        qualifiedName: System.Collections.Generic.IDictionary<System.String, System.String[]>.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.Add(`0,`1)
        name: Add
        nameWithType: IDictionary(Of String, String()).Add
        qualifiedName: System.Collections.Generic.IDictionary(Of System.String, System.String()).Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    parent: System.Collections.Generic.IDictionary{System.String,System.String[]}
    commentId: M:System.Collections.Generic.IDictionary{System.String,System.String[]}.Add(System.String,System.String[])
  System.Collections.Generic.IDictionary`2.Remove(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Remove(`0)
        name: Remove
        nameWithType: IDictionary<TKey, TValue>.Remove
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.Remove(`0)
        name: Remove
        nameWithType: IDictionary(Of TKey, TValue).Remove
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)
  System.Collections.Generic.IDictionary{System.String,System.String[]}.Remove(System.String):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Remove(`0)
        name: Remove
        nameWithType: IDictionary<String, String[]>.Remove
        qualifiedName: System.Collections.Generic.IDictionary<System.String, System.String[]>.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.Remove(`0)
        name: Remove
        nameWithType: IDictionary(Of String, String()).Remove
        qualifiedName: System.Collections.Generic.IDictionary(Of System.String, System.String()).Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.Remove(`0)
    parent: System.Collections.Generic.IDictionary{System.String,System.String[]}
    commentId: M:System.Collections.Generic.IDictionary{System.String,System.String[]}.Remove(System.String)
  System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: IDictionary<TKey, TValue>.TryGetValue
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: IDictionary(Of TKey, TValue).TryGetValue
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  System.Collections.Generic.IDictionary{System.String,System.String[]}.TryGetValue(System.String,System.String[]@):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: IDictionary<String, String[]>.TryGetValue
        qualifiedName: System.Collections.Generic.IDictionary<System.String, System.String[]>.TryGetValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
        name: TryGetValue
        nameWithType: IDictionary(Of String, String()).TryGetValue
        qualifiedName: System.Collections.Generic.IDictionary(Of System.String, System.String()).TryGetValue
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    parent: System.Collections.Generic.IDictionary{System.String,System.String[]}
    commentId: M:System.Collections.Generic.IDictionary{System.String,System.String[]}.TryGetValue(System.String,System.String[]@)
  System.Collections.Generic.IDictionary`2.Item(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Item(`0)
        name: Item
        nameWithType: IDictionary<TKey, TValue>.Item
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Item
        isExternal: true
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: System.Collections.Generic.IDictionary`2.Item(`0)
        name: Item
        nameWithType: IDictionary(Of TKey, TValue).Item
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)
  System.Collections.Generic.IDictionary{System.String,System.String[]}.Item(System.String):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Item(`0)
        name: Item
        nameWithType: IDictionary<String, String[]>.Item
        qualifiedName: System.Collections.Generic.IDictionary<System.String, System.String[]>.Item
        isExternal: true
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: System.Collections.Generic.IDictionary`2.Item(`0)
        name: Item
        nameWithType: IDictionary(Of String, String()).Item
        qualifiedName: System.Collections.Generic.IDictionary(Of System.String, System.String()).Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.Item(`0)
    parent: System.Collections.Generic.IDictionary{System.String,System.String[]}
    commentId: P:System.Collections.Generic.IDictionary{System.String,System.String[]}.Item(System.String)
  System.Collections.Generic.IDictionary`2.Keys:
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Keys
        name: Keys
        nameWithType: IDictionary<TKey, TValue>.Keys
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
        isExternal: true
      VB:
      - id: System.Collections.Generic.IDictionary`2.Keys
        name: Keys
        nameWithType: IDictionary(Of TKey, TValue).Keys
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.IDictionary`2.Keys
  System.Collections.Generic.IDictionary{System.String,System.String[]}.Keys:
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Keys
        name: Keys
        nameWithType: IDictionary<String, String[]>.Keys
        qualifiedName: System.Collections.Generic.IDictionary<System.String, System.String[]>.Keys
        isExternal: true
      VB:
      - id: System.Collections.Generic.IDictionary`2.Keys
        name: Keys
        nameWithType: IDictionary(Of String, String()).Keys
        qualifiedName: System.Collections.Generic.IDictionary(Of System.String, System.String()).Keys
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.Keys
    parent: System.Collections.Generic.IDictionary{System.String,System.String[]}
    commentId: P:System.Collections.Generic.IDictionary{System.String,System.String[]}.Keys
  System.Collections.Generic.IDictionary`2.Values:
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Values
        name: Values
        nameWithType: IDictionary<TKey, TValue>.Values
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
        isExternal: true
      VB:
      - id: System.Collections.Generic.IDictionary`2.Values
        name: Values
        nameWithType: IDictionary(Of TKey, TValue).Values
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.IDictionary`2.Values
  System.Collections.Generic.IDictionary{System.String,System.String[]}.Values:
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.Values
        name: Values
        nameWithType: IDictionary<String, String[]>.Values
        qualifiedName: System.Collections.Generic.IDictionary<System.String, System.String[]>.Values
        isExternal: true
      VB:
      - id: System.Collections.Generic.IDictionary`2.Values
        name: Values
        nameWithType: IDictionary(Of String, String()).Values
        qualifiedName: System.Collections.Generic.IDictionary(Of System.String, System.String()).Values
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.Values
    parent: System.Collections.Generic.IDictionary{System.String,System.String[]}
    commentId: P:System.Collections.Generic.IDictionary{System.String,System.String[]}.Values
  System.Collections.Generic.ICollection`1.Add(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Add(`0)
        name: Add
        nameWithType: ICollection<T>.Add
        qualifiedName: System.Collections.Generic.ICollection<T>.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Add(`0)
        name: Add
        nameWithType: ICollection(Of T).Add
        qualifiedName: System.Collections.Generic.ICollection(Of T).Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  System.Collections.Generic.ICollection`1:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.ICollection`1
  System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
  ? System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Add(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
  : name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Add(`0)
        name: Add
        nameWithType: ICollection<KeyValuePair<String, String[]>>.Add
        qualifiedName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String[]>>.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Add(`0)
        name: Add
        nameWithType: ICollection(Of KeyValuePair(Of String, String())).Add
        qualifiedName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String())).Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1.Add(`0)
    parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
    commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Add(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
  System.Collections.Generic.ICollection`1.Clear:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Clear
        name: Clear
        nameWithType: ICollection<T>.Clear
        qualifiedName: System.Collections.Generic.ICollection<T>.Clear
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Clear
        name: Clear
        nameWithType: ICollection(Of T).Clear
        qualifiedName: System.Collections.Generic.ICollection(Of T).Clear
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.ICollection`1.Clear
  System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Clear:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Clear
        name: Clear
        nameWithType: ICollection<KeyValuePair<String, String[]>>.Clear
        qualifiedName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String[]>>.Clear
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Clear
        name: Clear
        nameWithType: ICollection(Of KeyValuePair(Of String, String())).Clear
        qualifiedName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String())).Clear
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1.Clear
    parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
    commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Clear
  System.Collections.Generic.ICollection`1.Contains(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Contains(`0)
        name: Contains
        nameWithType: ICollection<T>.Contains
        qualifiedName: System.Collections.Generic.ICollection<T>.Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Contains(`0)
        name: Contains
        nameWithType: ICollection(Of T).Contains
        qualifiedName: System.Collections.Generic.ICollection(Of T).Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  ? System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Contains(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
  : name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Contains(`0)
        name: Contains
        nameWithType: ICollection<KeyValuePair<String, String[]>>.Contains
        qualifiedName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String[]>>.Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Contains(`0)
        name: Contains
        nameWithType: ICollection(Of KeyValuePair(Of String, String())).Contains
        qualifiedName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String())).Contains
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1.Contains(`0)
    parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
    commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Contains(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
  System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32):
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: ICollection<T>.CopyTo
        qualifiedName: System.Collections.Generic.ICollection<T>.CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: ICollection(Of T).CopyTo
        qualifiedName: System.Collections.Generic.ICollection(Of T).CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  ? System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String[]}[],System.Int32)
  : name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: ICollection<KeyValuePair<String, String[]>>.CopyTo
        qualifiedName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String[]>>.CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
        name: CopyTo
        nameWithType: ICollection(Of KeyValuePair(Of String, String())).CopyTo
        qualifiedName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String())).CopyTo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
    commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String[]}[],System.Int32)
  System.Collections.Generic.ICollection`1.Remove(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Remove(`0)
        name: Remove
        nameWithType: ICollection<T>.Remove
        qualifiedName: System.Collections.Generic.ICollection<T>.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Remove(`0)
        name: Remove
        nameWithType: ICollection(Of T).Remove
        qualifiedName: System.Collections.Generic.ICollection(Of T).Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  ? System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Remove(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
  : name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Remove(`0)
        name: Remove
        nameWithType: ICollection<KeyValuePair<String, String[]>>.Remove
        qualifiedName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String[]>>.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.ICollection`1.Remove(`0)
        name: Remove
        nameWithType: ICollection(Of KeyValuePair(Of String, String())).Remove
        qualifiedName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String())).Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1.Remove(`0)
    parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
    commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Remove(System.Collections.Generic.KeyValuePair{System.String,System.String[]})
  System.Collections.Generic.ICollection`1.Count:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Count
        name: Count
        nameWithType: ICollection<T>.Count
        qualifiedName: System.Collections.Generic.ICollection<T>.Count
        isExternal: true
      VB:
      - id: System.Collections.Generic.ICollection`1.Count
        name: Count
        nameWithType: ICollection(Of T).Count
        qualifiedName: System.Collections.Generic.ICollection(Of T).Count
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.ICollection`1.Count
  System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Count:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.Count
        name: Count
        nameWithType: ICollection<KeyValuePair<String, String[]>>.Count
        qualifiedName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String[]>>.Count
        isExternal: true
      VB:
      - id: System.Collections.Generic.ICollection`1.Count
        name: Count
        nameWithType: ICollection(Of KeyValuePair(Of String, String())).Count
        qualifiedName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String())).Count
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1.Count
    parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
    commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.Count
  System.Collections.Generic.ICollection`1.IsReadOnly:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.IsReadOnly
        name: IsReadOnly
        nameWithType: ICollection<T>.IsReadOnly
        qualifiedName: System.Collections.Generic.ICollection<T>.IsReadOnly
        isExternal: true
      VB:
      - id: System.Collections.Generic.ICollection`1.IsReadOnly
        name: IsReadOnly
        nameWithType: ICollection(Of T).IsReadOnly
        qualifiedName: System.Collections.Generic.ICollection(Of T).IsReadOnly
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.IsReadOnly:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1.IsReadOnly
        name: IsReadOnly
        nameWithType: ICollection<KeyValuePair<String, String[]>>.IsReadOnly
        qualifiedName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String[]>>.IsReadOnly
        isExternal: true
      VB:
      - id: System.Collections.Generic.ICollection`1.IsReadOnly
        name: IsReadOnly
        nameWithType: ICollection(Of KeyValuePair(Of String, String())).IsReadOnly
        qualifiedName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String())).IsReadOnly
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1.IsReadOnly
    parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}
    commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String[]}}.IsReadOnly
  Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues*:
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues*
        name: GetCommaSeparatedValues
        nameWithType: IHeaderDictionary.GetCommaSeparatedValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues
        isExternal: true
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues*
        name: GetCommaSeparatedValues
        nameWithType: IHeaderDictionary.GetCommaSeparatedValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues
  Microsoft.Owin.IHeaderDictionary.Append*:
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.Append*
        name: Append
        nameWithType: IHeaderDictionary.Append
        qualifiedName: Microsoft.Owin.IHeaderDictionary.Append
        isExternal: true
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.Append*
        name: Append
        nameWithType: IHeaderDictionary.Append
        qualifiedName: Microsoft.Owin.IHeaderDictionary.Append
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IHeaderDictionary.Append
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Microsoft.Owin.IHeaderDictionary.AppendValues*:
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.AppendValues*
        name: AppendValues
        nameWithType: IHeaderDictionary.AppendValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.AppendValues
        isExternal: true
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.AppendValues*
        name: AppendValues
        nameWithType: IHeaderDictionary.AppendValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.AppendValues
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IHeaderDictionary.AppendValues
  Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues*:
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues*
        name: AppendCommaSeparatedValues
        nameWithType: IHeaderDictionary.AppendCommaSeparatedValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues
        isExternal: true
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues*
        name: AppendCommaSeparatedValues
        nameWithType: IHeaderDictionary.AppendCommaSeparatedValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues
  Microsoft.Owin.IHeaderDictionary.Set*:
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.Set*
        name: Set
        nameWithType: IHeaderDictionary.Set
        qualifiedName: Microsoft.Owin.IHeaderDictionary.Set
        isExternal: true
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.Set*
        name: Set
        nameWithType: IHeaderDictionary.Set
        qualifiedName: Microsoft.Owin.IHeaderDictionary.Set
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IHeaderDictionary.Set
  Microsoft.Owin.IHeaderDictionary.SetValues*:
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.SetValues*
        name: SetValues
        nameWithType: IHeaderDictionary.SetValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.SetValues
        isExternal: true
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.SetValues*
        name: SetValues
        nameWithType: IHeaderDictionary.SetValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.SetValues
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IHeaderDictionary.SetValues
  Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues*:
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues*
        name: SetCommaSeparatedValues
        nameWithType: IHeaderDictionary.SetCommaSeparatedValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues
        isExternal: true
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues*
        name: SetCommaSeparatedValues
        nameWithType: IHeaderDictionary.SetCommaSeparatedValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues
  Microsoft.Owin.IHeaderDictionary.Item*:
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.Item*
        name: Item
        nameWithType: IHeaderDictionary.Item
        qualifiedName: Microsoft.Owin.IHeaderDictionary.Item
        isExternal: true
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.Item*
        name: Item
        nameWithType: IHeaderDictionary.Item
        qualifiedName: Microsoft.Owin.IHeaderDictionary.Item
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IHeaderDictionary.Item
  Microsoft.Owin.IHeaderDictionary:
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary
        name: IHeaderDictionary
        nameWithType: IHeaderDictionary
        qualifiedName: Microsoft.Owin.IHeaderDictionary
        isExternal: true
      VB:
      - id: Microsoft.Owin.IHeaderDictionary
        name: IHeaderDictionary
        nameWithType: IHeaderDictionary
        qualifiedName: Microsoft.Owin.IHeaderDictionary
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.IHeaderDictionary
  Microsoft.Owin.HeaderDictionary.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.#ctor*
        name: HeaderDictionary
        nameWithType: HeaderDictionary.HeaderDictionary
        qualifiedName: Microsoft.Owin.HeaderDictionary.HeaderDictionary
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.#ctor*
        name: HeaderDictionary
        nameWithType: HeaderDictionary.HeaderDictionary
        qualifiedName: Microsoft.Owin.HeaderDictionary.HeaderDictionary
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.#ctor
  Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#get_Item*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#get_Item*
        name: IDictionary<String, String[]>.get_Item
        nameWithType: HeaderDictionary.IDictionary<String, String[]>.get_Item
        qualifiedName: Microsoft.Owin.HeaderDictionary.System.Collections.Generic.IDictionary<System.String, System.String[]>.get_Item
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#get_Item*
        name: System.Collections.Generic.IDictionary<System.String,System.String[]>.get_Item
        nameWithType: HeaderDictionary.System.Collections.Generic.IDictionary<System.String,System.String[]>.get_Item
        qualifiedName: Microsoft.Owin.HeaderDictionary.System.Collections.Generic.IDictionary<System.String,System.String[]>.get_Item
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#get_Item
  System.Collections.Generic.IDictionary`2.get_Item(`0):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.get_Item(`0)
        name: get_Item
        nameWithType: IDictionary<TKey, TValue>.get_Item
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.get_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.get_Item(`0)
        name: get_Item
        nameWithType: IDictionary(Of TKey, TValue).get_Item
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).get_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.IDictionary`2.get_Item(`0)
  System.Collections.Generic.IDictionary{System.String,System.String[]}.get_Item(System.String):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.get_Item(`0)
        name: get_Item
        nameWithType: IDictionary<String, String[]>.get_Item
        qualifiedName: System.Collections.Generic.IDictionary<System.String, System.String[]>.get_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.get_Item(`0)
        name: get_Item
        nameWithType: IDictionary(Of String, String()).get_Item
        qualifiedName: System.Collections.Generic.IDictionary(Of System.String, System.String()).get_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.get_Item(`0)
    parent: System.Collections.Generic.IDictionary{System.String,System.String[]}
    commentId: M:System.Collections.Generic.IDictionary{System.String,System.String[]}.get_Item(System.String)
  Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#set_Item*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#set_Item*
        name: IDictionary<String, String[]>.set_Item
        nameWithType: HeaderDictionary.IDictionary<String, String[]>.set_Item
        qualifiedName: Microsoft.Owin.HeaderDictionary.System.Collections.Generic.IDictionary<System.String, System.String[]>.set_Item
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#set_Item*
        name: System.Collections.Generic.IDictionary<System.String,System.String[]>.set_Item
        nameWithType: HeaderDictionary.System.Collections.Generic.IDictionary<System.String,System.String[]>.set_Item
        qualifiedName: Microsoft.Owin.HeaderDictionary.System.Collections.Generic.IDictionary<System.String,System.String[]>.set_Item
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#set_Item
  System.Collections.Generic.IDictionary`2.set_Item(`0,`1):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.set_Item(`0,`1)
        name: set_Item
        nameWithType: IDictionary<TKey, TValue>.set_Item
        qualifiedName: System.Collections.Generic.IDictionary<TKey, TValue>.set_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.set_Item(`0,`1)
        name: set_Item
        nameWithType: IDictionary(Of TKey, TValue).set_Item
        qualifiedName: System.Collections.Generic.IDictionary(Of TKey, TValue).set_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.IDictionary`2.set_Item(`0,`1)
  System.Collections.Generic.IDictionary{System.String,System.String[]}.set_Item(System.String,System.String[]):
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2.set_Item(`0,`1)
        name: set_Item
        nameWithType: IDictionary<String, String[]>.set_Item
        qualifiedName: System.Collections.Generic.IDictionary<System.String, System.String[]>.set_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IDictionary`2.set_Item(`0,`1)
        name: set_Item
        nameWithType: IDictionary(Of String, String()).set_Item
        qualifiedName: System.Collections.Generic.IDictionary(Of System.String, System.String()).set_Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2.set_Item(`0,`1)
    parent: System.Collections.Generic.IDictionary{System.String,System.String[]}
    commentId: M:System.Collections.Generic.IDictionary{System.String,System.String[]}.set_Item(System.String,System.String[])
  Microsoft.Owin.HeaderDictionary.GetEnumerator*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.GetEnumerator*
        name: GetEnumerator
        nameWithType: HeaderDictionary.GetEnumerator
        qualifiedName: Microsoft.Owin.HeaderDictionary.GetEnumerator
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.GetEnumerator*
        name: GetEnumerator
        nameWithType: HeaderDictionary.GetEnumerator
        qualifiedName: Microsoft.Owin.HeaderDictionary.GetEnumerator
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.GetEnumerator
  Microsoft.Owin.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator*
        name: IEnumerable.GetEnumerator
        nameWithType: HeaderDictionary.IEnumerable.GetEnumerator
        qualifiedName: Microsoft.Owin.HeaderDictionary.System.Collections.IEnumerable.GetEnumerator
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator*
        name: System.Collections.IEnumerable.GetEnumerator
        nameWithType: HeaderDictionary.System.Collections.IEnumerable.GetEnumerator
        qualifiedName: Microsoft.Owin.HeaderDictionary.System.Collections.IEnumerable.GetEnumerator
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.System#Collections#IEnumerable#GetEnumerator
  Microsoft.Owin.HeaderDictionary.Get*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.Get*
        name: Get
        nameWithType: HeaderDictionary.Get
        qualifiedName: Microsoft.Owin.HeaderDictionary.Get
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.Get*
        name: Get
        nameWithType: HeaderDictionary.Get
        qualifiedName: Microsoft.Owin.HeaderDictionary.Get
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.Get
  Microsoft.Owin.HeaderDictionary.GetValues*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.GetValues*
        name: GetValues
        nameWithType: HeaderDictionary.GetValues
        qualifiedName: Microsoft.Owin.HeaderDictionary.GetValues
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.GetValues*
        name: GetValues
        nameWithType: HeaderDictionary.GetValues
        qualifiedName: Microsoft.Owin.HeaderDictionary.GetValues
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.GetValues
  Microsoft.Owin.HeaderDictionary.GetCommaSeparatedValues*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.GetCommaSeparatedValues*
        name: GetCommaSeparatedValues
        nameWithType: HeaderDictionary.GetCommaSeparatedValues
        qualifiedName: Microsoft.Owin.HeaderDictionary.GetCommaSeparatedValues
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.GetCommaSeparatedValues*
        name: GetCommaSeparatedValues
        nameWithType: HeaderDictionary.GetCommaSeparatedValues
        qualifiedName: Microsoft.Owin.HeaderDictionary.GetCommaSeparatedValues
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.GetCommaSeparatedValues
  Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues(System.String)
        name: GetCommaSeparatedValues
        nameWithType: IHeaderDictionary.GetCommaSeparatedValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues(System.String)
        name: GetCommaSeparatedValues
        nameWithType: IHeaderDictionary.GetCommaSeparatedValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IHeaderDictionary
    commentId: M:Microsoft.Owin.IHeaderDictionary.GetCommaSeparatedValues(System.String)
  Microsoft.Owin.HeaderDictionary.Append*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.Append*
        name: Append
        nameWithType: HeaderDictionary.Append
        qualifiedName: Microsoft.Owin.HeaderDictionary.Append
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.Append*
        name: Append
        nameWithType: HeaderDictionary.Append
        qualifiedName: Microsoft.Owin.HeaderDictionary.Append
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.Append
  Microsoft.Owin.IHeaderDictionary.Append(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.Append(System.String,System.String)
        name: Append
        nameWithType: IHeaderDictionary.Append
        qualifiedName: Microsoft.Owin.IHeaderDictionary.Append
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.Append(System.String,System.String)
        name: Append
        nameWithType: IHeaderDictionary.Append
        qualifiedName: Microsoft.Owin.IHeaderDictionary.Append
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IHeaderDictionary
    commentId: M:Microsoft.Owin.IHeaderDictionary.Append(System.String,System.String)
  Microsoft.Owin.HeaderDictionary.AppendValues*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.AppendValues*
        name: AppendValues
        nameWithType: HeaderDictionary.AppendValues
        qualifiedName: Microsoft.Owin.HeaderDictionary.AppendValues
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.AppendValues*
        name: AppendValues
        nameWithType: HeaderDictionary.AppendValues
        qualifiedName: Microsoft.Owin.HeaderDictionary.AppendValues
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.AppendValues
  Microsoft.Owin.IHeaderDictionary.AppendValues(System.String,System.String[]):
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.AppendValues(System.String,System.String[])
        name: AppendValues
        nameWithType: IHeaderDictionary.AppendValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.AppendValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.AppendValues(System.String,System.String[])
        name: AppendValues
        nameWithType: IHeaderDictionary.AppendValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.AppendValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IHeaderDictionary
    commentId: M:Microsoft.Owin.IHeaderDictionary.AppendValues(System.String,System.String[])
  Microsoft.Owin.HeaderDictionary.AppendCommaSeparatedValues*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.AppendCommaSeparatedValues*
        name: AppendCommaSeparatedValues
        nameWithType: HeaderDictionary.AppendCommaSeparatedValues
        qualifiedName: Microsoft.Owin.HeaderDictionary.AppendCommaSeparatedValues
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.AppendCommaSeparatedValues*
        name: AppendCommaSeparatedValues
        nameWithType: HeaderDictionary.AppendCommaSeparatedValues
        qualifiedName: Microsoft.Owin.HeaderDictionary.AppendCommaSeparatedValues
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.AppendCommaSeparatedValues
  Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues(System.String,System.String[]):
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues(System.String,System.String[])
        name: AppendCommaSeparatedValues
        nameWithType: IHeaderDictionary.AppendCommaSeparatedValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues(System.String,System.String[])
        name: AppendCommaSeparatedValues
        nameWithType: IHeaderDictionary.AppendCommaSeparatedValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IHeaderDictionary
    commentId: M:Microsoft.Owin.IHeaderDictionary.AppendCommaSeparatedValues(System.String,System.String[])
  Microsoft.Owin.HeaderDictionary.Set*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.Set*
        name: Set
        nameWithType: HeaderDictionary.Set
        qualifiedName: Microsoft.Owin.HeaderDictionary.Set
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.Set*
        name: Set
        nameWithType: HeaderDictionary.Set
        qualifiedName: Microsoft.Owin.HeaderDictionary.Set
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.Set
  Microsoft.Owin.IHeaderDictionary.Set(System.String,System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.Set(System.String,System.String)
        name: Set
        nameWithType: IHeaderDictionary.Set
        qualifiedName: Microsoft.Owin.IHeaderDictionary.Set
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.Set(System.String,System.String)
        name: Set
        nameWithType: IHeaderDictionary.Set
        qualifiedName: Microsoft.Owin.IHeaderDictionary.Set
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IHeaderDictionary
    commentId: M:Microsoft.Owin.IHeaderDictionary.Set(System.String,System.String)
  Microsoft.Owin.HeaderDictionary.SetValues*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.SetValues*
        name: SetValues
        nameWithType: HeaderDictionary.SetValues
        qualifiedName: Microsoft.Owin.HeaderDictionary.SetValues
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.SetValues*
        name: SetValues
        nameWithType: HeaderDictionary.SetValues
        qualifiedName: Microsoft.Owin.HeaderDictionary.SetValues
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.SetValues
  Microsoft.Owin.IHeaderDictionary.SetValues(System.String,System.String[]):
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.SetValues(System.String,System.String[])
        name: SetValues
        nameWithType: IHeaderDictionary.SetValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.SetValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.SetValues(System.String,System.String[])
        name: SetValues
        nameWithType: IHeaderDictionary.SetValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.SetValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IHeaderDictionary
    commentId: M:Microsoft.Owin.IHeaderDictionary.SetValues(System.String,System.String[])
  Microsoft.Owin.HeaderDictionary.SetCommaSeparatedValues*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.SetCommaSeparatedValues*
        name: SetCommaSeparatedValues
        nameWithType: HeaderDictionary.SetCommaSeparatedValues
        qualifiedName: Microsoft.Owin.HeaderDictionary.SetCommaSeparatedValues
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.SetCommaSeparatedValues*
        name: SetCommaSeparatedValues
        nameWithType: HeaderDictionary.SetCommaSeparatedValues
        qualifiedName: Microsoft.Owin.HeaderDictionary.SetCommaSeparatedValues
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.SetCommaSeparatedValues
  Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues(System.String,System.String[]):
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues(System.String,System.String[])
        name: SetCommaSeparatedValues
        nameWithType: IHeaderDictionary.SetCommaSeparatedValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues(System.String,System.String[])
        name: SetCommaSeparatedValues
        nameWithType: IHeaderDictionary.SetCommaSeparatedValues
        qualifiedName: Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IHeaderDictionary
    commentId: M:Microsoft.Owin.IHeaderDictionary.SetCommaSeparatedValues(System.String,System.String[])
  Microsoft.Owin.HeaderDictionary.Add*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.Add*
        name: Add
        nameWithType: HeaderDictionary.Add
        qualifiedName: Microsoft.Owin.HeaderDictionary.Add
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.Add*
        name: Add
        nameWithType: HeaderDictionary.Add
        qualifiedName: Microsoft.Owin.HeaderDictionary.Add
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.Add
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Microsoft.Owin.HeaderDictionary.ContainsKey*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.ContainsKey*
        name: ContainsKey
        nameWithType: HeaderDictionary.ContainsKey
        qualifiedName: Microsoft.Owin.HeaderDictionary.ContainsKey
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.ContainsKey*
        name: ContainsKey
        nameWithType: HeaderDictionary.ContainsKey
        qualifiedName: Microsoft.Owin.HeaderDictionary.ContainsKey
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.ContainsKey
  Microsoft.Owin.HeaderDictionary.Remove*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.Remove*
        name: Remove
        nameWithType: HeaderDictionary.Remove
        qualifiedName: Microsoft.Owin.HeaderDictionary.Remove
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.Remove*
        name: Remove
        nameWithType: HeaderDictionary.Remove
        qualifiedName: Microsoft.Owin.HeaderDictionary.Remove
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.Remove
  Microsoft.Owin.HeaderDictionary.TryGetValue*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.TryGetValue*
        name: TryGetValue
        nameWithType: HeaderDictionary.TryGetValue
        qualifiedName: Microsoft.Owin.HeaderDictionary.TryGetValue
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.TryGetValue*
        name: TryGetValue
        nameWithType: HeaderDictionary.TryGetValue
        qualifiedName: Microsoft.Owin.HeaderDictionary.TryGetValue
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.TryGetValue
  System.Collections.Generic.KeyValuePair`2:
    name:
      CSharp:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.KeyValuePair`2
  System.Collections.Generic.KeyValuePair{System.String,System.String[]}:
    name:
      CSharp:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.KeyValuePair`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.KeyValuePair{System.String,System.String[]}
  Microsoft.Owin.HeaderDictionary.Clear*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.Clear*
        name: Clear
        nameWithType: HeaderDictionary.Clear
        qualifiedName: Microsoft.Owin.HeaderDictionary.Clear
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.Clear*
        name: Clear
        nameWithType: HeaderDictionary.Clear
        qualifiedName: Microsoft.Owin.HeaderDictionary.Clear
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.Clear
  Microsoft.Owin.HeaderDictionary.Contains*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.Contains*
        name: Contains
        nameWithType: HeaderDictionary.Contains
        qualifiedName: Microsoft.Owin.HeaderDictionary.Contains
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.Contains*
        name: Contains
        nameWithType: HeaderDictionary.Contains
        qualifiedName: Microsoft.Owin.HeaderDictionary.Contains
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.Contains
  System.Collections.Generic.KeyValuePair{System.String,System.String[]}[]:
    name:
      CSharp:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Microsoft.Owin.HeaderDictionary.CopyTo*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.CopyTo*
        name: CopyTo
        nameWithType: HeaderDictionary.CopyTo
        qualifiedName: Microsoft.Owin.HeaderDictionary.CopyTo
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.CopyTo*
        name: CopyTo
        nameWithType: HeaderDictionary.CopyTo
        qualifiedName: Microsoft.Owin.HeaderDictionary.CopyTo
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.CopyTo
  System.Collections.Generic.ICollection{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.ICollection{System.String}
  Microsoft.Owin.HeaderDictionary.Keys*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.Keys*
        name: Keys
        nameWithType: HeaderDictionary.Keys
        qualifiedName: Microsoft.Owin.HeaderDictionary.Keys
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.Keys*
        name: Keys
        nameWithType: HeaderDictionary.Keys
        qualifiedName: Microsoft.Owin.HeaderDictionary.Keys
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.Keys
  System.Collections.Generic.ICollection{System.String[]}:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.ICollection{System.String[]}
  Microsoft.Owin.HeaderDictionary.Values*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.Values*
        name: Values
        nameWithType: HeaderDictionary.Values
        qualifiedName: Microsoft.Owin.HeaderDictionary.Values
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.Values*
        name: Values
        nameWithType: HeaderDictionary.Values
        qualifiedName: Microsoft.Owin.HeaderDictionary.Values
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.Values
  Microsoft.Owin.HeaderDictionary.Count*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.Count*
        name: Count
        nameWithType: HeaderDictionary.Count
        qualifiedName: Microsoft.Owin.HeaderDictionary.Count
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.Count*
        name: Count
        nameWithType: HeaderDictionary.Count
        qualifiedName: Microsoft.Owin.HeaderDictionary.Count
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.Count
  Microsoft.Owin.HeaderDictionary.IsReadOnly*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.IsReadOnly*
        name: IsReadOnly
        nameWithType: HeaderDictionary.IsReadOnly
        qualifiedName: Microsoft.Owin.HeaderDictionary.IsReadOnly
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.IsReadOnly*
        name: IsReadOnly
        nameWithType: HeaderDictionary.IsReadOnly
        qualifiedName: Microsoft.Owin.HeaderDictionary.IsReadOnly
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.IsReadOnly
  Microsoft.Owin.HeaderDictionary.Item*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.Item*
        name: Item
        nameWithType: HeaderDictionary.Item
        qualifiedName: Microsoft.Owin.HeaderDictionary.Item
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.Item*
        name: Item
        nameWithType: HeaderDictionary.Item
        qualifiedName: Microsoft.Owin.HeaderDictionary.Item
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.Item
  Microsoft.Owin.IHeaderDictionary.Item(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.IHeaderDictionary.Item(System.String)
        name: Item
        nameWithType: IHeaderDictionary.Item
        qualifiedName: Microsoft.Owin.IHeaderDictionary.Item
        isExternal: true
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: Microsoft.Owin.IHeaderDictionary.Item(System.String)
        name: Item
        nameWithType: IHeaderDictionary.Item
        qualifiedName: Microsoft.Owin.IHeaderDictionary.Item
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IHeaderDictionary
    commentId: P:Microsoft.Owin.IHeaderDictionary.Item(System.String)
  Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#Item*:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#Item*
        name: IDictionary<String, String[]>.Item
        nameWithType: HeaderDictionary.IDictionary<String, String[]>.Item
        qualifiedName: Microsoft.Owin.HeaderDictionary.System.Collections.Generic.IDictionary<System.String, System.String[]>.Item
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#Item*
        name: System.Collections.Generic.IDictionary<System.String,System.String[]>.Item
        nameWithType: HeaderDictionary.System.Collections.Generic.IDictionary<System.String,System.String[]>.Item
        qualifiedName: Microsoft.Owin.HeaderDictionary.System.Collections.Generic.IDictionary<System.String,System.String[]>.Item
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HeaderDictionary.System#Collections#Generic#IDictionary{System#String,System#String[]}#Item
  Microsoft.Owin.HeaderDictionary:
    name:
      CSharp:
      - id: Microsoft.Owin.HeaderDictionary
        name: HeaderDictionary
        nameWithType: HeaderDictionary
        qualifiedName: Microsoft.Owin.HeaderDictionary
        isExternal: true
      VB:
      - id: Microsoft.Owin.HeaderDictionary
        name: HeaderDictionary
        nameWithType: HeaderDictionary
        qualifiedName: Microsoft.Owin.HeaderDictionary
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.HeaderDictionary
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.IEquatable`1:
    name:
      CSharp:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.IEquatable`1
  System.IEquatable{Microsoft.Owin.HostString}:
    name:
      CSharp:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.HostString
        name: HostString
        nameWithType: HostString
        qualifiedName: Microsoft.Owin.HostString
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.HostString
        name: HostString
        nameWithType: HostString
        qualifiedName: Microsoft.Owin.HostString
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IEquatable`1
    parent: System
    commentId: T:System.IEquatable{Microsoft.Owin.HostString}
  Microsoft.Owin.HostString.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.HostString.#ctor*
        name: HostString
        nameWithType: HostString.HostString
        qualifiedName: Microsoft.Owin.HostString.HostString
        isExternal: true
      VB:
      - id: Microsoft.Owin.HostString.#ctor*
        name: HostString
        nameWithType: HostString.HostString
        qualifiedName: Microsoft.Owin.HostString.HostString
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HostString.#ctor
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  Microsoft.Owin.HostString.ToString*:
    name:
      CSharp:
      - id: Microsoft.Owin.HostString.ToString*
        name: ToString
        nameWithType: HostString.ToString
        qualifiedName: Microsoft.Owin.HostString.ToString
        isExternal: true
      VB:
      - id: Microsoft.Owin.HostString.ToString*
        name: ToString
        nameWithType: HostString.ToString
        qualifiedName: Microsoft.Owin.HostString.ToString
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HostString.ToString
  Microsoft.Owin.HostString.ToUriComponent*:
    name:
      CSharp:
      - id: Microsoft.Owin.HostString.ToUriComponent*
        name: ToUriComponent
        nameWithType: HostString.ToUriComponent
        qualifiedName: Microsoft.Owin.HostString.ToUriComponent
        isExternal: true
      VB:
      - id: Microsoft.Owin.HostString.ToUriComponent*
        name: ToUriComponent
        nameWithType: HostString.ToUriComponent
        qualifiedName: Microsoft.Owin.HostString.ToUriComponent
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HostString.ToUriComponent
  Microsoft.Owin.HostString:
    name:
      CSharp:
      - id: Microsoft.Owin.HostString
        name: HostString
        nameWithType: HostString
        qualifiedName: Microsoft.Owin.HostString
        isExternal: true
      VB:
      - id: Microsoft.Owin.HostString
        name: HostString
        nameWithType: HostString
        qualifiedName: Microsoft.Owin.HostString
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.HostString
  Microsoft.Owin.HostString.FromUriComponent*:
    name:
      CSharp:
      - id: Microsoft.Owin.HostString.FromUriComponent*
        name: FromUriComponent
        nameWithType: HostString.FromUriComponent
        qualifiedName: Microsoft.Owin.HostString.FromUriComponent
        isExternal: true
      VB:
      - id: Microsoft.Owin.HostString.FromUriComponent*
        name: FromUriComponent
        nameWithType: HostString.FromUriComponent
        qualifiedName: Microsoft.Owin.HostString.FromUriComponent
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HostString.FromUriComponent
  System.Uri:
    name:
      CSharp:
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
      VB:
      - id: System.Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: System.Uri
        isExternal: true
    isDefinition: true
  Microsoft.Owin.HostString.Equals*:
    name:
      CSharp:
      - id: Microsoft.Owin.HostString.Equals*
        name: Equals
        nameWithType: HostString.Equals
        qualifiedName: Microsoft.Owin.HostString.Equals
        isExternal: true
      VB:
      - id: Microsoft.Owin.HostString.Equals*
        name: Equals
        nameWithType: HostString.Equals
        qualifiedName: Microsoft.Owin.HostString.Equals
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HostString.Equals
  System.IEquatable`1.Equals(`0):
    name:
      CSharp:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable<T>.Equals
        qualifiedName: System.IEquatable<T>.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable(Of T).Equals
        qualifiedName: System.IEquatable(Of T).Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.IEquatable`1.Equals(`0)
  System.IEquatable{Microsoft.Owin.HostString}.Equals(Microsoft.Owin.HostString):
    name:
      CSharp:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable<HostString>.Equals
        qualifiedName: System.IEquatable<Microsoft.Owin.HostString>.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.HostString
        name: HostString
        nameWithType: HostString
        qualifiedName: Microsoft.Owin.HostString
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable(Of HostString).Equals
        qualifiedName: System.IEquatable(Of Microsoft.Owin.HostString).Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.HostString
        name: HostString
        nameWithType: HostString
        qualifiedName: Microsoft.Owin.HostString
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IEquatable`1.Equals(`0)
    parent: System.IEquatable{Microsoft.Owin.HostString}
    commentId: M:System.IEquatable{Microsoft.Owin.HostString}.Equals(Microsoft.Owin.HostString)
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  Microsoft.Owin.HostString.GetHashCode*:
    name:
      CSharp:
      - id: Microsoft.Owin.HostString.GetHashCode*
        name: GetHashCode
        nameWithType: HostString.GetHashCode
        qualifiedName: Microsoft.Owin.HostString.GetHashCode
        isExternal: true
      VB:
      - id: Microsoft.Owin.HostString.GetHashCode*
        name: GetHashCode
        nameWithType: HostString.GetHashCode
        qualifiedName: Microsoft.Owin.HostString.GetHashCode
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HostString.GetHashCode
  Microsoft.Owin.HostString.op_Equality*:
    name:
      CSharp:
      - id: Microsoft.Owin.HostString.op_Equality*
        name: Equality
        nameWithType: HostString.Equality
        qualifiedName: Microsoft.Owin.HostString.Equality
        isExternal: true
      VB:
      - id: Microsoft.Owin.HostString.op_Equality*
        name: Equality
        nameWithType: HostString.Equality
        qualifiedName: Microsoft.Owin.HostString.Equality
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HostString.op_Equality
  Microsoft.Owin.HostString.op_Inequality*:
    name:
      CSharp:
      - id: Microsoft.Owin.HostString.op_Inequality*
        name: Inequality
        nameWithType: HostString.Inequality
        qualifiedName: Microsoft.Owin.HostString.Inequality
        isExternal: true
      VB:
      - id: Microsoft.Owin.HostString.op_Inequality*
        name: Inequality
        nameWithType: HostString.Inequality
        qualifiedName: Microsoft.Owin.HostString.Inequality
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HostString.op_Inequality
  Microsoft.Owin.HostString.Value*:
    name:
      CSharp:
      - id: Microsoft.Owin.HostString.Value*
        name: Value
        nameWithType: HostString.Value
        qualifiedName: Microsoft.Owin.HostString.Value
        isExternal: true
      VB:
      - id: Microsoft.Owin.HostString.Value*
        name: Value
        nameWithType: HostString.Value
        qualifiedName: Microsoft.Owin.HostString.Value
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.HostString.Value
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  Microsoft.Owin.IOwinContext.Get*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.Get*
        name: Get
        nameWithType: IOwinContext.Get
        qualifiedName: Microsoft.Owin.IOwinContext.Get
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinContext.Get*
        name: Get
        nameWithType: IOwinContext.Get
        qualifiedName: Microsoft.Owin.IOwinContext.Get
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinContext.Get
  Microsoft.Owin.IOwinContext:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.IOwinContext
  Microsoft.Owin.IOwinContext.Set*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.Set*
        name: Set
        nameWithType: IOwinContext.Set
        qualifiedName: Microsoft.Owin.IOwinContext.Set
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinContext.Set*
        name: Set
        nameWithType: IOwinContext.Set
        qualifiedName: Microsoft.Owin.IOwinContext.Set
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinContext.Set
  Microsoft.Owin.IOwinRequest:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest
        name: IOwinRequest
        nameWithType: IOwinRequest
        qualifiedName: Microsoft.Owin.IOwinRequest
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest
        name: IOwinRequest
        nameWithType: IOwinRequest
        qualifiedName: Microsoft.Owin.IOwinRequest
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.IOwinRequest
  Microsoft.Owin.IOwinContext.Request*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.Request*
        name: Request
        nameWithType: IOwinContext.Request
        qualifiedName: Microsoft.Owin.IOwinContext.Request
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinContext.Request*
        name: Request
        nameWithType: IOwinContext.Request
        qualifiedName: Microsoft.Owin.IOwinContext.Request
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinContext.Request
  Microsoft.Owin.IOwinResponse:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse
        name: IOwinResponse
        nameWithType: IOwinResponse
        qualifiedName: Microsoft.Owin.IOwinResponse
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse
        name: IOwinResponse
        nameWithType: IOwinResponse
        qualifiedName: Microsoft.Owin.IOwinResponse
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.IOwinResponse
  Microsoft.Owin.IOwinContext.Response*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.Response*
        name: Response
        nameWithType: IOwinContext.Response
        qualifiedName: Microsoft.Owin.IOwinContext.Response
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinContext.Response*
        name: Response
        nameWithType: IOwinContext.Response
        qualifiedName: Microsoft.Owin.IOwinContext.Response
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinContext.Response
  Microsoft.Owin.Security:
    name:
      CSharp:
      - name: Microsoft.Owin.Security
        nameWithType: Microsoft.Owin.Security
        qualifiedName: Microsoft.Owin.Security
      VB:
      - name: Microsoft.Owin.Security
        nameWithType: Microsoft.Owin.Security
        qualifiedName: Microsoft.Owin.Security
    isDefinition: true
    commentId: N:Microsoft.Owin.Security
  Microsoft.Owin.Security.IAuthenticationManager:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.IAuthenticationManager
        name: IAuthenticationManager
        nameWithType: IAuthenticationManager
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.IAuthenticationManager
        name: IAuthenticationManager
        nameWithType: IAuthenticationManager
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Security
    commentId: T:Microsoft.Owin.Security.IAuthenticationManager
  Microsoft.Owin.IOwinContext.Authentication*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.Authentication*
        name: Authentication
        nameWithType: IOwinContext.Authentication
        qualifiedName: Microsoft.Owin.IOwinContext.Authentication
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinContext.Authentication*
        name: Authentication
        nameWithType: IOwinContext.Authentication
        qualifiedName: Microsoft.Owin.IOwinContext.Authentication
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinContext.Authentication
  System.Collections.Generic.IDictionary{System.String,System.Object}:
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  Microsoft.Owin.IOwinContext.Environment*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.Environment*
        name: Environment
        nameWithType: IOwinContext.Environment
        qualifiedName: Microsoft.Owin.IOwinContext.Environment
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinContext.Environment*
        name: Environment
        nameWithType: IOwinContext.Environment
        qualifiedName: Microsoft.Owin.IOwinContext.Environment
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinContext.Environment
  System.IO:
    name:
      CSharp:
      - name: System.IO
        nameWithType: System.IO
        qualifiedName: System.IO
      VB:
      - name: System.IO
        nameWithType: System.IO
        qualifiedName: System.IO
    isDefinition: true
    commentId: N:System.IO
  System.IO.TextWriter:
    name:
      CSharp:
      - id: System.IO.TextWriter
        name: TextWriter
        nameWithType: TextWriter
        qualifiedName: System.IO.TextWriter
        isExternal: true
      VB:
      - id: System.IO.TextWriter
        name: TextWriter
        nameWithType: TextWriter
        qualifiedName: System.IO.TextWriter
        isExternal: true
    isDefinition: true
    parent: System.IO
    commentId: T:System.IO.TextWriter
  Microsoft.Owin.IOwinContext.TraceOutput*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.TraceOutput*
        name: TraceOutput
        nameWithType: IOwinContext.TraceOutput
        qualifiedName: Microsoft.Owin.IOwinContext.TraceOutput
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinContext.TraceOutput*
        name: TraceOutput
        nameWithType: IOwinContext.TraceOutput
        qualifiedName: Microsoft.Owin.IOwinContext.TraceOutput
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinContext.TraceOutput
  System.Threading.Tasks.Task`1:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Threading.Tasks.Task`1
  System.Threading.Tasks:
    name:
      CSharp:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
      VB:
      - name: System.Threading.Tasks
        nameWithType: System.Threading.Tasks
        qualifiedName: System.Threading.Tasks
    isDefinition: true
    commentId: N:System.Threading.Tasks
  System.Threading.Tasks.Task{Microsoft.Owin.IFormCollection}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.IFormCollection
        name: IFormCollection
        nameWithType: IFormCollection
        qualifiedName: Microsoft.Owin.IFormCollection
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.IFormCollection
        name: IFormCollection
        nameWithType: IFormCollection
        qualifiedName: Microsoft.Owin.IFormCollection
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{Microsoft.Owin.IFormCollection}
  Microsoft.Owin.IOwinRequest.ReadFormAsync*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.ReadFormAsync*
        name: ReadFormAsync
        nameWithType: IOwinRequest.ReadFormAsync
        qualifiedName: Microsoft.Owin.IOwinRequest.ReadFormAsync
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.ReadFormAsync*
        name: ReadFormAsync
        nameWithType: IOwinRequest.ReadFormAsync
        qualifiedName: Microsoft.Owin.IOwinRequest.ReadFormAsync
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.ReadFormAsync
  Microsoft.Owin.IOwinRequest.Get*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Get*
        name: Get
        nameWithType: IOwinRequest.Get
        qualifiedName: Microsoft.Owin.IOwinRequest.Get
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Get*
        name: Get
        nameWithType: IOwinRequest.Get
        qualifiedName: Microsoft.Owin.IOwinRequest.Get
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Get
  Microsoft.Owin.IOwinRequest.Set*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Set*
        name: Set
        nameWithType: IOwinRequest.Set
        qualifiedName: Microsoft.Owin.IOwinRequest.Set
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Set*
        name: Set
        nameWithType: IOwinRequest.Set
        qualifiedName: Microsoft.Owin.IOwinRequest.Set
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Set
  Microsoft.Owin.IOwinRequest.Environment*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Environment*
        name: Environment
        nameWithType: IOwinRequest.Environment
        qualifiedName: Microsoft.Owin.IOwinRequest.Environment
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Environment*
        name: Environment
        nameWithType: IOwinRequest.Environment
        qualifiedName: Microsoft.Owin.IOwinRequest.Environment
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Environment
  Microsoft.Owin.IOwinRequest.Context*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Context*
        name: Context
        nameWithType: IOwinRequest.Context
        qualifiedName: Microsoft.Owin.IOwinRequest.Context
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Context*
        name: Context
        nameWithType: IOwinRequest.Context
        qualifiedName: Microsoft.Owin.IOwinRequest.Context
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Context
  Microsoft.Owin.IOwinRequest.Method*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Method*
        name: Method
        nameWithType: IOwinRequest.Method
        qualifiedName: Microsoft.Owin.IOwinRequest.Method
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Method*
        name: Method
        nameWithType: IOwinRequest.Method
        qualifiedName: Microsoft.Owin.IOwinRequest.Method
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Method
  Microsoft.Owin.IOwinRequest.Scheme*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Scheme*
        name: Scheme
        nameWithType: IOwinRequest.Scheme
        qualifiedName: Microsoft.Owin.IOwinRequest.Scheme
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Scheme*
        name: Scheme
        nameWithType: IOwinRequest.Scheme
        qualifiedName: Microsoft.Owin.IOwinRequest.Scheme
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Scheme
  Microsoft.Owin.IOwinRequest.IsSecure*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.IsSecure*
        name: IsSecure
        nameWithType: IOwinRequest.IsSecure
        qualifiedName: Microsoft.Owin.IOwinRequest.IsSecure
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.IsSecure*
        name: IsSecure
        nameWithType: IOwinRequest.IsSecure
        qualifiedName: Microsoft.Owin.IOwinRequest.IsSecure
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.IsSecure
  Microsoft.Owin.IOwinRequest.Host*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Host*
        name: Host
        nameWithType: IOwinRequest.Host
        qualifiedName: Microsoft.Owin.IOwinRequest.Host
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Host*
        name: Host
        nameWithType: IOwinRequest.Host
        qualifiedName: Microsoft.Owin.IOwinRequest.Host
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Host
  Microsoft.Owin.PathString:
    name:
      CSharp:
      - id: Microsoft.Owin.PathString
        name: PathString
        nameWithType: PathString
        qualifiedName: Microsoft.Owin.PathString
        isExternal: true
      VB:
      - id: Microsoft.Owin.PathString
        name: PathString
        nameWithType: PathString
        qualifiedName: Microsoft.Owin.PathString
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.PathString
  Microsoft.Owin.IOwinRequest.PathBase*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.PathBase*
        name: PathBase
        nameWithType: IOwinRequest.PathBase
        qualifiedName: Microsoft.Owin.IOwinRequest.PathBase
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.PathBase*
        name: PathBase
        nameWithType: IOwinRequest.PathBase
        qualifiedName: Microsoft.Owin.IOwinRequest.PathBase
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.PathBase
  Microsoft.Owin.IOwinRequest.Path*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Path*
        name: Path
        nameWithType: IOwinRequest.Path
        qualifiedName: Microsoft.Owin.IOwinRequest.Path
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Path*
        name: Path
        nameWithType: IOwinRequest.Path
        qualifiedName: Microsoft.Owin.IOwinRequest.Path
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Path
  Microsoft.Owin.QueryString:
    name:
      CSharp:
      - id: Microsoft.Owin.QueryString
        name: QueryString
        nameWithType: QueryString
        qualifiedName: Microsoft.Owin.QueryString
        isExternal: true
      VB:
      - id: Microsoft.Owin.QueryString
        name: QueryString
        nameWithType: QueryString
        qualifiedName: Microsoft.Owin.QueryString
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.QueryString
  Microsoft.Owin.IOwinRequest.QueryString*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.QueryString*
        name: QueryString
        nameWithType: IOwinRequest.QueryString
        qualifiedName: Microsoft.Owin.IOwinRequest.QueryString
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.QueryString*
        name: QueryString
        nameWithType: IOwinRequest.QueryString
        qualifiedName: Microsoft.Owin.IOwinRequest.QueryString
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.QueryString
  Microsoft.Owin.IOwinRequest.Query*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Query*
        name: Query
        nameWithType: IOwinRequest.Query
        qualifiedName: Microsoft.Owin.IOwinRequest.Query
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Query*
        name: Query
        nameWithType: IOwinRequest.Query
        qualifiedName: Microsoft.Owin.IOwinRequest.Query
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Query
  Microsoft.Owin.IOwinRequest.Uri*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Uri*
        name: Uri
        nameWithType: IOwinRequest.Uri
        qualifiedName: Microsoft.Owin.IOwinRequest.Uri
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Uri*
        name: Uri
        nameWithType: IOwinRequest.Uri
        qualifiedName: Microsoft.Owin.IOwinRequest.Uri
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Uri
  Microsoft.Owin.IOwinRequest.Protocol*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Protocol*
        name: Protocol
        nameWithType: IOwinRequest.Protocol
        qualifiedName: Microsoft.Owin.IOwinRequest.Protocol
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Protocol*
        name: Protocol
        nameWithType: IOwinRequest.Protocol
        qualifiedName: Microsoft.Owin.IOwinRequest.Protocol
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Protocol
  Microsoft.Owin.IOwinRequest.Headers*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Headers*
        name: Headers
        nameWithType: IOwinRequest.Headers
        qualifiedName: Microsoft.Owin.IOwinRequest.Headers
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Headers*
        name: Headers
        nameWithType: IOwinRequest.Headers
        qualifiedName: Microsoft.Owin.IOwinRequest.Headers
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Headers
  Microsoft.Owin.RequestCookieCollection:
    name:
      CSharp:
      - id: Microsoft.Owin.RequestCookieCollection
        name: RequestCookieCollection
        nameWithType: RequestCookieCollection
        qualifiedName: Microsoft.Owin.RequestCookieCollection
        isExternal: true
      VB:
      - id: Microsoft.Owin.RequestCookieCollection
        name: RequestCookieCollection
        nameWithType: RequestCookieCollection
        qualifiedName: Microsoft.Owin.RequestCookieCollection
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.RequestCookieCollection
  Microsoft.Owin.IOwinRequest.Cookies*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Cookies*
        name: Cookies
        nameWithType: IOwinRequest.Cookies
        qualifiedName: Microsoft.Owin.IOwinRequest.Cookies
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Cookies*
        name: Cookies
        nameWithType: IOwinRequest.Cookies
        qualifiedName: Microsoft.Owin.IOwinRequest.Cookies
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Cookies
  Microsoft.Owin.IOwinRequest.ContentType*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.ContentType*
        name: ContentType
        nameWithType: IOwinRequest.ContentType
        qualifiedName: Microsoft.Owin.IOwinRequest.ContentType
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.ContentType*
        name: ContentType
        nameWithType: IOwinRequest.ContentType
        qualifiedName: Microsoft.Owin.IOwinRequest.ContentType
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.ContentType
  Microsoft.Owin.IOwinRequest.CacheControl*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.CacheControl*
        name: CacheControl
        nameWithType: IOwinRequest.CacheControl
        qualifiedName: Microsoft.Owin.IOwinRequest.CacheControl
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.CacheControl*
        name: CacheControl
        nameWithType: IOwinRequest.CacheControl
        qualifiedName: Microsoft.Owin.IOwinRequest.CacheControl
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.CacheControl
  Microsoft.Owin.IOwinRequest.MediaType*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.MediaType*
        name: MediaType
        nameWithType: IOwinRequest.MediaType
        qualifiedName: Microsoft.Owin.IOwinRequest.MediaType
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.MediaType*
        name: MediaType
        nameWithType: IOwinRequest.MediaType
        qualifiedName: Microsoft.Owin.IOwinRequest.MediaType
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.MediaType
  Microsoft.Owin.IOwinRequest.Accept*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Accept*
        name: Accept
        nameWithType: IOwinRequest.Accept
        qualifiedName: Microsoft.Owin.IOwinRequest.Accept
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Accept*
        name: Accept
        nameWithType: IOwinRequest.Accept
        qualifiedName: Microsoft.Owin.IOwinRequest.Accept
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Accept
  System.IO.Stream:
    name:
      CSharp:
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
      VB:
      - id: System.IO.Stream
        name: Stream
        nameWithType: Stream
        qualifiedName: System.IO.Stream
        isExternal: true
    isDefinition: true
    parent: System.IO
    commentId: T:System.IO.Stream
  Microsoft.Owin.IOwinRequest.Body*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Body*
        name: Body
        nameWithType: IOwinRequest.Body
        qualifiedName: Microsoft.Owin.IOwinRequest.Body
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Body*
        name: Body
        nameWithType: IOwinRequest.Body
        qualifiedName: Microsoft.Owin.IOwinRequest.Body
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.Body
  System.Threading:
    name:
      CSharp:
      - name: System.Threading
        nameWithType: System.Threading
        qualifiedName: System.Threading
      VB:
      - name: System.Threading
        nameWithType: System.Threading
        qualifiedName: System.Threading
    isDefinition: true
    commentId: N:System.Threading
  System.Threading.CancellationToken:
    name:
      CSharp:
      - id: System.Threading.CancellationToken
        name: CancellationToken
        nameWithType: CancellationToken
        qualifiedName: System.Threading.CancellationToken
        isExternal: true
      VB:
      - id: System.Threading.CancellationToken
        name: CancellationToken
        nameWithType: CancellationToken
        qualifiedName: System.Threading.CancellationToken
        isExternal: true
    isDefinition: true
    parent: System.Threading
    commentId: T:System.Threading.CancellationToken
  Microsoft.Owin.IOwinRequest.CallCancelled*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.CallCancelled*
        name: CallCancelled
        nameWithType: IOwinRequest.CallCancelled
        qualifiedName: Microsoft.Owin.IOwinRequest.CallCancelled
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.CallCancelled*
        name: CallCancelled
        nameWithType: IOwinRequest.CallCancelled
        qualifiedName: Microsoft.Owin.IOwinRequest.CallCancelled
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.CallCancelled
  Microsoft.Owin.IOwinRequest.LocalIpAddress*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.LocalIpAddress*
        name: LocalIpAddress
        nameWithType: IOwinRequest.LocalIpAddress
        qualifiedName: Microsoft.Owin.IOwinRequest.LocalIpAddress
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.LocalIpAddress*
        name: LocalIpAddress
        nameWithType: IOwinRequest.LocalIpAddress
        qualifiedName: Microsoft.Owin.IOwinRequest.LocalIpAddress
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.LocalIpAddress
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{System.Int32}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.Int32}
  Microsoft.Owin.IOwinRequest.LocalPort*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.LocalPort*
        name: LocalPort
        nameWithType: IOwinRequest.LocalPort
        qualifiedName: Microsoft.Owin.IOwinRequest.LocalPort
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.LocalPort*
        name: LocalPort
        nameWithType: IOwinRequest.LocalPort
        qualifiedName: Microsoft.Owin.IOwinRequest.LocalPort
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.LocalPort
  Microsoft.Owin.IOwinRequest.RemoteIpAddress*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.RemoteIpAddress*
        name: RemoteIpAddress
        nameWithType: IOwinRequest.RemoteIpAddress
        qualifiedName: Microsoft.Owin.IOwinRequest.RemoteIpAddress
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.RemoteIpAddress*
        name: RemoteIpAddress
        nameWithType: IOwinRequest.RemoteIpAddress
        qualifiedName: Microsoft.Owin.IOwinRequest.RemoteIpAddress
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.RemoteIpAddress
  Microsoft.Owin.IOwinRequest.RemotePort*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.RemotePort*
        name: RemotePort
        nameWithType: IOwinRequest.RemotePort
        qualifiedName: Microsoft.Owin.IOwinRequest.RemotePort
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.RemotePort*
        name: RemotePort
        nameWithType: IOwinRequest.RemotePort
        qualifiedName: Microsoft.Owin.IOwinRequest.RemotePort
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.RemotePort
  System.Security.Principal:
    name:
      CSharp:
      - name: System.Security.Principal
        nameWithType: System.Security.Principal
        qualifiedName: System.Security.Principal
      VB:
      - name: System.Security.Principal
        nameWithType: System.Security.Principal
        qualifiedName: System.Security.Principal
    isDefinition: true
    commentId: N:System.Security.Principal
  System.Security.Principal.IPrincipal:
    name:
      CSharp:
      - id: System.Security.Principal.IPrincipal
        name: IPrincipal
        nameWithType: IPrincipal
        qualifiedName: System.Security.Principal.IPrincipal
        isExternal: true
      VB:
      - id: System.Security.Principal.IPrincipal
        name: IPrincipal
        nameWithType: IPrincipal
        qualifiedName: System.Security.Principal.IPrincipal
        isExternal: true
    isDefinition: true
    parent: System.Security.Principal
    commentId: T:System.Security.Principal.IPrincipal
  Microsoft.Owin.IOwinRequest.User*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.User*
        name: User
        nameWithType: IOwinRequest.User
        qualifiedName: Microsoft.Owin.IOwinRequest.User
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.User*
        name: User
        nameWithType: IOwinRequest.User
        qualifiedName: Microsoft.Owin.IOwinRequest.User
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinRequest.User
  System.Action`1:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Action`1
  System.Action{System.Object}:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Action`1
    parent: System
    commentId: T:System.Action{System.Object}
  Microsoft.Owin.IOwinResponse.OnSendingHeaders*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.OnSendingHeaders*
        name: OnSendingHeaders
        nameWithType: IOwinResponse.OnSendingHeaders
        qualifiedName: Microsoft.Owin.IOwinResponse.OnSendingHeaders
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.OnSendingHeaders*
        name: OnSendingHeaders
        nameWithType: IOwinResponse.OnSendingHeaders
        qualifiedName: Microsoft.Owin.IOwinResponse.OnSendingHeaders
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.OnSendingHeaders
  Microsoft.Owin.IOwinResponse.Redirect*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Redirect*
        name: Redirect
        nameWithType: IOwinResponse.Redirect
        qualifiedName: Microsoft.Owin.IOwinResponse.Redirect
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Redirect*
        name: Redirect
        nameWithType: IOwinResponse.Redirect
        qualifiedName: Microsoft.Owin.IOwinResponse.Redirect
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.Redirect
  Microsoft.Owin.IOwinResponse.Write*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Write*
        name: Write
        nameWithType: IOwinResponse.Write
        qualifiedName: Microsoft.Owin.IOwinResponse.Write
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Write*
        name: Write
        nameWithType: IOwinResponse.Write
        qualifiedName: Microsoft.Owin.IOwinResponse.Write
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.Write
  System.Byte[]:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.Threading.Tasks.Task:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      VB:
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
    isDefinition: true
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task
  Microsoft.Owin.IOwinResponse.WriteAsync*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.WriteAsync*
        name: WriteAsync
        nameWithType: IOwinResponse.WriteAsync
        qualifiedName: Microsoft.Owin.IOwinResponse.WriteAsync
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.WriteAsync*
        name: WriteAsync
        nameWithType: IOwinResponse.WriteAsync
        qualifiedName: Microsoft.Owin.IOwinResponse.WriteAsync
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.WriteAsync
  Microsoft.Owin.IOwinResponse.Get*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Get*
        name: Get
        nameWithType: IOwinResponse.Get
        qualifiedName: Microsoft.Owin.IOwinResponse.Get
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Get*
        name: Get
        nameWithType: IOwinResponse.Get
        qualifiedName: Microsoft.Owin.IOwinResponse.Get
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.Get
  Microsoft.Owin.IOwinResponse.Set*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Set*
        name: Set
        nameWithType: IOwinResponse.Set
        qualifiedName: Microsoft.Owin.IOwinResponse.Set
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Set*
        name: Set
        nameWithType: IOwinResponse.Set
        qualifiedName: Microsoft.Owin.IOwinResponse.Set
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.Set
  Microsoft.Owin.IOwinResponse.Environment*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Environment*
        name: Environment
        nameWithType: IOwinResponse.Environment
        qualifiedName: Microsoft.Owin.IOwinResponse.Environment
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Environment*
        name: Environment
        nameWithType: IOwinResponse.Environment
        qualifiedName: Microsoft.Owin.IOwinResponse.Environment
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.Environment
  Microsoft.Owin.IOwinResponse.Context*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Context*
        name: Context
        nameWithType: IOwinResponse.Context
        qualifiedName: Microsoft.Owin.IOwinResponse.Context
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Context*
        name: Context
        nameWithType: IOwinResponse.Context
        qualifiedName: Microsoft.Owin.IOwinResponse.Context
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.Context
  Microsoft.Owin.IOwinResponse.StatusCode*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.StatusCode*
        name: StatusCode
        nameWithType: IOwinResponse.StatusCode
        qualifiedName: Microsoft.Owin.IOwinResponse.StatusCode
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.StatusCode*
        name: StatusCode
        nameWithType: IOwinResponse.StatusCode
        qualifiedName: Microsoft.Owin.IOwinResponse.StatusCode
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.StatusCode
  Microsoft.Owin.IOwinResponse.ReasonPhrase*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.ReasonPhrase*
        name: ReasonPhrase
        nameWithType: IOwinResponse.ReasonPhrase
        qualifiedName: Microsoft.Owin.IOwinResponse.ReasonPhrase
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.ReasonPhrase*
        name: ReasonPhrase
        nameWithType: IOwinResponse.ReasonPhrase
        qualifiedName: Microsoft.Owin.IOwinResponse.ReasonPhrase
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.ReasonPhrase
  Microsoft.Owin.IOwinResponse.Protocol*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Protocol*
        name: Protocol
        nameWithType: IOwinResponse.Protocol
        qualifiedName: Microsoft.Owin.IOwinResponse.Protocol
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Protocol*
        name: Protocol
        nameWithType: IOwinResponse.Protocol
        qualifiedName: Microsoft.Owin.IOwinResponse.Protocol
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.Protocol
  Microsoft.Owin.IOwinResponse.Headers*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Headers*
        name: Headers
        nameWithType: IOwinResponse.Headers
        qualifiedName: Microsoft.Owin.IOwinResponse.Headers
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Headers*
        name: Headers
        nameWithType: IOwinResponse.Headers
        qualifiedName: Microsoft.Owin.IOwinResponse.Headers
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.Headers
  Microsoft.Owin.ResponseCookieCollection:
    name:
      CSharp:
      - id: Microsoft.Owin.ResponseCookieCollection
        name: ResponseCookieCollection
        nameWithType: ResponseCookieCollection
        qualifiedName: Microsoft.Owin.ResponseCookieCollection
        isExternal: true
      VB:
      - id: Microsoft.Owin.ResponseCookieCollection
        name: ResponseCookieCollection
        nameWithType: ResponseCookieCollection
        qualifiedName: Microsoft.Owin.ResponseCookieCollection
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.ResponseCookieCollection
  Microsoft.Owin.IOwinResponse.Cookies*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Cookies*
        name: Cookies
        nameWithType: IOwinResponse.Cookies
        qualifiedName: Microsoft.Owin.IOwinResponse.Cookies
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Cookies*
        name: Cookies
        nameWithType: IOwinResponse.Cookies
        qualifiedName: Microsoft.Owin.IOwinResponse.Cookies
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.Cookies
  System.Nullable{System.Int64}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.Int64}
  Microsoft.Owin.IOwinResponse.ContentLength*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.ContentLength*
        name: ContentLength
        nameWithType: IOwinResponse.ContentLength
        qualifiedName: Microsoft.Owin.IOwinResponse.ContentLength
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.ContentLength*
        name: ContentLength
        nameWithType: IOwinResponse.ContentLength
        qualifiedName: Microsoft.Owin.IOwinResponse.ContentLength
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.ContentLength
  Microsoft.Owin.IOwinResponse.ContentType*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.ContentType*
        name: ContentType
        nameWithType: IOwinResponse.ContentType
        qualifiedName: Microsoft.Owin.IOwinResponse.ContentType
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.ContentType*
        name: ContentType
        nameWithType: IOwinResponse.ContentType
        qualifiedName: Microsoft.Owin.IOwinResponse.ContentType
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.ContentType
  System.Nullable{System.DateTimeOffset}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.DateTimeOffset}
  Microsoft.Owin.IOwinResponse.Expires*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Expires*
        name: Expires
        nameWithType: IOwinResponse.Expires
        qualifiedName: Microsoft.Owin.IOwinResponse.Expires
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Expires*
        name: Expires
        nameWithType: IOwinResponse.Expires
        qualifiedName: Microsoft.Owin.IOwinResponse.Expires
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.Expires
  Microsoft.Owin.IOwinResponse.ETag*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.ETag*
        name: ETag
        nameWithType: IOwinResponse.ETag
        qualifiedName: Microsoft.Owin.IOwinResponse.ETag
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.ETag*
        name: ETag
        nameWithType: IOwinResponse.ETag
        qualifiedName: Microsoft.Owin.IOwinResponse.ETag
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.ETag
  Microsoft.Owin.IOwinResponse.Body*:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Body*
        name: Body
        nameWithType: IOwinResponse.Body
        qualifiedName: Microsoft.Owin.IOwinResponse.Body
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Body*
        name: Body
        nameWithType: IOwinResponse.Body
        qualifiedName: Microsoft.Owin.IOwinResponse.Body
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.IOwinResponse.Body
  System.Attribute:
    name:
      CSharp:
      - id: System.Attribute
        name: Attribute
        nameWithType: Attribute
        qualifiedName: System.Attribute
        isExternal: true
      VB:
      - id: System.Attribute
        name: Attribute
        nameWithType: Attribute
        qualifiedName: System.Attribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Attribute
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: System.Reflection.MemberInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.ParameterInfo
        name: ParameterInfo
        nameWithType: ParameterInfo
        qualifiedName: System.Reflection.ParameterInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.Module):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Module
        name: Module
        nameWithType: Module
        qualifiedName: System.Reflection.Module
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
        name: GetCustomAttributes
        nameWithType: Attribute.GetCustomAttributes
        qualifiedName: System.Attribute.GetCustomAttributes
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  System.Attribute.IsDefined(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
        name: IsDefined
        nameWithType: Attribute.IsDefined
        qualifiedName: System.Attribute.IsDefined
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean):
    name:
      CSharp:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
        name: GetCustomAttribute
        nameWithType: Attribute.GetCustomAttribute
        qualifiedName: System.Attribute.GetCustomAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Reflection.Assembly
        name: Assembly
        nameWithType: Assembly
        qualifiedName: System.Reflection.Assembly
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  System.Attribute.Equals(System.Object):
    name:
      CSharp:
      - id: System.Attribute.Equals(System.Object)
        name: Equals
        nameWithType: Attribute.Equals
        qualifiedName: System.Attribute.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.Equals(System.Object)
        name: Equals
        nameWithType: Attribute.Equals
        qualifiedName: System.Attribute.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.Equals(System.Object)
  System.Attribute.GetHashCode:
    name:
      CSharp:
      - id: System.Attribute.GetHashCode
        name: GetHashCode
        nameWithType: Attribute.GetHashCode
        qualifiedName: System.Attribute.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.GetHashCode
        name: GetHashCode
        nameWithType: Attribute.GetHashCode
        qualifiedName: System.Attribute.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.GetHashCode
  System.Attribute.Match(System.Object):
    name:
      CSharp:
      - id: System.Attribute.Match(System.Object)
        name: Match
        nameWithType: Attribute.Match
        qualifiedName: System.Attribute.Match
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.Match(System.Object)
        name: Match
        nameWithType: Attribute.Match
        qualifiedName: System.Attribute.Match
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.Match(System.Object)
  System.Attribute.IsDefaultAttribute:
    name:
      CSharp:
      - id: System.Attribute.IsDefaultAttribute
        name: IsDefaultAttribute
        nameWithType: Attribute.IsDefaultAttribute
        qualifiedName: System.Attribute.IsDefaultAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.IsDefaultAttribute
        name: IsDefaultAttribute
        nameWithType: Attribute.IsDefaultAttribute
        qualifiedName: System.Attribute.IsDefaultAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.IsDefaultAttribute
  System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@):
    name:
      CSharp:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
        name: _Attribute.GetTypeInfoCount
        nameWithType: Attribute._Attribute.GetTypeInfoCount
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
        name: System.Runtime.InteropServices._Attribute.GetTypeInfoCount
        nameWithType: Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr):
    name:
      CSharp:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
        name: _Attribute.GetTypeInfo
        nameWithType: Attribute._Attribute.GetTypeInfo
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
        name: System.Runtime.InteropServices._Attribute.GetTypeInfo
        nameWithType: Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  ? System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  : name:
      CSharp:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
        name: _Attribute.GetIDsOfNames
        nameWithType: Attribute._Attribute.GetIDsOfNames
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
        name: System.Runtime.InteropServices._Attribute.GetIDsOfNames
        nameWithType: Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  ? System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  : name:
      CSharp:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
        name: _Attribute.Invoke
        nameWithType: Attribute._Attribute.Invoke
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.Invoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int16
        name: Int16
        nameWithType: Int16
        qualifiedName: System.Int16
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
        name: System.Runtime.InteropServices._Attribute.Invoke
        nameWithType: Attribute.System.Runtime.InteropServices._Attribute.Invoke
        qualifiedName: System.Attribute.System.Runtime.InteropServices._Attribute.Invoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int16
        name: Int16
        nameWithType: Int16
        qualifiedName: System.Int16
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Attribute
    commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  System.Attribute.TypeId:
    name:
      CSharp:
      - id: System.Attribute.TypeId
        name: TypeId
        nameWithType: Attribute.TypeId
        qualifiedName: System.Attribute.TypeId
        isExternal: true
      VB:
      - id: System.Attribute.TypeId
        name: TypeId
        nameWithType: Attribute.TypeId
        qualifiedName: System.Attribute.TypeId
        isExternal: true
    isDefinition: true
    parent: System.Attribute
    commentId: P:System.Attribute.TypeId
  System.Runtime.InteropServices:
    name:
      CSharp:
      - name: System.Runtime.InteropServices
        nameWithType: System.Runtime.InteropServices
        qualifiedName: System.Runtime.InteropServices
      VB:
      - name: System.Runtime.InteropServices
        nameWithType: System.Runtime.InteropServices
        qualifiedName: System.Runtime.InteropServices
    isDefinition: true
    commentId: N:System.Runtime.InteropServices
  System.Runtime.InteropServices._Attribute:
    name:
      CSharp:
      - id: System.Runtime.InteropServices._Attribute
        name: _Attribute
        nameWithType: _Attribute
        qualifiedName: System.Runtime.InteropServices._Attribute
        isExternal: true
      VB:
      - id: System.Runtime.InteropServices._Attribute
        name: _Attribute
        nameWithType: _Attribute
        qualifiedName: System.Runtime.InteropServices._Attribute
        isExternal: true
    isDefinition: true
    parent: System.Runtime.InteropServices
    commentId: T:System.Runtime.InteropServices._Attribute
  System.Type:
    name:
      CSharp:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      VB:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Type
  Microsoft.Owin.OwinStartupAttribute.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinStartupAttribute.#ctor*
        name: OwinStartupAttribute
        nameWithType: OwinStartupAttribute.OwinStartupAttribute
        qualifiedName: Microsoft.Owin.OwinStartupAttribute.OwinStartupAttribute
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinStartupAttribute.#ctor*
        name: OwinStartupAttribute
        nameWithType: OwinStartupAttribute.OwinStartupAttribute
        qualifiedName: Microsoft.Owin.OwinStartupAttribute.OwinStartupAttribute
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinStartupAttribute.#ctor
  Microsoft.Owin.OwinStartupAttribute.FriendlyName*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinStartupAttribute.FriendlyName*
        name: FriendlyName
        nameWithType: OwinStartupAttribute.FriendlyName
        qualifiedName: Microsoft.Owin.OwinStartupAttribute.FriendlyName
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinStartupAttribute.FriendlyName*
        name: FriendlyName
        nameWithType: OwinStartupAttribute.FriendlyName
        qualifiedName: Microsoft.Owin.OwinStartupAttribute.FriendlyName
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinStartupAttribute.FriendlyName
  Microsoft.Owin.OwinStartupAttribute.StartupType*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinStartupAttribute.StartupType*
        name: StartupType
        nameWithType: OwinStartupAttribute.StartupType
        qualifiedName: Microsoft.Owin.OwinStartupAttribute.StartupType
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinStartupAttribute.StartupType*
        name: StartupType
        nameWithType: OwinStartupAttribute.StartupType
        qualifiedName: Microsoft.Owin.OwinStartupAttribute.StartupType
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinStartupAttribute.StartupType
  Microsoft.Owin.OwinStartupAttribute.MethodName*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinStartupAttribute.MethodName*
        name: MethodName
        nameWithType: OwinStartupAttribute.MethodName
        qualifiedName: Microsoft.Owin.OwinStartupAttribute.MethodName
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinStartupAttribute.MethodName*
        name: MethodName
        nameWithType: OwinStartupAttribute.MethodName
        qualifiedName: Microsoft.Owin.OwinStartupAttribute.MethodName
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinStartupAttribute.MethodName
  Microsoft.Owin.OwinStartupAttribute:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinStartupAttribute
        name: OwinStartupAttribute
        nameWithType: OwinStartupAttribute
        qualifiedName: Microsoft.Owin.OwinStartupAttribute
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinStartupAttribute
        name: OwinStartupAttribute
        nameWithType: OwinStartupAttribute
        qualifiedName: Microsoft.Owin.OwinStartupAttribute
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.OwinStartupAttribute
  System.AttributeUsageAttribute:
    name:
      CSharp:
      - id: System.AttributeUsageAttribute
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute
        isExternal: true
      VB:
      - id: System.AttributeUsageAttribute
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.AttributeUsageAttribute
  System.AttributeUsageAttribute.#ctor(System.AttributeTargets):
    name:
      CSharp:
      - id: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute.AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute.AttributeUsageAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
        name: AttributeUsageAttribute
        nameWithType: AttributeUsageAttribute.AttributeUsageAttribute
        qualifiedName: System.AttributeUsageAttribute.AttributeUsageAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.AttributeUsageAttribute
    commentId: M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
  System.AttributeTargets:
    name:
      CSharp:
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
      VB:
      - id: System.AttributeTargets
        name: AttributeTargets
        nameWithType: AttributeTargets
        qualifiedName: System.AttributeTargets
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.AttributeTargets
  Microsoft.Owin.OwinContext.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinContext.#ctor*
        name: OwinContext
        nameWithType: OwinContext.OwinContext
        qualifiedName: Microsoft.Owin.OwinContext.OwinContext
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinContext.#ctor*
        name: OwinContext
        nameWithType: OwinContext.OwinContext
        qualifiedName: Microsoft.Owin.OwinContext.OwinContext
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinContext.#ctor
  Microsoft.Owin.OwinContext.Get*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinContext.Get*
        name: Get
        nameWithType: OwinContext.Get
        qualifiedName: Microsoft.Owin.OwinContext.Get
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinContext.Get*
        name: Get
        nameWithType: OwinContext.Get
        qualifiedName: Microsoft.Owin.OwinContext.Get
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinContext.Get
  Microsoft.Owin.IOwinContext.Get``1(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.Get``1(System.String)
        name: Get<T>
        nameWithType: IOwinContext.Get<T>
        qualifiedName: Microsoft.Owin.IOwinContext.Get<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinContext.Get``1(System.String)
        name: Get(Of T)
        nameWithType: IOwinContext.Get(Of T)
        qualifiedName: Microsoft.Owin.IOwinContext.Get(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IOwinContext
    commentId: M:Microsoft.Owin.IOwinContext.Get``1(System.String)
  Microsoft.Owin.OwinContext.Set*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinContext.Set*
        name: Set
        nameWithType: OwinContext.Set
        qualifiedName: Microsoft.Owin.OwinContext.Set
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinContext.Set*
        name: Set
        nameWithType: OwinContext.Set
        qualifiedName: Microsoft.Owin.OwinContext.Set
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinContext.Set
  Microsoft.Owin.IOwinContext.Set``1(System.String,``0):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.Set``1(System.String,``0)
        name: Set<T>
        nameWithType: IOwinContext.Set<T>
        qualifiedName: Microsoft.Owin.IOwinContext.Set<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinContext.Set``1(System.String,``0)
        name: Set(Of T)
        nameWithType: IOwinContext.Set(Of T)
        qualifiedName: Microsoft.Owin.IOwinContext.Set(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.Owin.IOwinContext.Set``1(System.String,``0)
  Microsoft.Owin.IOwinContext.Set``1(System.String,{T}):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.Set``1(System.String,``0)
        name: Set<T>
        nameWithType: IOwinContext.Set<T>
        qualifiedName: Microsoft.Owin.IOwinContext.Set<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinContext.Set``1(System.String,``0)
        name: Set(Of T)
        nameWithType: IOwinContext.Set(Of T)
        qualifiedName: Microsoft.Owin.IOwinContext.Set(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Owin.IOwinContext.Set``1(System.String,``0)
    parent: Microsoft.Owin.IOwinContext
    commentId: M:Microsoft.Owin.IOwinContext.Set``1(System.String,``0)
  Microsoft.Owin.OwinContext.Request*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinContext.Request*
        name: Request
        nameWithType: OwinContext.Request
        qualifiedName: Microsoft.Owin.OwinContext.Request
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinContext.Request*
        name: Request
        nameWithType: OwinContext.Request
        qualifiedName: Microsoft.Owin.OwinContext.Request
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinContext.Request
  Microsoft.Owin.IOwinContext.Request:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.Request
        name: Request
        nameWithType: IOwinContext.Request
        qualifiedName: Microsoft.Owin.IOwinContext.Request
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinContext.Request
        name: Request
        nameWithType: IOwinContext.Request
        qualifiedName: Microsoft.Owin.IOwinContext.Request
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinContext
    commentId: P:Microsoft.Owin.IOwinContext.Request
  Microsoft.Owin.OwinContext.Response*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinContext.Response*
        name: Response
        nameWithType: OwinContext.Response
        qualifiedName: Microsoft.Owin.OwinContext.Response
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinContext.Response*
        name: Response
        nameWithType: OwinContext.Response
        qualifiedName: Microsoft.Owin.OwinContext.Response
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinContext.Response
  Microsoft.Owin.IOwinContext.Response:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.Response
        name: Response
        nameWithType: IOwinContext.Response
        qualifiedName: Microsoft.Owin.IOwinContext.Response
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinContext.Response
        name: Response
        nameWithType: IOwinContext.Response
        qualifiedName: Microsoft.Owin.IOwinContext.Response
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinContext
    commentId: P:Microsoft.Owin.IOwinContext.Response
  Microsoft.Owin.OwinContext.Authentication*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinContext.Authentication*
        name: Authentication
        nameWithType: OwinContext.Authentication
        qualifiedName: Microsoft.Owin.OwinContext.Authentication
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinContext.Authentication*
        name: Authentication
        nameWithType: OwinContext.Authentication
        qualifiedName: Microsoft.Owin.OwinContext.Authentication
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinContext.Authentication
  Microsoft.Owin.IOwinContext.Authentication:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.Authentication
        name: Authentication
        nameWithType: IOwinContext.Authentication
        qualifiedName: Microsoft.Owin.IOwinContext.Authentication
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinContext.Authentication
        name: Authentication
        nameWithType: IOwinContext.Authentication
        qualifiedName: Microsoft.Owin.IOwinContext.Authentication
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinContext
    commentId: P:Microsoft.Owin.IOwinContext.Authentication
  Microsoft.Owin.OwinContext.Environment*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinContext.Environment*
        name: Environment
        nameWithType: OwinContext.Environment
        qualifiedName: Microsoft.Owin.OwinContext.Environment
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinContext.Environment*
        name: Environment
        nameWithType: OwinContext.Environment
        qualifiedName: Microsoft.Owin.OwinContext.Environment
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinContext.Environment
  Microsoft.Owin.IOwinContext.Environment:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.Environment
        name: Environment
        nameWithType: IOwinContext.Environment
        qualifiedName: Microsoft.Owin.IOwinContext.Environment
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinContext.Environment
        name: Environment
        nameWithType: IOwinContext.Environment
        qualifiedName: Microsoft.Owin.IOwinContext.Environment
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinContext
    commentId: P:Microsoft.Owin.IOwinContext.Environment
  Microsoft.Owin.OwinContext.TraceOutput*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinContext.TraceOutput*
        name: TraceOutput
        nameWithType: OwinContext.TraceOutput
        qualifiedName: Microsoft.Owin.OwinContext.TraceOutput
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinContext.TraceOutput*
        name: TraceOutput
        nameWithType: OwinContext.TraceOutput
        qualifiedName: Microsoft.Owin.OwinContext.TraceOutput
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinContext.TraceOutput
  Microsoft.Owin.IOwinContext.TraceOutput:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinContext.TraceOutput
        name: TraceOutput
        nameWithType: IOwinContext.TraceOutput
        qualifiedName: Microsoft.Owin.IOwinContext.TraceOutput
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinContext.TraceOutput
        name: TraceOutput
        nameWithType: IOwinContext.TraceOutput
        qualifiedName: Microsoft.Owin.IOwinContext.TraceOutput
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinContext
    commentId: P:Microsoft.Owin.IOwinContext.TraceOutput
  Microsoft.Owin.OwinContext:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinContext
        name: OwinContext
        nameWithType: OwinContext
        qualifiedName: Microsoft.Owin.OwinContext
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinContext
        name: OwinContext
        nameWithType: OwinContext
        qualifiedName: Microsoft.Owin.OwinContext
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.OwinContext
  System.IEquatable{Microsoft.Owin.PathString}:
    name:
      CSharp:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.PathString
        name: PathString
        nameWithType: PathString
        qualifiedName: Microsoft.Owin.PathString
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.PathString
        name: PathString
        nameWithType: PathString
        qualifiedName: Microsoft.Owin.PathString
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IEquatable`1
    parent: System
    commentId: T:System.IEquatable{Microsoft.Owin.PathString}
  Microsoft.Owin.PathString.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.PathString.#ctor*
        name: PathString
        nameWithType: PathString.PathString
        qualifiedName: Microsoft.Owin.PathString.PathString
        isExternal: true
      VB:
      - id: Microsoft.Owin.PathString.#ctor*
        name: PathString
        nameWithType: PathString.PathString
        qualifiedName: Microsoft.Owin.PathString.PathString
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.PathString.#ctor
  Microsoft.Owin.PathString.ToString*:
    name:
      CSharp:
      - id: Microsoft.Owin.PathString.ToString*
        name: ToString
        nameWithType: PathString.ToString
        qualifiedName: Microsoft.Owin.PathString.ToString
        isExternal: true
      VB:
      - id: Microsoft.Owin.PathString.ToString*
        name: ToString
        nameWithType: PathString.ToString
        qualifiedName: Microsoft.Owin.PathString.ToString
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.PathString.ToString
  Microsoft.Owin.PathString.ToUriComponent*:
    name:
      CSharp:
      - id: Microsoft.Owin.PathString.ToUriComponent*
        name: ToUriComponent
        nameWithType: PathString.ToUriComponent
        qualifiedName: Microsoft.Owin.PathString.ToUriComponent
        isExternal: true
      VB:
      - id: Microsoft.Owin.PathString.ToUriComponent*
        name: ToUriComponent
        nameWithType: PathString.ToUriComponent
        qualifiedName: Microsoft.Owin.PathString.ToUriComponent
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.PathString.ToUriComponent
  Microsoft.Owin.PathString.FromUriComponent*:
    name:
      CSharp:
      - id: Microsoft.Owin.PathString.FromUriComponent*
        name: FromUriComponent
        nameWithType: PathString.FromUriComponent
        qualifiedName: Microsoft.Owin.PathString.FromUriComponent
        isExternal: true
      VB:
      - id: Microsoft.Owin.PathString.FromUriComponent*
        name: FromUriComponent
        nameWithType: PathString.FromUriComponent
        qualifiedName: Microsoft.Owin.PathString.FromUriComponent
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.PathString.FromUriComponent
  Microsoft.Owin.PathString.StartsWithSegments*:
    name:
      CSharp:
      - id: Microsoft.Owin.PathString.StartsWithSegments*
        name: StartsWithSegments
        nameWithType: PathString.StartsWithSegments
        qualifiedName: Microsoft.Owin.PathString.StartsWithSegments
        isExternal: true
      VB:
      - id: Microsoft.Owin.PathString.StartsWithSegments*
        name: StartsWithSegments
        nameWithType: PathString.StartsWithSegments
        qualifiedName: Microsoft.Owin.PathString.StartsWithSegments
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.PathString.StartsWithSegments
  Microsoft.Owin.PathString.Add*:
    name:
      CSharp:
      - id: Microsoft.Owin.PathString.Add*
        name: Add
        nameWithType: PathString.Add
        qualifiedName: Microsoft.Owin.PathString.Add
        isExternal: true
      VB:
      - id: Microsoft.Owin.PathString.Add*
        name: Add
        nameWithType: PathString.Add
        qualifiedName: Microsoft.Owin.PathString.Add
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.PathString.Add
  Microsoft.Owin.PathString.Equals*:
    name:
      CSharp:
      - id: Microsoft.Owin.PathString.Equals*
        name: Equals
        nameWithType: PathString.Equals
        qualifiedName: Microsoft.Owin.PathString.Equals
        isExternal: true
      VB:
      - id: Microsoft.Owin.PathString.Equals*
        name: Equals
        nameWithType: PathString.Equals
        qualifiedName: Microsoft.Owin.PathString.Equals
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.PathString.Equals
  System.IEquatable{Microsoft.Owin.PathString}.Equals(Microsoft.Owin.PathString):
    name:
      CSharp:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable<PathString>.Equals
        qualifiedName: System.IEquatable<Microsoft.Owin.PathString>.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.PathString
        name: PathString
        nameWithType: PathString
        qualifiedName: Microsoft.Owin.PathString
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable(Of PathString).Equals
        qualifiedName: System.IEquatable(Of Microsoft.Owin.PathString).Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.PathString
        name: PathString
        nameWithType: PathString
        qualifiedName: Microsoft.Owin.PathString
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IEquatable`1.Equals(`0)
    parent: System.IEquatable{Microsoft.Owin.PathString}
    commentId: M:System.IEquatable{Microsoft.Owin.PathString}.Equals(Microsoft.Owin.PathString)
  System.StringComparison:
    name:
      CSharp:
      - id: System.StringComparison
        name: StringComparison
        nameWithType: StringComparison
        qualifiedName: System.StringComparison
        isExternal: true
      VB:
      - id: System.StringComparison
        name: StringComparison
        nameWithType: StringComparison
        qualifiedName: System.StringComparison
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.StringComparison
  Microsoft.Owin.PathString.GetHashCode*:
    name:
      CSharp:
      - id: Microsoft.Owin.PathString.GetHashCode*
        name: GetHashCode
        nameWithType: PathString.GetHashCode
        qualifiedName: Microsoft.Owin.PathString.GetHashCode
        isExternal: true
      VB:
      - id: Microsoft.Owin.PathString.GetHashCode*
        name: GetHashCode
        nameWithType: PathString.GetHashCode
        qualifiedName: Microsoft.Owin.PathString.GetHashCode
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.PathString.GetHashCode
  Microsoft.Owin.PathString.op_Equality*:
    name:
      CSharp:
      - id: Microsoft.Owin.PathString.op_Equality*
        name: Equality
        nameWithType: PathString.Equality
        qualifiedName: Microsoft.Owin.PathString.Equality
        isExternal: true
      VB:
      - id: Microsoft.Owin.PathString.op_Equality*
        name: Equality
        nameWithType: PathString.Equality
        qualifiedName: Microsoft.Owin.PathString.Equality
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.PathString.op_Equality
  Microsoft.Owin.PathString.op_Inequality*:
    name:
      CSharp:
      - id: Microsoft.Owin.PathString.op_Inequality*
        name: Inequality
        nameWithType: PathString.Inequality
        qualifiedName: Microsoft.Owin.PathString.Inequality
        isExternal: true
      VB:
      - id: Microsoft.Owin.PathString.op_Inequality*
        name: Inequality
        nameWithType: PathString.Inequality
        qualifiedName: Microsoft.Owin.PathString.Inequality
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.PathString.op_Inequality
  Microsoft.Owin.PathString.op_Addition*:
    name:
      CSharp:
      - id: Microsoft.Owin.PathString.op_Addition*
        name: Addition
        nameWithType: PathString.Addition
        qualifiedName: Microsoft.Owin.PathString.Addition
        isExternal: true
      VB:
      - id: Microsoft.Owin.PathString.op_Addition*
        name: Addition
        nameWithType: PathString.Addition
        qualifiedName: Microsoft.Owin.PathString.Addition
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.PathString.op_Addition
  Microsoft.Owin.PathString.Value*:
    name:
      CSharp:
      - id: Microsoft.Owin.PathString.Value*
        name: Value
        nameWithType: PathString.Value
        qualifiedName: Microsoft.Owin.PathString.Value
        isExternal: true
      VB:
      - id: Microsoft.Owin.PathString.Value*
        name: Value
        nameWithType: PathString.Value
        qualifiedName: Microsoft.Owin.PathString.Value
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.PathString.Value
  Microsoft.Owin.PathString.HasValue*:
    name:
      CSharp:
      - id: Microsoft.Owin.PathString.HasValue*
        name: HasValue
        nameWithType: PathString.HasValue
        qualifiedName: Microsoft.Owin.PathString.HasValue
        isExternal: true
      VB:
      - id: Microsoft.Owin.PathString.HasValue*
        name: HasValue
        nameWithType: PathString.HasValue
        qualifiedName: Microsoft.Owin.PathString.HasValue
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.PathString.HasValue
  System.IEquatable{Microsoft.Owin.QueryString}:
    name:
      CSharp:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.QueryString
        name: QueryString
        nameWithType: QueryString
        qualifiedName: Microsoft.Owin.QueryString
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: System.IEquatable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.QueryString
        name: QueryString
        nameWithType: QueryString
        qualifiedName: Microsoft.Owin.QueryString
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IEquatable`1
    parent: System
    commentId: T:System.IEquatable{Microsoft.Owin.QueryString}
  Microsoft.Owin.QueryString.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.QueryString.#ctor*
        name: QueryString
        nameWithType: QueryString.QueryString
        qualifiedName: Microsoft.Owin.QueryString.QueryString
        isExternal: true
      VB:
      - id: Microsoft.Owin.QueryString.#ctor*
        name: QueryString
        nameWithType: QueryString.QueryString
        qualifiedName: Microsoft.Owin.QueryString.QueryString
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.QueryString.#ctor
  Microsoft.Owin.QueryString.ToString*:
    name:
      CSharp:
      - id: Microsoft.Owin.QueryString.ToString*
        name: ToString
        nameWithType: QueryString.ToString
        qualifiedName: Microsoft.Owin.QueryString.ToString
        isExternal: true
      VB:
      - id: Microsoft.Owin.QueryString.ToString*
        name: ToString
        nameWithType: QueryString.ToString
        qualifiedName: Microsoft.Owin.QueryString.ToString
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.QueryString.ToString
  Microsoft.Owin.QueryString.ToUriComponent*:
    name:
      CSharp:
      - id: Microsoft.Owin.QueryString.ToUriComponent*
        name: ToUriComponent
        nameWithType: QueryString.ToUriComponent
        qualifiedName: Microsoft.Owin.QueryString.ToUriComponent
        isExternal: true
      VB:
      - id: Microsoft.Owin.QueryString.ToUriComponent*
        name: ToUriComponent
        nameWithType: QueryString.ToUriComponent
        qualifiedName: Microsoft.Owin.QueryString.ToUriComponent
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.QueryString.ToUriComponent
  Microsoft.Owin.QueryString.FromUriComponent*:
    name:
      CSharp:
      - id: Microsoft.Owin.QueryString.FromUriComponent*
        name: FromUriComponent
        nameWithType: QueryString.FromUriComponent
        qualifiedName: Microsoft.Owin.QueryString.FromUriComponent
        isExternal: true
      VB:
      - id: Microsoft.Owin.QueryString.FromUriComponent*
        name: FromUriComponent
        nameWithType: QueryString.FromUriComponent
        qualifiedName: Microsoft.Owin.QueryString.FromUriComponent
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.QueryString.FromUriComponent
  Microsoft.Owin.QueryString.Equals*:
    name:
      CSharp:
      - id: Microsoft.Owin.QueryString.Equals*
        name: Equals
        nameWithType: QueryString.Equals
        qualifiedName: Microsoft.Owin.QueryString.Equals
        isExternal: true
      VB:
      - id: Microsoft.Owin.QueryString.Equals*
        name: Equals
        nameWithType: QueryString.Equals
        qualifiedName: Microsoft.Owin.QueryString.Equals
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.QueryString.Equals
  System.IEquatable{Microsoft.Owin.QueryString}.Equals(Microsoft.Owin.QueryString):
    name:
      CSharp:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable<QueryString>.Equals
        qualifiedName: System.IEquatable<Microsoft.Owin.QueryString>.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.QueryString
        name: QueryString
        nameWithType: QueryString
        qualifiedName: Microsoft.Owin.QueryString
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.IEquatable`1.Equals(`0)
        name: Equals
        nameWithType: IEquatable(Of QueryString).Equals
        qualifiedName: System.IEquatable(Of Microsoft.Owin.QueryString).Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.QueryString
        name: QueryString
        nameWithType: QueryString
        qualifiedName: Microsoft.Owin.QueryString
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IEquatable`1.Equals(`0)
    parent: System.IEquatable{Microsoft.Owin.QueryString}
    commentId: M:System.IEquatable{Microsoft.Owin.QueryString}.Equals(Microsoft.Owin.QueryString)
  Microsoft.Owin.QueryString.GetHashCode*:
    name:
      CSharp:
      - id: Microsoft.Owin.QueryString.GetHashCode*
        name: GetHashCode
        nameWithType: QueryString.GetHashCode
        qualifiedName: Microsoft.Owin.QueryString.GetHashCode
        isExternal: true
      VB:
      - id: Microsoft.Owin.QueryString.GetHashCode*
        name: GetHashCode
        nameWithType: QueryString.GetHashCode
        qualifiedName: Microsoft.Owin.QueryString.GetHashCode
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.QueryString.GetHashCode
  Microsoft.Owin.QueryString.op_Equality*:
    name:
      CSharp:
      - id: Microsoft.Owin.QueryString.op_Equality*
        name: Equality
        nameWithType: QueryString.Equality
        qualifiedName: Microsoft.Owin.QueryString.Equality
        isExternal: true
      VB:
      - id: Microsoft.Owin.QueryString.op_Equality*
        name: Equality
        nameWithType: QueryString.Equality
        qualifiedName: Microsoft.Owin.QueryString.Equality
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.QueryString.op_Equality
  Microsoft.Owin.QueryString.op_Inequality*:
    name:
      CSharp:
      - id: Microsoft.Owin.QueryString.op_Inequality*
        name: Inequality
        nameWithType: QueryString.Inequality
        qualifiedName: Microsoft.Owin.QueryString.Inequality
        isExternal: true
      VB:
      - id: Microsoft.Owin.QueryString.op_Inequality*
        name: Inequality
        nameWithType: QueryString.Inequality
        qualifiedName: Microsoft.Owin.QueryString.Inequality
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.QueryString.op_Inequality
  Microsoft.Owin.QueryString.Value*:
    name:
      CSharp:
      - id: Microsoft.Owin.QueryString.Value*
        name: Value
        nameWithType: QueryString.Value
        qualifiedName: Microsoft.Owin.QueryString.Value
        isExternal: true
      VB:
      - id: Microsoft.Owin.QueryString.Value*
        name: Value
        nameWithType: QueryString.Value
        qualifiedName: Microsoft.Owin.QueryString.Value
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.QueryString.Value
  Microsoft.Owin.QueryString.HasValue*:
    name:
      CSharp:
      - id: Microsoft.Owin.QueryString.HasValue*
        name: HasValue
        nameWithType: QueryString.HasValue
        qualifiedName: Microsoft.Owin.QueryString.HasValue
        isExternal: true
      VB:
      - id: Microsoft.Owin.QueryString.HasValue*
        name: HasValue
        nameWithType: QueryString.HasValue
        qualifiedName: Microsoft.Owin.QueryString.HasValue
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.QueryString.HasValue
  System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  System.Collections.Generic.IDictionary{System.String,System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IDictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  Microsoft.Owin.RequestCookieCollection.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.RequestCookieCollection.#ctor*
        name: RequestCookieCollection
        nameWithType: RequestCookieCollection.RequestCookieCollection
        qualifiedName: Microsoft.Owin.RequestCookieCollection.RequestCookieCollection
        isExternal: true
      VB:
      - id: Microsoft.Owin.RequestCookieCollection.#ctor*
        name: RequestCookieCollection
        nameWithType: RequestCookieCollection.RequestCookieCollection
        qualifiedName: Microsoft.Owin.RequestCookieCollection.RequestCookieCollection
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.RequestCookieCollection.#ctor
  System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.String}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerator`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  Microsoft.Owin.RequestCookieCollection.GetEnumerator*:
    name:
      CSharp:
      - id: Microsoft.Owin.RequestCookieCollection.GetEnumerator*
        name: GetEnumerator
        nameWithType: RequestCookieCollection.GetEnumerator
        qualifiedName: Microsoft.Owin.RequestCookieCollection.GetEnumerator
        isExternal: true
      VB:
      - id: Microsoft.Owin.RequestCookieCollection.GetEnumerator*
        name: GetEnumerator
        nameWithType: RequestCookieCollection.GetEnumerator
        qualifiedName: Microsoft.Owin.RequestCookieCollection.GetEnumerator
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.RequestCookieCollection.GetEnumerator
  System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable<KeyValuePair<String, String>>.GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable(Of KeyValuePair(Of String, String)).GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)).GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
    parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}.GetEnumerator
  Microsoft.Owin.RequestCookieCollection.System#Collections#IEnumerable#GetEnumerator*:
    name:
      CSharp:
      - id: Microsoft.Owin.RequestCookieCollection.System#Collections#IEnumerable#GetEnumerator*
        name: IEnumerable.GetEnumerator
        nameWithType: RequestCookieCollection.IEnumerable.GetEnumerator
        qualifiedName: Microsoft.Owin.RequestCookieCollection.System.Collections.IEnumerable.GetEnumerator
        isExternal: true
      VB:
      - id: Microsoft.Owin.RequestCookieCollection.System#Collections#IEnumerable#GetEnumerator*
        name: System.Collections.IEnumerable.GetEnumerator
        nameWithType: RequestCookieCollection.System.Collections.IEnumerable.GetEnumerator
        qualifiedName: Microsoft.Owin.RequestCookieCollection.System.Collections.IEnumerable.GetEnumerator
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.RequestCookieCollection.System#Collections#IEnumerable#GetEnumerator
  Microsoft.Owin.RequestCookieCollection.Item*:
    name:
      CSharp:
      - id: Microsoft.Owin.RequestCookieCollection.Item*
        name: Item
        nameWithType: RequestCookieCollection.Item
        qualifiedName: Microsoft.Owin.RequestCookieCollection.Item
        isExternal: true
      VB:
      - id: Microsoft.Owin.RequestCookieCollection.Item*
        name: Item
        nameWithType: RequestCookieCollection.Item
        qualifiedName: Microsoft.Owin.RequestCookieCollection.Item
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.RequestCookieCollection.Item
  Microsoft.Owin.ResponseCookieCollection.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.ResponseCookieCollection.#ctor*
        name: ResponseCookieCollection
        nameWithType: ResponseCookieCollection.ResponseCookieCollection
        qualifiedName: Microsoft.Owin.ResponseCookieCollection.ResponseCookieCollection
        isExternal: true
      VB:
      - id: Microsoft.Owin.ResponseCookieCollection.#ctor*
        name: ResponseCookieCollection
        nameWithType: ResponseCookieCollection.ResponseCookieCollection
        qualifiedName: Microsoft.Owin.ResponseCookieCollection.ResponseCookieCollection
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.ResponseCookieCollection.#ctor
  Microsoft.Owin.ResponseCookieCollection.Append*:
    name:
      CSharp:
      - id: Microsoft.Owin.ResponseCookieCollection.Append*
        name: Append
        nameWithType: ResponseCookieCollection.Append
        qualifiedName: Microsoft.Owin.ResponseCookieCollection.Append
        isExternal: true
      VB:
      - id: Microsoft.Owin.ResponseCookieCollection.Append*
        name: Append
        nameWithType: ResponseCookieCollection.Append
        qualifiedName: Microsoft.Owin.ResponseCookieCollection.Append
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.ResponseCookieCollection.Append
  Microsoft.Owin.CookieOptions:
    name:
      CSharp:
      - id: Microsoft.Owin.CookieOptions
        name: CookieOptions
        nameWithType: CookieOptions
        qualifiedName: Microsoft.Owin.CookieOptions
        isExternal: true
      VB:
      - id: Microsoft.Owin.CookieOptions
        name: CookieOptions
        nameWithType: CookieOptions
        qualifiedName: Microsoft.Owin.CookieOptions
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.CookieOptions
  Microsoft.Owin.ResponseCookieCollection.Delete*:
    name:
      CSharp:
      - id: Microsoft.Owin.ResponseCookieCollection.Delete*
        name: Delete
        nameWithType: ResponseCookieCollection.Delete
        qualifiedName: Microsoft.Owin.ResponseCookieCollection.Delete
        isExternal: true
      VB:
      - id: Microsoft.Owin.ResponseCookieCollection.Delete*
        name: Delete
        nameWithType: ResponseCookieCollection.Delete
        qualifiedName: Microsoft.Owin.ResponseCookieCollection.Delete
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.ResponseCookieCollection.Delete
  Microsoft.Owin.CookieOptions.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.CookieOptions.#ctor*
        name: CookieOptions
        nameWithType: CookieOptions.CookieOptions
        qualifiedName: Microsoft.Owin.CookieOptions.CookieOptions
        isExternal: true
      VB:
      - id: Microsoft.Owin.CookieOptions.#ctor*
        name: CookieOptions
        nameWithType: CookieOptions.CookieOptions
        qualifiedName: Microsoft.Owin.CookieOptions.CookieOptions
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.CookieOptions.#ctor
  Microsoft.Owin.CookieOptions.Domain*:
    name:
      CSharp:
      - id: Microsoft.Owin.CookieOptions.Domain*
        name: Domain
        nameWithType: CookieOptions.Domain
        qualifiedName: Microsoft.Owin.CookieOptions.Domain
        isExternal: true
      VB:
      - id: Microsoft.Owin.CookieOptions.Domain*
        name: Domain
        nameWithType: CookieOptions.Domain
        qualifiedName: Microsoft.Owin.CookieOptions.Domain
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.CookieOptions.Domain
  Microsoft.Owin.CookieOptions.Path*:
    name:
      CSharp:
      - id: Microsoft.Owin.CookieOptions.Path*
        name: Path
        nameWithType: CookieOptions.Path
        qualifiedName: Microsoft.Owin.CookieOptions.Path
        isExternal: true
      VB:
      - id: Microsoft.Owin.CookieOptions.Path*
        name: Path
        nameWithType: CookieOptions.Path
        qualifiedName: Microsoft.Owin.CookieOptions.Path
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.CookieOptions.Path
  System.Nullable{System.DateTime}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.DateTime}
  Microsoft.Owin.CookieOptions.Expires*:
    name:
      CSharp:
      - id: Microsoft.Owin.CookieOptions.Expires*
        name: Expires
        nameWithType: CookieOptions.Expires
        qualifiedName: Microsoft.Owin.CookieOptions.Expires
        isExternal: true
      VB:
      - id: Microsoft.Owin.CookieOptions.Expires*
        name: Expires
        nameWithType: CookieOptions.Expires
        qualifiedName: Microsoft.Owin.CookieOptions.Expires
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.CookieOptions.Expires
  Microsoft.Owin.CookieOptions.Secure*:
    name:
      CSharp:
      - id: Microsoft.Owin.CookieOptions.Secure*
        name: Secure
        nameWithType: CookieOptions.Secure
        qualifiedName: Microsoft.Owin.CookieOptions.Secure
        isExternal: true
      VB:
      - id: Microsoft.Owin.CookieOptions.Secure*
        name: Secure
        nameWithType: CookieOptions.Secure
        qualifiedName: Microsoft.Owin.CookieOptions.Secure
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.CookieOptions.Secure
  Microsoft.Owin.CookieOptions.HttpOnly*:
    name:
      CSharp:
      - id: Microsoft.Owin.CookieOptions.HttpOnly*
        name: HttpOnly
        nameWithType: CookieOptions.HttpOnly
        qualifiedName: Microsoft.Owin.CookieOptions.HttpOnly
        isExternal: true
      VB:
      - id: Microsoft.Owin.CookieOptions.HttpOnly*
        name: HttpOnly
        nameWithType: CookieOptions.HttpOnly
        qualifiedName: Microsoft.Owin.CookieOptions.HttpOnly
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.CookieOptions.HttpOnly
  Microsoft.Owin.OwinMiddleware:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinMiddleware
        name: OwinMiddleware
        nameWithType: OwinMiddleware
        qualifiedName: Microsoft.Owin.OwinMiddleware
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinMiddleware
        name: OwinMiddleware
        nameWithType: OwinMiddleware
        qualifiedName: Microsoft.Owin.OwinMiddleware
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin
    commentId: T:Microsoft.Owin.OwinMiddleware
  Microsoft.Owin.OwinMiddleware.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinMiddleware.#ctor*
        name: OwinMiddleware
        nameWithType: OwinMiddleware.OwinMiddleware
        qualifiedName: Microsoft.Owin.OwinMiddleware.OwinMiddleware
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinMiddleware.#ctor*
        name: OwinMiddleware
        nameWithType: OwinMiddleware.OwinMiddleware
        qualifiedName: Microsoft.Owin.OwinMiddleware.OwinMiddleware
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinMiddleware.#ctor
  Microsoft.Owin.OwinMiddleware.Invoke*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinMiddleware.Invoke*
        name: Invoke
        nameWithType: OwinMiddleware.Invoke
        qualifiedName: Microsoft.Owin.OwinMiddleware.Invoke
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinMiddleware.Invoke*
        name: Invoke
        nameWithType: OwinMiddleware.Invoke
        qualifiedName: Microsoft.Owin.OwinMiddleware.Invoke
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinMiddleware.Invoke
  Microsoft.Owin.OwinMiddleware.Next*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinMiddleware.Next*
        name: Next
        nameWithType: OwinMiddleware.Next
        qualifiedName: Microsoft.Owin.OwinMiddleware.Next
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinMiddleware.Next*
        name: Next
        nameWithType: OwinMiddleware.Next
        qualifiedName: Microsoft.Owin.OwinMiddleware.Next
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinMiddleware.Next
  Microsoft.Owin.OwinRequest.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.#ctor*
        name: OwinRequest
        nameWithType: OwinRequest.OwinRequest
        qualifiedName: Microsoft.Owin.OwinRequest.OwinRequest
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.#ctor*
        name: OwinRequest
        nameWithType: OwinRequest.OwinRequest
        qualifiedName: Microsoft.Owin.OwinRequest.OwinRequest
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.#ctor
  Microsoft.Owin.OwinRequest.ReadFormAsync*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.ReadFormAsync*
        name: ReadFormAsync
        nameWithType: OwinRequest.ReadFormAsync
        qualifiedName: Microsoft.Owin.OwinRequest.ReadFormAsync
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.ReadFormAsync*
        name: ReadFormAsync
        nameWithType: OwinRequest.ReadFormAsync
        qualifiedName: Microsoft.Owin.OwinRequest.ReadFormAsync
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.ReadFormAsync
  Microsoft.Owin.IOwinRequest.ReadFormAsync:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.ReadFormAsync
        name: ReadFormAsync
        nameWithType: IOwinRequest.ReadFormAsync
        qualifiedName: Microsoft.Owin.IOwinRequest.ReadFormAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinRequest.ReadFormAsync
        name: ReadFormAsync
        nameWithType: IOwinRequest.ReadFormAsync
        qualifiedName: Microsoft.Owin.IOwinRequest.ReadFormAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: M:Microsoft.Owin.IOwinRequest.ReadFormAsync
  Microsoft.Owin.OwinRequest.Get*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Get*
        name: Get
        nameWithType: OwinRequest.Get
        qualifiedName: Microsoft.Owin.OwinRequest.Get
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Get*
        name: Get
        nameWithType: OwinRequest.Get
        qualifiedName: Microsoft.Owin.OwinRequest.Get
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Get
  Microsoft.Owin.IOwinRequest.Get``1(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Get``1(System.String)
        name: Get<T>
        nameWithType: IOwinRequest.Get<T>
        qualifiedName: Microsoft.Owin.IOwinRequest.Get<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinRequest.Get``1(System.String)
        name: Get(Of T)
        nameWithType: IOwinRequest.Get(Of T)
        qualifiedName: Microsoft.Owin.IOwinRequest.Get(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: M:Microsoft.Owin.IOwinRequest.Get``1(System.String)
  Microsoft.Owin.OwinRequest.Set*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Set*
        name: Set
        nameWithType: OwinRequest.Set
        qualifiedName: Microsoft.Owin.OwinRequest.Set
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Set*
        name: Set
        nameWithType: OwinRequest.Set
        qualifiedName: Microsoft.Owin.OwinRequest.Set
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Set
  Microsoft.Owin.IOwinRequest.Set``1(System.String,``0):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Set``1(System.String,``0)
        name: Set<T>
        nameWithType: IOwinRequest.Set<T>
        qualifiedName: Microsoft.Owin.IOwinRequest.Set<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinRequest.Set``1(System.String,``0)
        name: Set(Of T)
        nameWithType: IOwinRequest.Set(Of T)
        qualifiedName: Microsoft.Owin.IOwinRequest.Set(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.Owin.IOwinRequest.Set``1(System.String,``0)
  Microsoft.Owin.IOwinRequest.Set``1(System.String,{T}):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Set``1(System.String,``0)
        name: Set<T>
        nameWithType: IOwinRequest.Set<T>
        qualifiedName: Microsoft.Owin.IOwinRequest.Set<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinRequest.Set``1(System.String,``0)
        name: Set(Of T)
        nameWithType: IOwinRequest.Set(Of T)
        qualifiedName: Microsoft.Owin.IOwinRequest.Set(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Owin.IOwinRequest.Set``1(System.String,``0)
    parent: Microsoft.Owin.IOwinRequest
    commentId: M:Microsoft.Owin.IOwinRequest.Set``1(System.String,``0)
  Microsoft.Owin.OwinRequest.Environment*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Environment*
        name: Environment
        nameWithType: OwinRequest.Environment
        qualifiedName: Microsoft.Owin.OwinRequest.Environment
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Environment*
        name: Environment
        nameWithType: OwinRequest.Environment
        qualifiedName: Microsoft.Owin.OwinRequest.Environment
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Environment
  Microsoft.Owin.IOwinRequest.Environment:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Environment
        name: Environment
        nameWithType: IOwinRequest.Environment
        qualifiedName: Microsoft.Owin.IOwinRequest.Environment
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Environment
        name: Environment
        nameWithType: IOwinRequest.Environment
        qualifiedName: Microsoft.Owin.IOwinRequest.Environment
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.Environment
  Microsoft.Owin.OwinRequest.Context*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Context*
        name: Context
        nameWithType: OwinRequest.Context
        qualifiedName: Microsoft.Owin.OwinRequest.Context
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Context*
        name: Context
        nameWithType: OwinRequest.Context
        qualifiedName: Microsoft.Owin.OwinRequest.Context
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Context
  Microsoft.Owin.IOwinRequest.Context:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Context
        name: Context
        nameWithType: IOwinRequest.Context
        qualifiedName: Microsoft.Owin.IOwinRequest.Context
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Context
        name: Context
        nameWithType: IOwinRequest.Context
        qualifiedName: Microsoft.Owin.IOwinRequest.Context
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.Context
  Microsoft.Owin.OwinRequest.Method*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Method*
        name: Method
        nameWithType: OwinRequest.Method
        qualifiedName: Microsoft.Owin.OwinRequest.Method
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Method*
        name: Method
        nameWithType: OwinRequest.Method
        qualifiedName: Microsoft.Owin.OwinRequest.Method
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Method
  Microsoft.Owin.IOwinRequest.Method:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Method
        name: Method
        nameWithType: IOwinRequest.Method
        qualifiedName: Microsoft.Owin.IOwinRequest.Method
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Method
        name: Method
        nameWithType: IOwinRequest.Method
        qualifiedName: Microsoft.Owin.IOwinRequest.Method
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.Method
  Microsoft.Owin.OwinRequest.Scheme*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Scheme*
        name: Scheme
        nameWithType: OwinRequest.Scheme
        qualifiedName: Microsoft.Owin.OwinRequest.Scheme
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Scheme*
        name: Scheme
        nameWithType: OwinRequest.Scheme
        qualifiedName: Microsoft.Owin.OwinRequest.Scheme
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Scheme
  Microsoft.Owin.IOwinRequest.Scheme:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Scheme
        name: Scheme
        nameWithType: IOwinRequest.Scheme
        qualifiedName: Microsoft.Owin.IOwinRequest.Scheme
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Scheme
        name: Scheme
        nameWithType: IOwinRequest.Scheme
        qualifiedName: Microsoft.Owin.IOwinRequest.Scheme
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.Scheme
  Microsoft.Owin.OwinRequest.IsSecure*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.IsSecure*
        name: IsSecure
        nameWithType: OwinRequest.IsSecure
        qualifiedName: Microsoft.Owin.OwinRequest.IsSecure
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.IsSecure*
        name: IsSecure
        nameWithType: OwinRequest.IsSecure
        qualifiedName: Microsoft.Owin.OwinRequest.IsSecure
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.IsSecure
  Microsoft.Owin.IOwinRequest.IsSecure:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.IsSecure
        name: IsSecure
        nameWithType: IOwinRequest.IsSecure
        qualifiedName: Microsoft.Owin.IOwinRequest.IsSecure
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.IsSecure
        name: IsSecure
        nameWithType: IOwinRequest.IsSecure
        qualifiedName: Microsoft.Owin.IOwinRequest.IsSecure
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.IsSecure
  Microsoft.Owin.OwinRequest.Host*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Host*
        name: Host
        nameWithType: OwinRequest.Host
        qualifiedName: Microsoft.Owin.OwinRequest.Host
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Host*
        name: Host
        nameWithType: OwinRequest.Host
        qualifiedName: Microsoft.Owin.OwinRequest.Host
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Host
  Microsoft.Owin.IOwinRequest.Host:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Host
        name: Host
        nameWithType: IOwinRequest.Host
        qualifiedName: Microsoft.Owin.IOwinRequest.Host
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Host
        name: Host
        nameWithType: IOwinRequest.Host
        qualifiedName: Microsoft.Owin.IOwinRequest.Host
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.Host
  Microsoft.Owin.OwinRequest.PathBase*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.PathBase*
        name: PathBase
        nameWithType: OwinRequest.PathBase
        qualifiedName: Microsoft.Owin.OwinRequest.PathBase
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.PathBase*
        name: PathBase
        nameWithType: OwinRequest.PathBase
        qualifiedName: Microsoft.Owin.OwinRequest.PathBase
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.PathBase
  Microsoft.Owin.IOwinRequest.PathBase:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.PathBase
        name: PathBase
        nameWithType: IOwinRequest.PathBase
        qualifiedName: Microsoft.Owin.IOwinRequest.PathBase
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.PathBase
        name: PathBase
        nameWithType: IOwinRequest.PathBase
        qualifiedName: Microsoft.Owin.IOwinRequest.PathBase
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.PathBase
  Microsoft.Owin.OwinRequest.Path*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Path*
        name: Path
        nameWithType: OwinRequest.Path
        qualifiedName: Microsoft.Owin.OwinRequest.Path
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Path*
        name: Path
        nameWithType: OwinRequest.Path
        qualifiedName: Microsoft.Owin.OwinRequest.Path
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Path
  Microsoft.Owin.IOwinRequest.Path:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Path
        name: Path
        nameWithType: IOwinRequest.Path
        qualifiedName: Microsoft.Owin.IOwinRequest.Path
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Path
        name: Path
        nameWithType: IOwinRequest.Path
        qualifiedName: Microsoft.Owin.IOwinRequest.Path
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.Path
  Microsoft.Owin.OwinRequest.QueryString*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.QueryString*
        name: QueryString
        nameWithType: OwinRequest.QueryString
        qualifiedName: Microsoft.Owin.OwinRequest.QueryString
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.QueryString*
        name: QueryString
        nameWithType: OwinRequest.QueryString
        qualifiedName: Microsoft.Owin.OwinRequest.QueryString
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.QueryString
  Microsoft.Owin.IOwinRequest.QueryString:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.QueryString
        name: QueryString
        nameWithType: IOwinRequest.QueryString
        qualifiedName: Microsoft.Owin.IOwinRequest.QueryString
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.QueryString
        name: QueryString
        nameWithType: IOwinRequest.QueryString
        qualifiedName: Microsoft.Owin.IOwinRequest.QueryString
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.QueryString
  Microsoft.Owin.OwinRequest.Query*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Query*
        name: Query
        nameWithType: OwinRequest.Query
        qualifiedName: Microsoft.Owin.OwinRequest.Query
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Query*
        name: Query
        nameWithType: OwinRequest.Query
        qualifiedName: Microsoft.Owin.OwinRequest.Query
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Query
  Microsoft.Owin.IOwinRequest.Query:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Query
        name: Query
        nameWithType: IOwinRequest.Query
        qualifiedName: Microsoft.Owin.IOwinRequest.Query
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Query
        name: Query
        nameWithType: IOwinRequest.Query
        qualifiedName: Microsoft.Owin.IOwinRequest.Query
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.Query
  Microsoft.Owin.OwinRequest.Uri*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Uri*
        name: Uri
        nameWithType: OwinRequest.Uri
        qualifiedName: Microsoft.Owin.OwinRequest.Uri
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Uri*
        name: Uri
        nameWithType: OwinRequest.Uri
        qualifiedName: Microsoft.Owin.OwinRequest.Uri
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Uri
  Microsoft.Owin.IOwinRequest.Uri:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Uri
        name: Uri
        nameWithType: IOwinRequest.Uri
        qualifiedName: Microsoft.Owin.IOwinRequest.Uri
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Uri
        name: Uri
        nameWithType: IOwinRequest.Uri
        qualifiedName: Microsoft.Owin.IOwinRequest.Uri
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.Uri
  Microsoft.Owin.OwinRequest.Protocol*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Protocol*
        name: Protocol
        nameWithType: OwinRequest.Protocol
        qualifiedName: Microsoft.Owin.OwinRequest.Protocol
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Protocol*
        name: Protocol
        nameWithType: OwinRequest.Protocol
        qualifiedName: Microsoft.Owin.OwinRequest.Protocol
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Protocol
  Microsoft.Owin.IOwinRequest.Protocol:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Protocol
        name: Protocol
        nameWithType: IOwinRequest.Protocol
        qualifiedName: Microsoft.Owin.IOwinRequest.Protocol
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Protocol
        name: Protocol
        nameWithType: IOwinRequest.Protocol
        qualifiedName: Microsoft.Owin.IOwinRequest.Protocol
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.Protocol
  Microsoft.Owin.OwinRequest.Headers*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Headers*
        name: Headers
        nameWithType: OwinRequest.Headers
        qualifiedName: Microsoft.Owin.OwinRequest.Headers
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Headers*
        name: Headers
        nameWithType: OwinRequest.Headers
        qualifiedName: Microsoft.Owin.OwinRequest.Headers
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Headers
  Microsoft.Owin.IOwinRequest.Headers:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Headers
        name: Headers
        nameWithType: IOwinRequest.Headers
        qualifiedName: Microsoft.Owin.IOwinRequest.Headers
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Headers
        name: Headers
        nameWithType: IOwinRequest.Headers
        qualifiedName: Microsoft.Owin.IOwinRequest.Headers
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.Headers
  Microsoft.Owin.OwinRequest.Cookies*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Cookies*
        name: Cookies
        nameWithType: OwinRequest.Cookies
        qualifiedName: Microsoft.Owin.OwinRequest.Cookies
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Cookies*
        name: Cookies
        nameWithType: OwinRequest.Cookies
        qualifiedName: Microsoft.Owin.OwinRequest.Cookies
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Cookies
  Microsoft.Owin.IOwinRequest.Cookies:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Cookies
        name: Cookies
        nameWithType: IOwinRequest.Cookies
        qualifiedName: Microsoft.Owin.IOwinRequest.Cookies
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Cookies
        name: Cookies
        nameWithType: IOwinRequest.Cookies
        qualifiedName: Microsoft.Owin.IOwinRequest.Cookies
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.Cookies
  Microsoft.Owin.OwinRequest.ContentType*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.ContentType*
        name: ContentType
        nameWithType: OwinRequest.ContentType
        qualifiedName: Microsoft.Owin.OwinRequest.ContentType
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.ContentType*
        name: ContentType
        nameWithType: OwinRequest.ContentType
        qualifiedName: Microsoft.Owin.OwinRequest.ContentType
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.ContentType
  Microsoft.Owin.IOwinRequest.ContentType:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.ContentType
        name: ContentType
        nameWithType: IOwinRequest.ContentType
        qualifiedName: Microsoft.Owin.IOwinRequest.ContentType
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.ContentType
        name: ContentType
        nameWithType: IOwinRequest.ContentType
        qualifiedName: Microsoft.Owin.IOwinRequest.ContentType
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.ContentType
  Microsoft.Owin.OwinRequest.CacheControl*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.CacheControl*
        name: CacheControl
        nameWithType: OwinRequest.CacheControl
        qualifiedName: Microsoft.Owin.OwinRequest.CacheControl
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.CacheControl*
        name: CacheControl
        nameWithType: OwinRequest.CacheControl
        qualifiedName: Microsoft.Owin.OwinRequest.CacheControl
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.CacheControl
  Microsoft.Owin.IOwinRequest.CacheControl:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.CacheControl
        name: CacheControl
        nameWithType: IOwinRequest.CacheControl
        qualifiedName: Microsoft.Owin.IOwinRequest.CacheControl
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.CacheControl
        name: CacheControl
        nameWithType: IOwinRequest.CacheControl
        qualifiedName: Microsoft.Owin.IOwinRequest.CacheControl
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.CacheControl
  Microsoft.Owin.OwinRequest.MediaType*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.MediaType*
        name: MediaType
        nameWithType: OwinRequest.MediaType
        qualifiedName: Microsoft.Owin.OwinRequest.MediaType
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.MediaType*
        name: MediaType
        nameWithType: OwinRequest.MediaType
        qualifiedName: Microsoft.Owin.OwinRequest.MediaType
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.MediaType
  Microsoft.Owin.IOwinRequest.MediaType:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.MediaType
        name: MediaType
        nameWithType: IOwinRequest.MediaType
        qualifiedName: Microsoft.Owin.IOwinRequest.MediaType
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.MediaType
        name: MediaType
        nameWithType: IOwinRequest.MediaType
        qualifiedName: Microsoft.Owin.IOwinRequest.MediaType
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.MediaType
  Microsoft.Owin.OwinRequest.Accept*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Accept*
        name: Accept
        nameWithType: OwinRequest.Accept
        qualifiedName: Microsoft.Owin.OwinRequest.Accept
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Accept*
        name: Accept
        nameWithType: OwinRequest.Accept
        qualifiedName: Microsoft.Owin.OwinRequest.Accept
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Accept
  Microsoft.Owin.IOwinRequest.Accept:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Accept
        name: Accept
        nameWithType: IOwinRequest.Accept
        qualifiedName: Microsoft.Owin.IOwinRequest.Accept
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Accept
        name: Accept
        nameWithType: IOwinRequest.Accept
        qualifiedName: Microsoft.Owin.IOwinRequest.Accept
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.Accept
  Microsoft.Owin.OwinRequest.Body*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.Body*
        name: Body
        nameWithType: OwinRequest.Body
        qualifiedName: Microsoft.Owin.OwinRequest.Body
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.Body*
        name: Body
        nameWithType: OwinRequest.Body
        qualifiedName: Microsoft.Owin.OwinRequest.Body
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.Body
  Microsoft.Owin.IOwinRequest.Body:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.Body
        name: Body
        nameWithType: IOwinRequest.Body
        qualifiedName: Microsoft.Owin.IOwinRequest.Body
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.Body
        name: Body
        nameWithType: IOwinRequest.Body
        qualifiedName: Microsoft.Owin.IOwinRequest.Body
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.Body
  Microsoft.Owin.OwinRequest.CallCancelled*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.CallCancelled*
        name: CallCancelled
        nameWithType: OwinRequest.CallCancelled
        qualifiedName: Microsoft.Owin.OwinRequest.CallCancelled
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.CallCancelled*
        name: CallCancelled
        nameWithType: OwinRequest.CallCancelled
        qualifiedName: Microsoft.Owin.OwinRequest.CallCancelled
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.CallCancelled
  Microsoft.Owin.IOwinRequest.CallCancelled:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.CallCancelled
        name: CallCancelled
        nameWithType: IOwinRequest.CallCancelled
        qualifiedName: Microsoft.Owin.IOwinRequest.CallCancelled
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.CallCancelled
        name: CallCancelled
        nameWithType: IOwinRequest.CallCancelled
        qualifiedName: Microsoft.Owin.IOwinRequest.CallCancelled
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.CallCancelled
  Microsoft.Owin.OwinRequest.LocalIpAddress*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.LocalIpAddress*
        name: LocalIpAddress
        nameWithType: OwinRequest.LocalIpAddress
        qualifiedName: Microsoft.Owin.OwinRequest.LocalIpAddress
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.LocalIpAddress*
        name: LocalIpAddress
        nameWithType: OwinRequest.LocalIpAddress
        qualifiedName: Microsoft.Owin.OwinRequest.LocalIpAddress
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.LocalIpAddress
  Microsoft.Owin.IOwinRequest.LocalIpAddress:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.LocalIpAddress
        name: LocalIpAddress
        nameWithType: IOwinRequest.LocalIpAddress
        qualifiedName: Microsoft.Owin.IOwinRequest.LocalIpAddress
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.LocalIpAddress
        name: LocalIpAddress
        nameWithType: IOwinRequest.LocalIpAddress
        qualifiedName: Microsoft.Owin.IOwinRequest.LocalIpAddress
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.LocalIpAddress
  Microsoft.Owin.OwinRequest.LocalPort*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.LocalPort*
        name: LocalPort
        nameWithType: OwinRequest.LocalPort
        qualifiedName: Microsoft.Owin.OwinRequest.LocalPort
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.LocalPort*
        name: LocalPort
        nameWithType: OwinRequest.LocalPort
        qualifiedName: Microsoft.Owin.OwinRequest.LocalPort
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.LocalPort
  Microsoft.Owin.IOwinRequest.LocalPort:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.LocalPort
        name: LocalPort
        nameWithType: IOwinRequest.LocalPort
        qualifiedName: Microsoft.Owin.IOwinRequest.LocalPort
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.LocalPort
        name: LocalPort
        nameWithType: IOwinRequest.LocalPort
        qualifiedName: Microsoft.Owin.IOwinRequest.LocalPort
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.LocalPort
  Microsoft.Owin.OwinRequest.RemoteIpAddress*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.RemoteIpAddress*
        name: RemoteIpAddress
        nameWithType: OwinRequest.RemoteIpAddress
        qualifiedName: Microsoft.Owin.OwinRequest.RemoteIpAddress
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.RemoteIpAddress*
        name: RemoteIpAddress
        nameWithType: OwinRequest.RemoteIpAddress
        qualifiedName: Microsoft.Owin.OwinRequest.RemoteIpAddress
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.RemoteIpAddress
  Microsoft.Owin.IOwinRequest.RemoteIpAddress:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.RemoteIpAddress
        name: RemoteIpAddress
        nameWithType: IOwinRequest.RemoteIpAddress
        qualifiedName: Microsoft.Owin.IOwinRequest.RemoteIpAddress
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.RemoteIpAddress
        name: RemoteIpAddress
        nameWithType: IOwinRequest.RemoteIpAddress
        qualifiedName: Microsoft.Owin.IOwinRequest.RemoteIpAddress
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.RemoteIpAddress
  Microsoft.Owin.OwinRequest.RemotePort*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.RemotePort*
        name: RemotePort
        nameWithType: OwinRequest.RemotePort
        qualifiedName: Microsoft.Owin.OwinRequest.RemotePort
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.RemotePort*
        name: RemotePort
        nameWithType: OwinRequest.RemotePort
        qualifiedName: Microsoft.Owin.OwinRequest.RemotePort
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.RemotePort
  Microsoft.Owin.IOwinRequest.RemotePort:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.RemotePort
        name: RemotePort
        nameWithType: IOwinRequest.RemotePort
        qualifiedName: Microsoft.Owin.IOwinRequest.RemotePort
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.RemotePort
        name: RemotePort
        nameWithType: IOwinRequest.RemotePort
        qualifiedName: Microsoft.Owin.IOwinRequest.RemotePort
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.RemotePort
  Microsoft.Owin.OwinRequest.User*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest.User*
        name: User
        nameWithType: OwinRequest.User
        qualifiedName: Microsoft.Owin.OwinRequest.User
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest.User*
        name: User
        nameWithType: OwinRequest.User
        qualifiedName: Microsoft.Owin.OwinRequest.User
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinRequest.User
  Microsoft.Owin.IOwinRequest.User:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinRequest.User
        name: User
        nameWithType: IOwinRequest.User
        qualifiedName: Microsoft.Owin.IOwinRequest.User
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinRequest.User
        name: User
        nameWithType: IOwinRequest.User
        qualifiedName: Microsoft.Owin.IOwinRequest.User
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinRequest
    commentId: P:Microsoft.Owin.IOwinRequest.User
  Microsoft.Owin.OwinRequest:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinRequest
        name: OwinRequest
        nameWithType: OwinRequest
        qualifiedName: Microsoft.Owin.OwinRequest
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinRequest
        name: OwinRequest
        nameWithType: OwinRequest
        qualifiedName: Microsoft.Owin.OwinRequest
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.OwinRequest
  Microsoft.Owin.OwinResponse.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.#ctor*
        name: OwinResponse
        nameWithType: OwinResponse.OwinResponse
        qualifiedName: Microsoft.Owin.OwinResponse.OwinResponse
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.#ctor*
        name: OwinResponse
        nameWithType: OwinResponse.OwinResponse
        qualifiedName: Microsoft.Owin.OwinResponse.OwinResponse
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.#ctor
  Microsoft.Owin.OwinResponse.OnSendingHeaders*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.OnSendingHeaders*
        name: OnSendingHeaders
        nameWithType: OwinResponse.OnSendingHeaders
        qualifiedName: Microsoft.Owin.OwinResponse.OnSendingHeaders
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.OnSendingHeaders*
        name: OnSendingHeaders
        nameWithType: OwinResponse.OnSendingHeaders
        qualifiedName: Microsoft.Owin.OwinResponse.OnSendingHeaders
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.OnSendingHeaders
  Microsoft.Owin.IOwinResponse.OnSendingHeaders(System.Action{System.Object},System.Object):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.OnSendingHeaders(System.Action{System.Object},System.Object)
        name: OnSendingHeaders
        nameWithType: IOwinResponse.OnSendingHeaders
        qualifiedName: Microsoft.Owin.IOwinResponse.OnSendingHeaders
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinResponse.OnSendingHeaders(System.Action{System.Object},System.Object)
        name: OnSendingHeaders
        nameWithType: IOwinResponse.OnSendingHeaders
        qualifiedName: Microsoft.Owin.IOwinResponse.OnSendingHeaders
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: M:Microsoft.Owin.IOwinResponse.OnSendingHeaders(System.Action{System.Object},System.Object)
  Microsoft.Owin.OwinResponse.Redirect*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.Redirect*
        name: Redirect
        nameWithType: OwinResponse.Redirect
        qualifiedName: Microsoft.Owin.OwinResponse.Redirect
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.Redirect*
        name: Redirect
        nameWithType: OwinResponse.Redirect
        qualifiedName: Microsoft.Owin.OwinResponse.Redirect
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.Redirect
  Microsoft.Owin.IOwinResponse.Redirect(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Redirect(System.String)
        name: Redirect
        nameWithType: IOwinResponse.Redirect
        qualifiedName: Microsoft.Owin.IOwinResponse.Redirect
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinResponse.Redirect(System.String)
        name: Redirect
        nameWithType: IOwinResponse.Redirect
        qualifiedName: Microsoft.Owin.IOwinResponse.Redirect
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: M:Microsoft.Owin.IOwinResponse.Redirect(System.String)
  Microsoft.Owin.OwinResponse.Write*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.Write*
        name: Write
        nameWithType: OwinResponse.Write
        qualifiedName: Microsoft.Owin.OwinResponse.Write
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.Write*
        name: Write
        nameWithType: OwinResponse.Write
        qualifiedName: Microsoft.Owin.OwinResponse.Write
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.Write
  Microsoft.Owin.IOwinResponse.Write(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Write(System.String)
        name: Write
        nameWithType: IOwinResponse.Write
        qualifiedName: Microsoft.Owin.IOwinResponse.Write
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinResponse.Write(System.String)
        name: Write
        nameWithType: IOwinResponse.Write
        qualifiedName: Microsoft.Owin.IOwinResponse.Write
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: M:Microsoft.Owin.IOwinResponse.Write(System.String)
  Microsoft.Owin.IOwinResponse.Write(System.Byte[]):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Write(System.Byte[])
        name: Write
        nameWithType: IOwinResponse.Write
        qualifiedName: Microsoft.Owin.IOwinResponse.Write
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinResponse.Write(System.Byte[])
        name: Write
        nameWithType: IOwinResponse.Write
        qualifiedName: Microsoft.Owin.IOwinResponse.Write
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: M:Microsoft.Owin.IOwinResponse.Write(System.Byte[])
  Microsoft.Owin.IOwinResponse.Write(System.Byte[],System.Int32,System.Int32):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Write(System.Byte[],System.Int32,System.Int32)
        name: Write
        nameWithType: IOwinResponse.Write
        qualifiedName: Microsoft.Owin.IOwinResponse.Write
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinResponse.Write(System.Byte[],System.Int32,System.Int32)
        name: Write
        nameWithType: IOwinResponse.Write
        qualifiedName: Microsoft.Owin.IOwinResponse.Write
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: M:Microsoft.Owin.IOwinResponse.Write(System.Byte[],System.Int32,System.Int32)
  Microsoft.Owin.OwinResponse.WriteAsync*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.WriteAsync*
        name: WriteAsync
        nameWithType: OwinResponse.WriteAsync
        qualifiedName: Microsoft.Owin.OwinResponse.WriteAsync
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.WriteAsync*
        name: WriteAsync
        nameWithType: OwinResponse.WriteAsync
        qualifiedName: Microsoft.Owin.OwinResponse.WriteAsync
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.WriteAsync
  Microsoft.Owin.IOwinResponse.WriteAsync(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.String)
        name: WriteAsync
        nameWithType: IOwinResponse.WriteAsync
        qualifiedName: Microsoft.Owin.IOwinResponse.WriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.String)
        name: WriteAsync
        nameWithType: IOwinResponse.WriteAsync
        qualifiedName: Microsoft.Owin.IOwinResponse.WriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: M:Microsoft.Owin.IOwinResponse.WriteAsync(System.String)
  Microsoft.Owin.IOwinResponse.WriteAsync(System.String,System.Threading.CancellationToken):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.String,System.Threading.CancellationToken)
        name: WriteAsync
        nameWithType: IOwinResponse.WriteAsync
        qualifiedName: Microsoft.Owin.IOwinResponse.WriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Threading.CancellationToken
        name: CancellationToken
        nameWithType: CancellationToken
        qualifiedName: System.Threading.CancellationToken
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.String,System.Threading.CancellationToken)
        name: WriteAsync
        nameWithType: IOwinResponse.WriteAsync
        qualifiedName: Microsoft.Owin.IOwinResponse.WriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Threading.CancellationToken
        name: CancellationToken
        nameWithType: CancellationToken
        qualifiedName: System.Threading.CancellationToken
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: M:Microsoft.Owin.IOwinResponse.WriteAsync(System.String,System.Threading.CancellationToken)
  Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[]):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[])
        name: WriteAsync
        nameWithType: IOwinResponse.WriteAsync
        qualifiedName: Microsoft.Owin.IOwinResponse.WriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[])
        name: WriteAsync
        nameWithType: IOwinResponse.WriteAsync
        qualifiedName: Microsoft.Owin.IOwinResponse.WriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: M:Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[])
  Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[],System.Threading.CancellationToken):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[],System.Threading.CancellationToken)
        name: WriteAsync
        nameWithType: IOwinResponse.WriteAsync
        qualifiedName: Microsoft.Owin.IOwinResponse.WriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Threading.CancellationToken
        name: CancellationToken
        nameWithType: CancellationToken
        qualifiedName: System.Threading.CancellationToken
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[],System.Threading.CancellationToken)
        name: WriteAsync
        nameWithType: IOwinResponse.WriteAsync
        qualifiedName: Microsoft.Owin.IOwinResponse.WriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Threading.CancellationToken
        name: CancellationToken
        nameWithType: CancellationToken
        qualifiedName: System.Threading.CancellationToken
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: M:Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[],System.Threading.CancellationToken)
  Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
        name: WriteAsync
        nameWithType: IOwinResponse.WriteAsync
        qualifiedName: Microsoft.Owin.IOwinResponse.WriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Threading.CancellationToken
        name: CancellationToken
        nameWithType: CancellationToken
        qualifiedName: System.Threading.CancellationToken
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
        name: WriteAsync
        nameWithType: IOwinResponse.WriteAsync
        qualifiedName: Microsoft.Owin.IOwinResponse.WriteAsync
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Threading.CancellationToken
        name: CancellationToken
        nameWithType: CancellationToken
        qualifiedName: System.Threading.CancellationToken
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: M:Microsoft.Owin.IOwinResponse.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  Microsoft.Owin.OwinResponse.Get*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.Get*
        name: Get
        nameWithType: OwinResponse.Get
        qualifiedName: Microsoft.Owin.OwinResponse.Get
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.Get*
        name: Get
        nameWithType: OwinResponse.Get
        qualifiedName: Microsoft.Owin.OwinResponse.Get
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.Get
  Microsoft.Owin.IOwinResponse.Get``1(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Get``1(System.String)
        name: Get<T>
        nameWithType: IOwinResponse.Get<T>
        qualifiedName: Microsoft.Owin.IOwinResponse.Get<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinResponse.Get``1(System.String)
        name: Get(Of T)
        nameWithType: IOwinResponse.Get(Of T)
        qualifiedName: Microsoft.Owin.IOwinResponse.Get(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: M:Microsoft.Owin.IOwinResponse.Get``1(System.String)
  Microsoft.Owin.OwinResponse.Set*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.Set*
        name: Set
        nameWithType: OwinResponse.Set
        qualifiedName: Microsoft.Owin.OwinResponse.Set
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.Set*
        name: Set
        nameWithType: OwinResponse.Set
        qualifiedName: Microsoft.Owin.OwinResponse.Set
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.Set
  Microsoft.Owin.IOwinResponse.Set``1(System.String,``0):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Set``1(System.String,``0)
        name: Set<T>
        nameWithType: IOwinResponse.Set<T>
        qualifiedName: Microsoft.Owin.IOwinResponse.Set<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinResponse.Set``1(System.String,``0)
        name: Set(Of T)
        nameWithType: IOwinResponse.Set(Of T)
        qualifiedName: Microsoft.Owin.IOwinResponse.Set(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.Owin.IOwinResponse.Set``1(System.String,``0)
  Microsoft.Owin.IOwinResponse.Set``1(System.String,{T}):
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Set``1(System.String,``0)
        name: Set<T>
        nameWithType: IOwinResponse.Set<T>
        qualifiedName: Microsoft.Owin.IOwinResponse.Set<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.IOwinResponse.Set``1(System.String,``0)
        name: Set(Of T)
        nameWithType: IOwinResponse.Set(Of T)
        qualifiedName: Microsoft.Owin.IOwinResponse.Set(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Owin.IOwinResponse.Set``1(System.String,``0)
    parent: Microsoft.Owin.IOwinResponse
    commentId: M:Microsoft.Owin.IOwinResponse.Set``1(System.String,``0)
  Microsoft.Owin.OwinResponse.Environment*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.Environment*
        name: Environment
        nameWithType: OwinResponse.Environment
        qualifiedName: Microsoft.Owin.OwinResponse.Environment
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.Environment*
        name: Environment
        nameWithType: OwinResponse.Environment
        qualifiedName: Microsoft.Owin.OwinResponse.Environment
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.Environment
  Microsoft.Owin.IOwinResponse.Environment:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Environment
        name: Environment
        nameWithType: IOwinResponse.Environment
        qualifiedName: Microsoft.Owin.IOwinResponse.Environment
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Environment
        name: Environment
        nameWithType: IOwinResponse.Environment
        qualifiedName: Microsoft.Owin.IOwinResponse.Environment
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: P:Microsoft.Owin.IOwinResponse.Environment
  Microsoft.Owin.OwinResponse.Context*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.Context*
        name: Context
        nameWithType: OwinResponse.Context
        qualifiedName: Microsoft.Owin.OwinResponse.Context
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.Context*
        name: Context
        nameWithType: OwinResponse.Context
        qualifiedName: Microsoft.Owin.OwinResponse.Context
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.Context
  Microsoft.Owin.IOwinResponse.Context:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Context
        name: Context
        nameWithType: IOwinResponse.Context
        qualifiedName: Microsoft.Owin.IOwinResponse.Context
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Context
        name: Context
        nameWithType: IOwinResponse.Context
        qualifiedName: Microsoft.Owin.IOwinResponse.Context
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: P:Microsoft.Owin.IOwinResponse.Context
  Microsoft.Owin.OwinResponse.StatusCode*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.StatusCode*
        name: StatusCode
        nameWithType: OwinResponse.StatusCode
        qualifiedName: Microsoft.Owin.OwinResponse.StatusCode
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.StatusCode*
        name: StatusCode
        nameWithType: OwinResponse.StatusCode
        qualifiedName: Microsoft.Owin.OwinResponse.StatusCode
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.StatusCode
  Microsoft.Owin.IOwinResponse.StatusCode:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.StatusCode
        name: StatusCode
        nameWithType: IOwinResponse.StatusCode
        qualifiedName: Microsoft.Owin.IOwinResponse.StatusCode
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.StatusCode
        name: StatusCode
        nameWithType: IOwinResponse.StatusCode
        qualifiedName: Microsoft.Owin.IOwinResponse.StatusCode
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: P:Microsoft.Owin.IOwinResponse.StatusCode
  Microsoft.Owin.OwinResponse.ReasonPhrase*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.ReasonPhrase*
        name: ReasonPhrase
        nameWithType: OwinResponse.ReasonPhrase
        qualifiedName: Microsoft.Owin.OwinResponse.ReasonPhrase
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.ReasonPhrase*
        name: ReasonPhrase
        nameWithType: OwinResponse.ReasonPhrase
        qualifiedName: Microsoft.Owin.OwinResponse.ReasonPhrase
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.ReasonPhrase
  Microsoft.Owin.IOwinResponse.ReasonPhrase:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.ReasonPhrase
        name: ReasonPhrase
        nameWithType: IOwinResponse.ReasonPhrase
        qualifiedName: Microsoft.Owin.IOwinResponse.ReasonPhrase
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.ReasonPhrase
        name: ReasonPhrase
        nameWithType: IOwinResponse.ReasonPhrase
        qualifiedName: Microsoft.Owin.IOwinResponse.ReasonPhrase
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: P:Microsoft.Owin.IOwinResponse.ReasonPhrase
  Microsoft.Owin.OwinResponse.Protocol*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.Protocol*
        name: Protocol
        nameWithType: OwinResponse.Protocol
        qualifiedName: Microsoft.Owin.OwinResponse.Protocol
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.Protocol*
        name: Protocol
        nameWithType: OwinResponse.Protocol
        qualifiedName: Microsoft.Owin.OwinResponse.Protocol
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.Protocol
  Microsoft.Owin.IOwinResponse.Protocol:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Protocol
        name: Protocol
        nameWithType: IOwinResponse.Protocol
        qualifiedName: Microsoft.Owin.IOwinResponse.Protocol
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Protocol
        name: Protocol
        nameWithType: IOwinResponse.Protocol
        qualifiedName: Microsoft.Owin.IOwinResponse.Protocol
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: P:Microsoft.Owin.IOwinResponse.Protocol
  Microsoft.Owin.OwinResponse.Headers*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.Headers*
        name: Headers
        nameWithType: OwinResponse.Headers
        qualifiedName: Microsoft.Owin.OwinResponse.Headers
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.Headers*
        name: Headers
        nameWithType: OwinResponse.Headers
        qualifiedName: Microsoft.Owin.OwinResponse.Headers
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.Headers
  Microsoft.Owin.IOwinResponse.Headers:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Headers
        name: Headers
        nameWithType: IOwinResponse.Headers
        qualifiedName: Microsoft.Owin.IOwinResponse.Headers
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Headers
        name: Headers
        nameWithType: IOwinResponse.Headers
        qualifiedName: Microsoft.Owin.IOwinResponse.Headers
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: P:Microsoft.Owin.IOwinResponse.Headers
  Microsoft.Owin.OwinResponse.Cookies*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.Cookies*
        name: Cookies
        nameWithType: OwinResponse.Cookies
        qualifiedName: Microsoft.Owin.OwinResponse.Cookies
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.Cookies*
        name: Cookies
        nameWithType: OwinResponse.Cookies
        qualifiedName: Microsoft.Owin.OwinResponse.Cookies
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.Cookies
  Microsoft.Owin.IOwinResponse.Cookies:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Cookies
        name: Cookies
        nameWithType: IOwinResponse.Cookies
        qualifiedName: Microsoft.Owin.IOwinResponse.Cookies
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Cookies
        name: Cookies
        nameWithType: IOwinResponse.Cookies
        qualifiedName: Microsoft.Owin.IOwinResponse.Cookies
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: P:Microsoft.Owin.IOwinResponse.Cookies
  Microsoft.Owin.OwinResponse.ContentLength*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.ContentLength*
        name: ContentLength
        nameWithType: OwinResponse.ContentLength
        qualifiedName: Microsoft.Owin.OwinResponse.ContentLength
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.ContentLength*
        name: ContentLength
        nameWithType: OwinResponse.ContentLength
        qualifiedName: Microsoft.Owin.OwinResponse.ContentLength
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.ContentLength
  Microsoft.Owin.IOwinResponse.ContentLength:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.ContentLength
        name: ContentLength
        nameWithType: IOwinResponse.ContentLength
        qualifiedName: Microsoft.Owin.IOwinResponse.ContentLength
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.ContentLength
        name: ContentLength
        nameWithType: IOwinResponse.ContentLength
        qualifiedName: Microsoft.Owin.IOwinResponse.ContentLength
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: P:Microsoft.Owin.IOwinResponse.ContentLength
  Microsoft.Owin.OwinResponse.ContentType*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.ContentType*
        name: ContentType
        nameWithType: OwinResponse.ContentType
        qualifiedName: Microsoft.Owin.OwinResponse.ContentType
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.ContentType*
        name: ContentType
        nameWithType: OwinResponse.ContentType
        qualifiedName: Microsoft.Owin.OwinResponse.ContentType
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.ContentType
  Microsoft.Owin.IOwinResponse.ContentType:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.ContentType
        name: ContentType
        nameWithType: IOwinResponse.ContentType
        qualifiedName: Microsoft.Owin.IOwinResponse.ContentType
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.ContentType
        name: ContentType
        nameWithType: IOwinResponse.ContentType
        qualifiedName: Microsoft.Owin.IOwinResponse.ContentType
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: P:Microsoft.Owin.IOwinResponse.ContentType
  Microsoft.Owin.OwinResponse.Expires*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.Expires*
        name: Expires
        nameWithType: OwinResponse.Expires
        qualifiedName: Microsoft.Owin.OwinResponse.Expires
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.Expires*
        name: Expires
        nameWithType: OwinResponse.Expires
        qualifiedName: Microsoft.Owin.OwinResponse.Expires
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.Expires
  Microsoft.Owin.IOwinResponse.Expires:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Expires
        name: Expires
        nameWithType: IOwinResponse.Expires
        qualifiedName: Microsoft.Owin.IOwinResponse.Expires
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Expires
        name: Expires
        nameWithType: IOwinResponse.Expires
        qualifiedName: Microsoft.Owin.IOwinResponse.Expires
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: P:Microsoft.Owin.IOwinResponse.Expires
  Microsoft.Owin.OwinResponse.ETag*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.ETag*
        name: ETag
        nameWithType: OwinResponse.ETag
        qualifiedName: Microsoft.Owin.OwinResponse.ETag
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.ETag*
        name: ETag
        nameWithType: OwinResponse.ETag
        qualifiedName: Microsoft.Owin.OwinResponse.ETag
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.ETag
  Microsoft.Owin.IOwinResponse.ETag:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.ETag
        name: ETag
        nameWithType: IOwinResponse.ETag
        qualifiedName: Microsoft.Owin.IOwinResponse.ETag
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.ETag
        name: ETag
        nameWithType: IOwinResponse.ETag
        qualifiedName: Microsoft.Owin.IOwinResponse.ETag
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: P:Microsoft.Owin.IOwinResponse.ETag
  Microsoft.Owin.OwinResponse.Body*:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse.Body*
        name: Body
        nameWithType: OwinResponse.Body
        qualifiedName: Microsoft.Owin.OwinResponse.Body
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse.Body*
        name: Body
        nameWithType: OwinResponse.Body
        qualifiedName: Microsoft.Owin.OwinResponse.Body
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.OwinResponse.Body
  Microsoft.Owin.IOwinResponse.Body:
    name:
      CSharp:
      - id: Microsoft.Owin.IOwinResponse.Body
        name: Body
        nameWithType: IOwinResponse.Body
        qualifiedName: Microsoft.Owin.IOwinResponse.Body
        isExternal: true
      VB:
      - id: Microsoft.Owin.IOwinResponse.Body
        name: Body
        nameWithType: IOwinResponse.Body
        qualifiedName: Microsoft.Owin.IOwinResponse.Body
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.IOwinResponse
    commentId: P:Microsoft.Owin.IOwinResponse.Body
  Microsoft.Owin.OwinResponse:
    name:
      CSharp:
      - id: Microsoft.Owin.OwinResponse
        name: OwinResponse
        nameWithType: OwinResponse
        qualifiedName: Microsoft.Owin.OwinResponse
        isExternal: true
      VB:
      - id: Microsoft.Owin.OwinResponse
        name: OwinResponse
        nameWithType: OwinResponse
        qualifiedName: Microsoft.Owin.OwinResponse
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.OwinResponse
  Owin.IAppBuilder:
    name:
      CSharp:
      - id: Owin.IAppBuilder
        name: IAppBuilder
        nameWithType: IAppBuilder
        qualifiedName: Owin.IAppBuilder
        isExternal: true
      VB:
      - id: Owin.IAppBuilder
        name: IAppBuilder
        nameWithType: IAppBuilder
        qualifiedName: Owin.IAppBuilder
        isExternal: true
    isDefinition: true
  Microsoft.Owin.Builder.AppBuilder.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Builder.AppBuilder.#ctor*
        name: AppBuilder
        nameWithType: AppBuilder.AppBuilder
        qualifiedName: Microsoft.Owin.Builder.AppBuilder.AppBuilder
        isExternal: true
      VB:
      - id: Microsoft.Owin.Builder.AppBuilder.#ctor*
        name: AppBuilder
        nameWithType: AppBuilder.AppBuilder
        qualifiedName: Microsoft.Owin.Builder.AppBuilder.AppBuilder
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Builder.AppBuilder.#ctor
  System.Object[]:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Microsoft.Owin.Builder.AppBuilder.Use*:
    name:
      CSharp:
      - id: Microsoft.Owin.Builder.AppBuilder.Use*
        name: Use
        nameWithType: AppBuilder.Use
        qualifiedName: Microsoft.Owin.Builder.AppBuilder.Use
        isExternal: true
      VB:
      - id: Microsoft.Owin.Builder.AppBuilder.Use*
        name: Use
        nameWithType: AppBuilder.Use
        qualifiedName: Microsoft.Owin.Builder.AppBuilder.Use
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Builder.AppBuilder.Use
  Microsoft.Owin.Builder.AppBuilder.New*:
    name:
      CSharp:
      - id: Microsoft.Owin.Builder.AppBuilder.New*
        name: New
        nameWithType: AppBuilder.New
        qualifiedName: Microsoft.Owin.Builder.AppBuilder.New
        isExternal: true
      VB:
      - id: Microsoft.Owin.Builder.AppBuilder.New*
        name: New
        nameWithType: AppBuilder.New
        qualifiedName: Microsoft.Owin.Builder.AppBuilder.New
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Builder.AppBuilder.New
  Microsoft.Owin.Builder.AppBuilder.Build*:
    name:
      CSharp:
      - id: Microsoft.Owin.Builder.AppBuilder.Build*
        name: Build
        nameWithType: AppBuilder.Build
        qualifiedName: Microsoft.Owin.Builder.AppBuilder.Build
        isExternal: true
      VB:
      - id: Microsoft.Owin.Builder.AppBuilder.Build*
        name: Build
        nameWithType: AppBuilder.Build
        qualifiedName: Microsoft.Owin.Builder.AppBuilder.Build
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Builder.AppBuilder.Build
  Microsoft.Owin.Builder.AppBuilder.Properties*:
    name:
      CSharp:
      - id: Microsoft.Owin.Builder.AppBuilder.Properties*
        name: Properties
        nameWithType: AppBuilder.Properties
        qualifiedName: Microsoft.Owin.Builder.AppBuilder.Properties
        isExternal: true
      VB:
      - id: Microsoft.Owin.Builder.AppBuilder.Properties*
        name: Properties
        nameWithType: AppBuilder.Properties
        qualifiedName: Microsoft.Owin.Builder.AppBuilder.Properties
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Builder.AppBuilder.Properties
  Microsoft.Owin.Builder.AppBuilder:
    name:
      CSharp:
      - id: Microsoft.Owin.Builder.AppBuilder
        name: AppBuilder
        nameWithType: AppBuilder
        qualifiedName: Microsoft.Owin.Builder.AppBuilder
        isExternal: true
      VB:
      - id: Microsoft.Owin.Builder.AppBuilder
        name: AppBuilder
        nameWithType: AppBuilder
        qualifiedName: Microsoft.Owin.Builder.AppBuilder
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Builder.AppBuilder
  System.Func`2:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Func`2
  System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Func`2
    parent: System
    commentId: T:System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.Tasks.Task}
  Microsoft.Owin.Builder.AppBuilderExtensions.Build*:
    name:
      CSharp:
      - id: Microsoft.Owin.Builder.AppBuilderExtensions.Build*
        name: Build
        nameWithType: AppBuilderExtensions.Build
        qualifiedName: Microsoft.Owin.Builder.AppBuilderExtensions.Build
        isExternal: true
      VB:
      - id: Microsoft.Owin.Builder.AppBuilderExtensions.Build*
        name: Build
        nameWithType: AppBuilderExtensions.Build
        qualifiedName: Microsoft.Owin.Builder.AppBuilderExtensions.Build
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Builder.AppBuilderExtensions.Build
  TApp:
    name:
      CSharp:
      - name: TApp
        nameWithType: TApp
        qualifiedName: TApp
      VB:
      - name: TApp
        nameWithType: TApp
        qualifiedName: TApp
    isDefinition: true
    commentId: '!:TApp'
  '{TApp}':
    name:
      CSharp:
      - name: TApp
        nameWithType: TApp
        qualifiedName: TApp
      VB:
      - name: TApp
        nameWithType: TApp
        qualifiedName: TApp
    isDefinition: false
    definition: TApp
    commentId: '!:TApp'
  System.Delegate:
    name:
      CSharp:
      - id: System.Delegate
        name: Delegate
        nameWithType: Delegate
        qualifiedName: System.Delegate
        isExternal: true
      VB:
      - id: System.Delegate
        name: Delegate
        nameWithType: Delegate
        qualifiedName: System.Delegate
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Delegate
  Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion*:
    name:
      CSharp:
      - id: Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion*
        name: AddSignatureConversion
        nameWithType: AppBuilderExtensions.AddSignatureConversion
        qualifiedName: Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion
        isExternal: true
      VB:
      - id: Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion*
        name: AddSignatureConversion
        nameWithType: AppBuilderExtensions.AddSignatureConversion
        qualifiedName: Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Builder.AppBuilderExtensions.AddSignatureConversion
  System.Func{{T1},{T2}}:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Func`2
    parent: System
    commentId: T:System.Func{``0,``1}
  Microsoft.Owin.Builder.AppBuilderExtensions:
    name:
      CSharp:
      - id: Microsoft.Owin.Builder.AppBuilderExtensions
        name: AppBuilderExtensions
        nameWithType: AppBuilderExtensions
        qualifiedName: Microsoft.Owin.Builder.AppBuilderExtensions
        isExternal: true
      VB:
      - id: Microsoft.Owin.Builder.AppBuilderExtensions
        name: AppBuilderExtensions
        nameWithType: AppBuilderExtensions
        qualifiedName: Microsoft.Owin.Builder.AppBuilderExtensions
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Builder.AppBuilderExtensions
  Microsoft.Owin.Builder:
    name:
      CSharp:
      - name: Microsoft.Owin.Builder
        nameWithType: Microsoft.Owin.Builder
        qualifiedName: Microsoft.Owin.Builder
      VB:
      - name: Microsoft.Owin.Builder
        nameWithType: Microsoft.Owin.Builder
        qualifiedName: Microsoft.Owin.Builder
    isDefinition: true
    commentId: N:Microsoft.Owin.Builder
  Microsoft.Owin.BuilderProperties.Address.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Address.#ctor*
        name: Address
        nameWithType: Address.Address
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Address
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Address.#ctor*
        name: Address
        nameWithType: Address.Address
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Address
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Address.#ctor
  Microsoft.Owin.BuilderProperties:
    name:
      CSharp:
      - name: Microsoft.Owin.BuilderProperties
        nameWithType: Microsoft.Owin.BuilderProperties
        qualifiedName: Microsoft.Owin.BuilderProperties
      VB:
      - name: Microsoft.Owin.BuilderProperties
        nameWithType: Microsoft.Owin.BuilderProperties
        qualifiedName: Microsoft.Owin.BuilderProperties
    isDefinition: true
    commentId: N:Microsoft.Owin.BuilderProperties
  Microsoft.Owin.BuilderProperties.Address:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Address
        name: Address
        nameWithType: Address
        qualifiedName: Microsoft.Owin.BuilderProperties.Address
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Address
        name: Address
        nameWithType: Address
        qualifiedName: Microsoft.Owin.BuilderProperties.Address
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.BuilderProperties
    commentId: T:Microsoft.Owin.BuilderProperties.Address
  Microsoft.Owin.BuilderProperties.Address.Create*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Address.Create*
        name: Create
        nameWithType: Address.Create
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Create
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Address.Create*
        name: Create
        nameWithType: Address.Create
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Create
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Create
  Microsoft.Owin.BuilderProperties.Address.Equals*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Address.Equals*
        name: Equals
        nameWithType: Address.Equals
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Equals
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Address.Equals*
        name: Equals
        nameWithType: Address.Equals
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Equals
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Equals
  Microsoft.Owin.BuilderProperties.Address.GetHashCode*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Address.GetHashCode*
        name: GetHashCode
        nameWithType: Address.GetHashCode
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.GetHashCode
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Address.GetHashCode*
        name: GetHashCode
        nameWithType: Address.GetHashCode
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.GetHashCode
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Address.GetHashCode
  Microsoft.Owin.BuilderProperties.Address.op_Equality*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Address.op_Equality*
        name: Equality
        nameWithType: Address.Equality
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Equality
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Address.op_Equality*
        name: Equality
        nameWithType: Address.Equality
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Equality
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Address.op_Equality
  Microsoft.Owin.BuilderProperties.Address.op_Inequality*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Address.op_Inequality*
        name: Inequality
        nameWithType: Address.Inequality
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Inequality
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Address.op_Inequality*
        name: Inequality
        nameWithType: Address.Inequality
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Inequality
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Address.op_Inequality
  Microsoft.Owin.BuilderProperties.Address.Get*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Address.Get*
        name: Get
        nameWithType: Address.Get
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Get
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Address.Get*
        name: Get
        nameWithType: Address.Get
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Get
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Get
  Microsoft.Owin.BuilderProperties.Address.Set*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Address.Set*
        name: Set
        nameWithType: Address.Set
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Set
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Address.Set*
        name: Set
        nameWithType: Address.Set
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Set
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Set
  Microsoft.Owin.BuilderProperties.Address.Dictionary*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Address.Dictionary*
        name: Dictionary
        nameWithType: Address.Dictionary
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Dictionary
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Address.Dictionary*
        name: Dictionary
        nameWithType: Address.Dictionary
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Dictionary
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Dictionary
  Microsoft.Owin.BuilderProperties.Address.Scheme*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Address.Scheme*
        name: Scheme
        nameWithType: Address.Scheme
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Scheme
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Address.Scheme*
        name: Scheme
        nameWithType: Address.Scheme
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Scheme
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Scheme
  Microsoft.Owin.BuilderProperties.Address.Host*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Address.Host*
        name: Host
        nameWithType: Address.Host
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Host
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Address.Host*
        name: Host
        nameWithType: Address.Host
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Host
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Host
  Microsoft.Owin.BuilderProperties.Address.Port*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Address.Port*
        name: Port
        nameWithType: Address.Port
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Port
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Address.Port*
        name: Port
        nameWithType: Address.Port
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Port
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Port
  Microsoft.Owin.BuilderProperties.Address.Path*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Address.Path*
        name: Path
        nameWithType: Address.Path
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Path
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Address.Path*
        name: Path
        nameWithType: Address.Path
        qualifiedName: Microsoft.Owin.BuilderProperties.Address.Path
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Path
  System.Collections.Generic.IEnumerable{Microsoft.Owin.BuilderProperties.Address}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.BuilderProperties.Address
        name: Address
        nameWithType: Address
        qualifiedName: Microsoft.Owin.BuilderProperties.Address
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.BuilderProperties.Address
        name: Address
        nameWithType: Address
        qualifiedName: Microsoft.Owin.BuilderProperties.Address
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Owin.BuilderProperties.Address}
  System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IList`1
        name: IList
        nameWithType: IList
        qualifiedName: System.Collections.Generic.IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: System.Collections.Generic.IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IList`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}
  Microsoft.Owin.BuilderProperties.AddressCollection.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.#ctor*
        name: AddressCollection
        nameWithType: AddressCollection.AddressCollection
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.AddressCollection
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.#ctor*
        name: AddressCollection
        nameWithType: AddressCollection.AddressCollection
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.AddressCollection
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.#ctor
  Microsoft.Owin.BuilderProperties.AddressCollection.Add*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.Add*
        name: Add
        nameWithType: AddressCollection.Add
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.Add
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.Add*
        name: Add
        nameWithType: AddressCollection.Add
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.Add
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.Add
  Microsoft.Owin.BuilderProperties.AddressCollection.System#Collections#IEnumerable#GetEnumerator*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.System#Collections#IEnumerable#GetEnumerator*
        name: IEnumerable.GetEnumerator
        nameWithType: AddressCollection.IEnumerable.GetEnumerator
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.System.Collections.IEnumerable.GetEnumerator
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.System#Collections#IEnumerable#GetEnumerator*
        name: System.Collections.IEnumerable.GetEnumerator
        nameWithType: AddressCollection.System.Collections.IEnumerable.GetEnumerator
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.System.Collections.IEnumerable.GetEnumerator
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.System#Collections#IEnumerable#GetEnumerator
  System.Collections.Generic.IEnumerator{Microsoft.Owin.BuilderProperties.Address}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.BuilderProperties.Address
        name: Address
        nameWithType: Address
        qualifiedName: Microsoft.Owin.BuilderProperties.Address
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.BuilderProperties.Address
        name: Address
        nameWithType: Address
        qualifiedName: Microsoft.Owin.BuilderProperties.Address
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerator`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerator{Microsoft.Owin.BuilderProperties.Address}
  Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator*
        name: GetEnumerator
        nameWithType: AddressCollection.GetEnumerator
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator*
        name: GetEnumerator
        nameWithType: AddressCollection.GetEnumerator
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator
  System.Collections.Generic.IEnumerable{Microsoft.Owin.BuilderProperties.Address}.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable<Address>.GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable<Microsoft.Owin.BuilderProperties.Address>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable(Of Address).GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable(Of Microsoft.Owin.BuilderProperties.Address).GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
    parent: System.Collections.Generic.IEnumerable{Microsoft.Owin.BuilderProperties.Address}
    commentId: M:System.Collections.Generic.IEnumerable{Microsoft.Owin.BuilderProperties.Address}.GetEnumerator
  Microsoft.Owin.BuilderProperties.AddressCollection:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection
        name: AddressCollection
        nameWithType: AddressCollection
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection
        name: AddressCollection
        nameWithType: AddressCollection
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.BuilderProperties
    commentId: T:Microsoft.Owin.BuilderProperties.AddressCollection
  Microsoft.Owin.BuilderProperties.AddressCollection.Create*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.Create*
        name: Create
        nameWithType: AddressCollection.Create
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.Create
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.Create*
        name: Create
        nameWithType: AddressCollection.Create
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.Create
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.Create
  Microsoft.Owin.BuilderProperties.AddressCollection.Equals*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.Equals*
        name: Equals
        nameWithType: AddressCollection.Equals
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.Equals
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.Equals*
        name: Equals
        nameWithType: AddressCollection.Equals
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.Equals
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.Equals
  Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode*
        name: GetHashCode
        nameWithType: AddressCollection.GetHashCode
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode*
        name: GetHashCode
        nameWithType: AddressCollection.GetHashCode
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode
  Microsoft.Owin.BuilderProperties.AddressCollection.op_Equality*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.op_Equality*
        name: Equality
        nameWithType: AddressCollection.Equality
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.Equality
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.op_Equality*
        name: Equality
        nameWithType: AddressCollection.Equality
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.Equality
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.op_Equality
  Microsoft.Owin.BuilderProperties.AddressCollection.op_Inequality*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.op_Inequality*
        name: Inequality
        nameWithType: AddressCollection.Inequality
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.Inequality
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.op_Inequality*
        name: Inequality
        nameWithType: AddressCollection.Inequality
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.Inequality
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.op_Inequality
  Microsoft.Owin.BuilderProperties.AddressCollection.List*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.List*
        name: List
        nameWithType: AddressCollection.List
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.List
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.List*
        name: List
        nameWithType: AddressCollection.List
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.List
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.List
  Microsoft.Owin.BuilderProperties.AddressCollection.Count*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.Count*
        name: Count
        nameWithType: AddressCollection.Count
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.Count
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.Count*
        name: Count
        nameWithType: AddressCollection.Count
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.Count
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.Count
  Microsoft.Owin.BuilderProperties.AddressCollection.Item*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.Item*
        name: Item
        nameWithType: AddressCollection.Item
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.Item
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AddressCollection.Item*
        name: Item
        nameWithType: AddressCollection.Item
        qualifiedName: Microsoft.Owin.BuilderProperties.AddressCollection.Item
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.Item
  Microsoft.Owin.BuilderProperties.AppProperties.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.#ctor*
        name: AppProperties
        nameWithType: AppProperties.AppProperties
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.AppProperties
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.#ctor*
        name: AppProperties
        nameWithType: AppProperties.AppProperties
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.AppProperties
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.#ctor
  Microsoft.Owin.BuilderProperties.AppProperties:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties
        name: AppProperties
        nameWithType: AppProperties
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties
        name: AppProperties
        nameWithType: AppProperties
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.BuilderProperties
    commentId: T:Microsoft.Owin.BuilderProperties.AppProperties
  Microsoft.Owin.BuilderProperties.AppProperties.Equals*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.Equals*
        name: Equals
        nameWithType: AppProperties.Equals
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Equals
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.Equals*
        name: Equals
        nameWithType: AppProperties.Equals
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Equals
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.Equals
  Microsoft.Owin.BuilderProperties.AppProperties.GetHashCode*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.GetHashCode*
        name: GetHashCode
        nameWithType: AppProperties.GetHashCode
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.GetHashCode
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.GetHashCode*
        name: GetHashCode
        nameWithType: AppProperties.GetHashCode
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.GetHashCode
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.GetHashCode
  Microsoft.Owin.BuilderProperties.AppProperties.op_Equality*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.op_Equality*
        name: Equality
        nameWithType: AppProperties.Equality
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Equality
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.op_Equality*
        name: Equality
        nameWithType: AppProperties.Equality
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Equality
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.op_Equality
  Microsoft.Owin.BuilderProperties.AppProperties.op_Inequality*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.op_Inequality*
        name: Inequality
        nameWithType: AppProperties.Inequality
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Inequality
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.op_Inequality*
        name: Inequality
        nameWithType: AppProperties.Inequality
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Inequality
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.op_Inequality
  Microsoft.Owin.BuilderProperties.AppProperties.Get*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.Get*
        name: Get
        nameWithType: AppProperties.Get
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Get
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.Get*
        name: Get
        nameWithType: AppProperties.Get
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Get
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.Get
  Microsoft.Owin.BuilderProperties.AppProperties.Set*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.Set*
        name: Set
        nameWithType: AppProperties.Set
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Set
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.Set*
        name: Set
        nameWithType: AppProperties.Set
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Set
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.Set
  Microsoft.Owin.BuilderProperties.AppProperties.OwinVersion*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.OwinVersion*
        name: OwinVersion
        nameWithType: AppProperties.OwinVersion
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.OwinVersion
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.OwinVersion*
        name: OwinVersion
        nameWithType: AppProperties.OwinVersion
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.OwinVersion
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.OwinVersion
  Microsoft.Owin.BuilderProperties.AppProperties.DefaultApp*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.DefaultApp*
        name: DefaultApp
        nameWithType: AppProperties.DefaultApp
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.DefaultApp
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.DefaultApp*
        name: DefaultApp
        nameWithType: AppProperties.DefaultApp
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.DefaultApp
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.DefaultApp
  System.Action{System.Delegate}:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Delegate
        name: Delegate
        nameWithType: Delegate
        qualifiedName: System.Delegate
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Delegate
        name: Delegate
        nameWithType: Delegate
        qualifiedName: System.Delegate
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Action`1
    parent: System
    commentId: T:System.Action{System.Delegate}
  Microsoft.Owin.BuilderProperties.AppProperties.AddSignatureConversionDelegate*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.AddSignatureConversionDelegate*
        name: AddSignatureConversionDelegate
        nameWithType: AppProperties.AddSignatureConversionDelegate
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.AddSignatureConversionDelegate
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.AddSignatureConversionDelegate*
        name: AddSignatureConversionDelegate
        nameWithType: AppProperties.AddSignatureConversionDelegate
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.AddSignatureConversionDelegate
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.AddSignatureConversionDelegate
  Microsoft.Owin.BuilderProperties.AppProperties.AppName*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.AppName*
        name: AppName
        nameWithType: AppProperties.AppName
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.AppName
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.AppName*
        name: AppName
        nameWithType: AppProperties.AppName
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.AppName
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.AppName
  Microsoft.Owin.BuilderProperties.AppProperties.TraceOutput*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.TraceOutput*
        name: TraceOutput
        nameWithType: AppProperties.TraceOutput
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.TraceOutput
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.TraceOutput*
        name: TraceOutput
        nameWithType: AppProperties.TraceOutput
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.TraceOutput
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.TraceOutput
  Microsoft.Owin.BuilderProperties.AppProperties.OnAppDisposing*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.OnAppDisposing*
        name: OnAppDisposing
        nameWithType: AppProperties.OnAppDisposing
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.OnAppDisposing
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.OnAppDisposing*
        name: OnAppDisposing
        nameWithType: AppProperties.OnAppDisposing
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.OnAppDisposing
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.OnAppDisposing
  Microsoft.Owin.BuilderProperties.AppProperties.Addresses*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.Addresses*
        name: Addresses
        nameWithType: AppProperties.Addresses
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Addresses
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.Addresses*
        name: Addresses
        nameWithType: AppProperties.Addresses
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Addresses
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.Addresses
  Microsoft.Owin.BuilderProperties.Capabilities:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Capabilities
        name: Capabilities
        nameWithType: Capabilities
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Capabilities
        name: Capabilities
        nameWithType: Capabilities
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.BuilderProperties
    commentId: T:Microsoft.Owin.BuilderProperties.Capabilities
  Microsoft.Owin.BuilderProperties.AppProperties.Capabilities*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.Capabilities*
        name: Capabilities
        nameWithType: AppProperties.Capabilities
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Capabilities
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.Capabilities*
        name: Capabilities
        nameWithType: AppProperties.Capabilities
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Capabilities
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.Capabilities
  Microsoft.Owin.BuilderProperties.AppProperties.Dictionary*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.Dictionary*
        name: Dictionary
        nameWithType: AppProperties.Dictionary
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Dictionary
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.AppProperties.Dictionary*
        name: Dictionary
        nameWithType: AppProperties.Dictionary
        qualifiedName: Microsoft.Owin.BuilderProperties.AppProperties.Dictionary
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.AppProperties.Dictionary
  Microsoft.Owin.BuilderProperties.Capabilities.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.#ctor*
        name: Capabilities
        nameWithType: Capabilities.Capabilities
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Capabilities
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.#ctor*
        name: Capabilities
        nameWithType: Capabilities.Capabilities
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Capabilities
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Capabilities.#ctor
  Microsoft.Owin.BuilderProperties.Capabilities.Create*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.Create*
        name: Create
        nameWithType: Capabilities.Create
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Create
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.Create*
        name: Create
        nameWithType: Capabilities.Create
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Create
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Capabilities.Create
  Microsoft.Owin.BuilderProperties.Capabilities.Equals*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.Equals*
        name: Equals
        nameWithType: Capabilities.Equals
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Equals
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.Equals*
        name: Equals
        nameWithType: Capabilities.Equals
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Equals
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Capabilities.Equals
  Microsoft.Owin.BuilderProperties.Capabilities.GetHashCode*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.GetHashCode*
        name: GetHashCode
        nameWithType: Capabilities.GetHashCode
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.GetHashCode
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.GetHashCode*
        name: GetHashCode
        nameWithType: Capabilities.GetHashCode
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.GetHashCode
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Capabilities.GetHashCode
  Microsoft.Owin.BuilderProperties.Capabilities.op_Equality*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.op_Equality*
        name: Equality
        nameWithType: Capabilities.Equality
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Equality
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.op_Equality*
        name: Equality
        nameWithType: Capabilities.Equality
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Equality
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Capabilities.op_Equality
  Microsoft.Owin.BuilderProperties.Capabilities.op_Inequality*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.op_Inequality*
        name: Inequality
        nameWithType: Capabilities.Inequality
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Inequality
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.op_Inequality*
        name: Inequality
        nameWithType: Capabilities.Inequality
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Inequality
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Capabilities.op_Inequality
  Microsoft.Owin.BuilderProperties.Capabilities.Get*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.Get*
        name: Get
        nameWithType: Capabilities.Get
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Get
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.Get*
        name: Get
        nameWithType: Capabilities.Get
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Get
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Capabilities.Get
  Microsoft.Owin.BuilderProperties.Capabilities.Set*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.Set*
        name: Set
        nameWithType: Capabilities.Set
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Set
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.Set*
        name: Set
        nameWithType: Capabilities.Set
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Set
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Capabilities.Set
  Microsoft.Owin.BuilderProperties.Capabilities.Dictionary*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.Dictionary*
        name: Dictionary
        nameWithType: Capabilities.Dictionary
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Dictionary
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.Dictionary*
        name: Dictionary
        nameWithType: Capabilities.Dictionary
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.Dictionary
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Capabilities.Dictionary
  Microsoft.Owin.BuilderProperties.Capabilities.SendFileVersion*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.SendFileVersion*
        name: SendFileVersion
        nameWithType: Capabilities.SendFileVersion
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.SendFileVersion
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.SendFileVersion*
        name: SendFileVersion
        nameWithType: Capabilities.SendFileVersion
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.SendFileVersion
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Capabilities.SendFileVersion
  Microsoft.Owin.BuilderProperties.Capabilities.WebSocketVersion*:
    name:
      CSharp:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.WebSocketVersion*
        name: WebSocketVersion
        nameWithType: Capabilities.WebSocketVersion
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.WebSocketVersion
        isExternal: true
      VB:
      - id: Microsoft.Owin.BuilderProperties.Capabilities.WebSocketVersion*
        name: WebSocketVersion
        nameWithType: Capabilities.WebSocketVersion
        qualifiedName: Microsoft.Owin.BuilderProperties.Capabilities.WebSocketVersion
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.BuilderProperties.Capabilities.WebSocketVersion
  System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task}:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Func`2
    parent: System
    commentId: T:System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task}
  Microsoft.Owin.Extensions.UseHandlerMiddleware.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Extensions.UseHandlerMiddleware.#ctor*
        name: UseHandlerMiddleware
        nameWithType: UseHandlerMiddleware.UseHandlerMiddleware
        qualifiedName: Microsoft.Owin.Extensions.UseHandlerMiddleware.UseHandlerMiddleware
        isExternal: true
      VB:
      - id: Microsoft.Owin.Extensions.UseHandlerMiddleware.#ctor*
        name: UseHandlerMiddleware
        nameWithType: UseHandlerMiddleware.UseHandlerMiddleware
        qualifiedName: Microsoft.Owin.Extensions.UseHandlerMiddleware.UseHandlerMiddleware
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Extensions.UseHandlerMiddleware.#ctor
  System.Func`3:
    name:
      CSharp:
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Func`3
  System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task}:
    name:
      CSharp:
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Threading.Tasks.Task
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Func`3
    parent: System
    commentId: T:System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task}
  Microsoft.Owin.Extensions.UseHandlerMiddleware.Invoke*:
    name:
      CSharp:
      - id: Microsoft.Owin.Extensions.UseHandlerMiddleware.Invoke*
        name: Invoke
        nameWithType: UseHandlerMiddleware.Invoke
        qualifiedName: Microsoft.Owin.Extensions.UseHandlerMiddleware.Invoke
        isExternal: true
      VB:
      - id: Microsoft.Owin.Extensions.UseHandlerMiddleware.Invoke*
        name: Invoke
        nameWithType: UseHandlerMiddleware.Invoke
        qualifiedName: Microsoft.Owin.Extensions.UseHandlerMiddleware.Invoke
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Extensions.UseHandlerMiddleware.Invoke
  Microsoft.Owin.Extensions.UseHandlerMiddleware:
    name:
      CSharp:
      - id: Microsoft.Owin.Extensions.UseHandlerMiddleware
        name: UseHandlerMiddleware
        nameWithType: UseHandlerMiddleware
        qualifiedName: Microsoft.Owin.Extensions.UseHandlerMiddleware
        isExternal: true
      VB:
      - id: Microsoft.Owin.Extensions.UseHandlerMiddleware
        name: UseHandlerMiddleware
        nameWithType: UseHandlerMiddleware
        qualifiedName: Microsoft.Owin.Extensions.UseHandlerMiddleware
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Extensions.UseHandlerMiddleware
  Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker*:
    name:
      CSharp:
      - id: Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker*
        name: UseStageMarker
        nameWithType: IntegratedPipelineExtensions.UseStageMarker
        qualifiedName: Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker
        isExternal: true
      VB:
      - id: Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker*
        name: UseStageMarker
        nameWithType: IntegratedPipelineExtensions.UseStageMarker
        qualifiedName: Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Extensions.IntegratedPipelineExtensions.UseStageMarker
  Owin:
    name:
      CSharp:
      - name: Owin
        nameWithType: Owin
        qualifiedName: Owin
      VB:
      - name: Owin
        nameWithType: Owin
        qualifiedName: Owin
    isDefinition: true
    commentId: N:Owin
  Owin.PipelineStage:
    name:
      CSharp:
      - id: Owin.PipelineStage
        name: PipelineStage
        nameWithType: PipelineStage
        qualifiedName: Owin.PipelineStage
        isExternal: true
      VB:
      - id: Owin.PipelineStage
        name: PipelineStage
        nameWithType: PipelineStage
        qualifiedName: Owin.PipelineStage
        isExternal: true
    isDefinition: true
    parent: Owin
    commentId: T:Owin.PipelineStage
  Microsoft.Owin.Extensions.IntegratedPipelineExtensions:
    name:
      CSharp:
      - id: Microsoft.Owin.Extensions.IntegratedPipelineExtensions
        name: IntegratedPipelineExtensions
        nameWithType: IntegratedPipelineExtensions
        qualifiedName: Microsoft.Owin.Extensions.IntegratedPipelineExtensions
        isExternal: true
      VB:
      - id: Microsoft.Owin.Extensions.IntegratedPipelineExtensions
        name: IntegratedPipelineExtensions
        nameWithType: IntegratedPipelineExtensions
        qualifiedName: Microsoft.Owin.Extensions.IntegratedPipelineExtensions
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Extensions.IntegratedPipelineExtensions
  Microsoft.Owin.Extensions:
    name:
      CSharp:
      - name: Microsoft.Owin.Extensions
        nameWithType: Microsoft.Owin.Extensions
        qualifiedName: Microsoft.Owin.Extensions
      VB:
      - name: Microsoft.Owin.Extensions
        nameWithType: Microsoft.Owin.Extensions
        qualifiedName: Microsoft.Owin.Extensions
    isDefinition: true
    commentId: N:Microsoft.Owin.Extensions
  Microsoft.Owin.Helpers.WebHelpers.ParseForm*:
    name:
      CSharp:
      - id: Microsoft.Owin.Helpers.WebHelpers.ParseForm*
        name: ParseForm
        nameWithType: WebHelpers.ParseForm
        qualifiedName: Microsoft.Owin.Helpers.WebHelpers.ParseForm
        isExternal: true
      VB:
      - id: Microsoft.Owin.Helpers.WebHelpers.ParseForm*
        name: ParseForm
        nameWithType: WebHelpers.ParseForm
        qualifiedName: Microsoft.Owin.Helpers.WebHelpers.ParseForm
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Helpers.WebHelpers.ParseForm
  Microsoft.Owin.Helpers.WebHelpers:
    name:
      CSharp:
      - id: Microsoft.Owin.Helpers.WebHelpers
        name: WebHelpers
        nameWithType: WebHelpers
        qualifiedName: Microsoft.Owin.Helpers.WebHelpers
        isExternal: true
      VB:
      - id: Microsoft.Owin.Helpers.WebHelpers
        name: WebHelpers
        nameWithType: WebHelpers
        qualifiedName: Microsoft.Owin.Helpers.WebHelpers
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Helpers.WebHelpers
  Microsoft.Owin.Helpers:
    name:
      CSharp:
      - name: Microsoft.Owin.Helpers
        nameWithType: Microsoft.Owin.Helpers
        qualifiedName: Microsoft.Owin.Helpers
      VB:
      - name: Microsoft.Owin.Helpers
        nameWithType: Microsoft.Owin.Helpers
        qualifiedName: Microsoft.Owin.Helpers
    isDefinition: true
    commentId: N:Microsoft.Owin.Helpers
  Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie*:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie*
        name: GetRequestCookie
        nameWithType: ICookieManager.GetRequestCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie*
        name: GetRequestCookie
        nameWithType: ICookieManager.GetRequestCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie
  Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie*:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie*
        name: AppendResponseCookie
        nameWithType: ICookieManager.AppendResponseCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie*
        name: AppendResponseCookie
        nameWithType: ICookieManager.AppendResponseCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie
  Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie*:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie*
        name: DeleteCookie
        nameWithType: ICookieManager.DeleteCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie*
        name: DeleteCookie
        nameWithType: ICookieManager.DeleteCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie
  Microsoft.Owin.Infrastructure.ICookieManager:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ICookieManager
        name: ICookieManager
        nameWithType: ICookieManager
        qualifiedName: Microsoft.Owin.Infrastructure.ICookieManager
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.ICookieManager
        name: ICookieManager
        nameWithType: ICookieManager
        qualifiedName: Microsoft.Owin.Infrastructure.ICookieManager
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Infrastructure
    commentId: T:Microsoft.Owin.Infrastructure.ICookieManager
  Microsoft.Owin.Infrastructure:
    name:
      CSharp:
      - name: Microsoft.Owin.Infrastructure
        nameWithType: Microsoft.Owin.Infrastructure
        qualifiedName: Microsoft.Owin.Infrastructure
      VB:
      - name: Microsoft.Owin.Infrastructure
        nameWithType: Microsoft.Owin.Infrastructure
        qualifiedName: Microsoft.Owin.Infrastructure
    isDefinition: true
    commentId: N:Microsoft.Owin.Infrastructure
  Microsoft.Owin.Infrastructure.ChunkingCookieManager.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.#ctor*
        name: ChunkingCookieManager
        nameWithType: ChunkingCookieManager.ChunkingCookieManager
        qualifiedName: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkingCookieManager
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.#ctor*
        name: ChunkingCookieManager
        nameWithType: ChunkingCookieManager.ChunkingCookieManager
        qualifiedName: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkingCookieManager
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Infrastructure.ChunkingCookieManager.#ctor
  Microsoft.Owin.Infrastructure.ChunkingCookieManager.GetRequestCookie*:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.GetRequestCookie*
        name: GetRequestCookie
        nameWithType: ChunkingCookieManager.GetRequestCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ChunkingCookieManager.GetRequestCookie
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.GetRequestCookie*
        name: GetRequestCookie
        nameWithType: ChunkingCookieManager.GetRequestCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ChunkingCookieManager.GetRequestCookie
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Infrastructure.ChunkingCookieManager.GetRequestCookie
  Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie(Microsoft.Owin.IOwinContext,System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie(Microsoft.Owin.IOwinContext,System.String)
        name: GetRequestCookie
        nameWithType: ICookieManager.GetRequestCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie(Microsoft.Owin.IOwinContext,System.String)
        name: GetRequestCookie
        nameWithType: ICookieManager.GetRequestCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.Infrastructure.ICookieManager
    commentId: M:Microsoft.Owin.Infrastructure.ICookieManager.GetRequestCookie(Microsoft.Owin.IOwinContext,System.String)
  Microsoft.Owin.Infrastructure.ChunkingCookieManager.AppendResponseCookie*:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.AppendResponseCookie*
        name: AppendResponseCookie
        nameWithType: ChunkingCookieManager.AppendResponseCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ChunkingCookieManager.AppendResponseCookie
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.AppendResponseCookie*
        name: AppendResponseCookie
        nameWithType: ChunkingCookieManager.AppendResponseCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ChunkingCookieManager.AppendResponseCookie
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Infrastructure.ChunkingCookieManager.AppendResponseCookie
  ? Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie(Microsoft.Owin.IOwinContext,System.String,System.String,Microsoft.Owin.CookieOptions)
  : name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie(Microsoft.Owin.IOwinContext,System.String,System.String,Microsoft.Owin.CookieOptions)
        name: AppendResponseCookie
        nameWithType: ICookieManager.AppendResponseCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Owin.CookieOptions
        name: CookieOptions
        nameWithType: CookieOptions
        qualifiedName: Microsoft.Owin.CookieOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie(Microsoft.Owin.IOwinContext,System.String,System.String,Microsoft.Owin.CookieOptions)
        name: AppendResponseCookie
        nameWithType: ICookieManager.AppendResponseCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Owin.CookieOptions
        name: CookieOptions
        nameWithType: CookieOptions
        qualifiedName: Microsoft.Owin.CookieOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.Infrastructure.ICookieManager
    commentId: M:Microsoft.Owin.Infrastructure.ICookieManager.AppendResponseCookie(Microsoft.Owin.IOwinContext,System.String,System.String,Microsoft.Owin.CookieOptions)
  Microsoft.Owin.Infrastructure.ChunkingCookieManager.DeleteCookie*:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.DeleteCookie*
        name: DeleteCookie
        nameWithType: ChunkingCookieManager.DeleteCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ChunkingCookieManager.DeleteCookie
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.DeleteCookie*
        name: DeleteCookie
        nameWithType: ChunkingCookieManager.DeleteCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ChunkingCookieManager.DeleteCookie
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Infrastructure.ChunkingCookieManager.DeleteCookie
  ? Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie(Microsoft.Owin.IOwinContext,System.String,Microsoft.Owin.CookieOptions)
  : name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie(Microsoft.Owin.IOwinContext,System.String,Microsoft.Owin.CookieOptions)
        name: DeleteCookie
        nameWithType: ICookieManager.DeleteCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Owin.CookieOptions
        name: CookieOptions
        nameWithType: CookieOptions
        qualifiedName: Microsoft.Owin.CookieOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie(Microsoft.Owin.IOwinContext,System.String,Microsoft.Owin.CookieOptions)
        name: DeleteCookie
        nameWithType: ICookieManager.DeleteCookie
        qualifiedName: Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Owin.CookieOptions
        name: CookieOptions
        nameWithType: CookieOptions
        qualifiedName: Microsoft.Owin.CookieOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.Infrastructure.ICookieManager
    commentId: M:Microsoft.Owin.Infrastructure.ICookieManager.DeleteCookie(Microsoft.Owin.IOwinContext,System.String,Microsoft.Owin.CookieOptions)
  Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkSize*:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkSize*
        name: ChunkSize
        nameWithType: ChunkingCookieManager.ChunkSize
        qualifiedName: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkSize
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkSize*
        name: ChunkSize
        nameWithType: ChunkingCookieManager.ChunkSize
        qualifiedName: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkSize
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Infrastructure.ChunkingCookieManager.ChunkSize
  Microsoft.Owin.Infrastructure.ChunkingCookieManager.ThrowForPartialCookies*:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ThrowForPartialCookies*
        name: ThrowForPartialCookies
        nameWithType: ChunkingCookieManager.ThrowForPartialCookies
        qualifiedName: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ThrowForPartialCookies
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ThrowForPartialCookies*
        name: ThrowForPartialCookies
        nameWithType: ChunkingCookieManager.ThrowForPartialCookies
        qualifiedName: Microsoft.Owin.Infrastructure.ChunkingCookieManager.ThrowForPartialCookies
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Infrastructure.ChunkingCookieManager.ThrowForPartialCookies
  Microsoft.Owin.Infrastructure.ChunkingCookieManager:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager
        name: ChunkingCookieManager
        nameWithType: ChunkingCookieManager
        qualifiedName: Microsoft.Owin.Infrastructure.ChunkingCookieManager
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.ChunkingCookieManager
        name: ChunkingCookieManager
        nameWithType: ChunkingCookieManager
        qualifiedName: Microsoft.Owin.Infrastructure.ChunkingCookieManager
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Infrastructure.ChunkingCookieManager
  System.DateTimeOffset:
    name:
      CSharp:
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
      VB:
      - id: System.DateTimeOffset
        name: DateTimeOffset
        nameWithType: DateTimeOffset
        qualifiedName: System.DateTimeOffset
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.DateTimeOffset
  Microsoft.Owin.Infrastructure.ISystemClock.UtcNow*:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ISystemClock.UtcNow*
        name: UtcNow
        nameWithType: ISystemClock.UtcNow
        qualifiedName: Microsoft.Owin.Infrastructure.ISystemClock.UtcNow
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.ISystemClock.UtcNow*
        name: UtcNow
        nameWithType: ISystemClock.UtcNow
        qualifiedName: Microsoft.Owin.Infrastructure.ISystemClock.UtcNow
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Infrastructure.ISystemClock.UtcNow
  Microsoft.Owin.Infrastructure.ISystemClock:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ISystemClock
        name: ISystemClock
        nameWithType: ISystemClock
        qualifiedName: Microsoft.Owin.Infrastructure.ISystemClock
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.ISystemClock
        name: ISystemClock
        nameWithType: ISystemClock
        qualifiedName: Microsoft.Owin.Infrastructure.ISystemClock
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Infrastructure
    commentId: T:Microsoft.Owin.Infrastructure.ISystemClock
  Microsoft.Owin.Infrastructure.SystemClock.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.SystemClock.#ctor*
        name: SystemClock
        nameWithType: SystemClock.SystemClock
        qualifiedName: Microsoft.Owin.Infrastructure.SystemClock.SystemClock
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.SystemClock.#ctor*
        name: SystemClock
        nameWithType: SystemClock.SystemClock
        qualifiedName: Microsoft.Owin.Infrastructure.SystemClock.SystemClock
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Infrastructure.SystemClock.#ctor
  Microsoft.Owin.Infrastructure.SystemClock.UtcNow*:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.SystemClock.UtcNow*
        name: UtcNow
        nameWithType: SystemClock.UtcNow
        qualifiedName: Microsoft.Owin.Infrastructure.SystemClock.UtcNow
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.SystemClock.UtcNow*
        name: UtcNow
        nameWithType: SystemClock.UtcNow
        qualifiedName: Microsoft.Owin.Infrastructure.SystemClock.UtcNow
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Infrastructure.SystemClock.UtcNow
  Microsoft.Owin.Infrastructure.ISystemClock.UtcNow:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.ISystemClock.UtcNow
        name: UtcNow
        nameWithType: ISystemClock.UtcNow
        qualifiedName: Microsoft.Owin.Infrastructure.ISystemClock.UtcNow
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.ISystemClock.UtcNow
        name: UtcNow
        nameWithType: ISystemClock.UtcNow
        qualifiedName: Microsoft.Owin.Infrastructure.ISystemClock.UtcNow
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Infrastructure.ISystemClock
    commentId: P:Microsoft.Owin.Infrastructure.ISystemClock.UtcNow
  Microsoft.Owin.Infrastructure.SystemClock:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.SystemClock
        name: SystemClock
        nameWithType: SystemClock
        qualifiedName: Microsoft.Owin.Infrastructure.SystemClock
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.SystemClock
        name: SystemClock
        nameWithType: SystemClock
        qualifiedName: Microsoft.Owin.Infrastructure.SystemClock
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Infrastructure.SystemClock
  Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString*:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString*
        name: AddQueryString
        nameWithType: WebUtilities.AddQueryString
        qualifiedName: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString*
        name: AddQueryString
        nameWithType: WebUtilities.AddQueryString
        qualifiedName: Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Infrastructure.WebUtilities.AddQueryString
  Microsoft.Owin.Infrastructure.WebUtilities:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.WebUtilities
        name: WebUtilities
        nameWithType: WebUtilities
        qualifiedName: Microsoft.Owin.Infrastructure.WebUtilities
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.WebUtilities
        name: WebUtilities
        nameWithType: WebUtilities
        qualifiedName: Microsoft.Owin.Infrastructure.WebUtilities
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Infrastructure.WebUtilities
  Microsoft.Owin.Infrastructure.SignatureConversions.AddConversions*:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.SignatureConversions.AddConversions*
        name: AddConversions
        nameWithType: SignatureConversions.AddConversions
        qualifiedName: Microsoft.Owin.Infrastructure.SignatureConversions.AddConversions
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.SignatureConversions.AddConversions*
        name: AddConversions
        nameWithType: SignatureConversions.AddConversions
        qualifiedName: Microsoft.Owin.Infrastructure.SignatureConversions.AddConversions
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Infrastructure.SignatureConversions.AddConversions
  Microsoft.Owin.Infrastructure.SignatureConversions:
    name:
      CSharp:
      - id: Microsoft.Owin.Infrastructure.SignatureConversions
        name: SignatureConversions
        nameWithType: SignatureConversions
        qualifiedName: Microsoft.Owin.Infrastructure.SignatureConversions
        isExternal: true
      VB:
      - id: Microsoft.Owin.Infrastructure.SignatureConversions
        name: SignatureConversions
        nameWithType: SignatureConversions
        qualifiedName: Microsoft.Owin.Infrastructure.SignatureConversions
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Infrastructure.SignatureConversions
  Microsoft.Owin.Logging:
    name:
      CSharp:
      - name: Microsoft.Owin.Logging
        nameWithType: Microsoft.Owin.Logging
        qualifiedName: Microsoft.Owin.Logging
      VB:
      - name: Microsoft.Owin.Logging
        nameWithType: Microsoft.Owin.Logging
        qualifiedName: Microsoft.Owin.Logging
    isDefinition: true
    commentId: N:Microsoft.Owin.Logging
  Microsoft.Owin.Logging.ILoggerFactory:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.ILoggerFactory
        name: ILoggerFactory
        nameWithType: ILoggerFactory
        qualifiedName: Microsoft.Owin.Logging.ILoggerFactory
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.ILoggerFactory
        name: ILoggerFactory
        nameWithType: ILoggerFactory
        qualifiedName: Microsoft.Owin.Logging.ILoggerFactory
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Logging
    commentId: T:Microsoft.Owin.Logging.ILoggerFactory
  Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory*:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory*
        name: SetLoggerFactory
        nameWithType: AppBuilderLoggerExtensions.SetLoggerFactory
        qualifiedName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory*
        name: SetLoggerFactory
        nameWithType: AppBuilderLoggerExtensions.SetLoggerFactory
        qualifiedName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory
  Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory*:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory*
        name: GetLoggerFactory
        nameWithType: AppBuilderLoggerExtensions.GetLoggerFactory
        qualifiedName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory*
        name: GetLoggerFactory
        nameWithType: AppBuilderLoggerExtensions.GetLoggerFactory
        qualifiedName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory
  Microsoft.Owin.Logging.ILogger:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Logging
    commentId: T:Microsoft.Owin.Logging.ILogger
  Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger*:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger*
        name: CreateLogger
        nameWithType: AppBuilderLoggerExtensions.CreateLogger
        qualifiedName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger*
        name: CreateLogger
        nameWithType: AppBuilderLoggerExtensions.CreateLogger
        qualifiedName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger
  Microsoft.Owin.Logging.AppBuilderLoggerExtensions:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.AppBuilderLoggerExtensions
        name: AppBuilderLoggerExtensions
        nameWithType: AppBuilderLoggerExtensions
        qualifiedName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.AppBuilderLoggerExtensions
        name: AppBuilderLoggerExtensions
        nameWithType: AppBuilderLoggerExtensions
        qualifiedName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Logging.AppBuilderLoggerExtensions
  Microsoft.Owin.Logging.ILoggerFactory.Create*:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.ILoggerFactory.Create*
        name: Create
        nameWithType: ILoggerFactory.Create
        qualifiedName: Microsoft.Owin.Logging.ILoggerFactory.Create
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.ILoggerFactory.Create*
        name: Create
        nameWithType: ILoggerFactory.Create
        qualifiedName: Microsoft.Owin.Logging.ILoggerFactory.Create
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Logging.ILoggerFactory.Create
  Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger,System.Diagnostics.TraceEventType):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger,System.Diagnostics.TraceEventType)
        name: IsEnabled
        nameWithType: LoggerExtensions.IsEnabled
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Diagnostics.TraceEventType
        name: TraceEventType
        nameWithType: TraceEventType
        qualifiedName: System.Diagnostics.TraceEventType
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger,System.Diagnostics.TraceEventType)
        name: IsEnabled
        nameWithType: LoggerExtensions.IsEnabled
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Diagnostics.TraceEventType
        name: TraceEventType
        nameWithType: TraceEventType
        qualifiedName: System.Diagnostics.TraceEventType
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger,System.Diagnostics.TraceEventType)
  Microsoft.Owin.Logging.LoggerExtensions:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions
        name: LoggerExtensions
        nameWithType: LoggerExtensions
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions
        name: LoggerExtensions
        nameWithType: LoggerExtensions
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Logging
    commentId: T:Microsoft.Owin.Logging.LoggerExtensions
  Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(System.Diagnostics.TraceEventType):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(System.Diagnostics.TraceEventType)
        name: IsEnabled
        nameWithType: LoggerExtensions.IsEnabled
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Diagnostics.TraceEventType
        name: TraceEventType
        nameWithType: TraceEventType
        qualifiedName: System.Diagnostics.TraceEventType
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(System.Diagnostics.TraceEventType)
        name: IsEnabled
        nameWithType: LoggerExtensions.IsEnabled
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Diagnostics.TraceEventType
        name: TraceEventType
        nameWithType: TraceEventType
        qualifiedName: System.Diagnostics.TraceEventType
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger,System.Diagnostics.TraceEventType)
    parent: Microsoft.Owin.Logging.LoggerExtensions
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger,System.Diagnostics.TraceEventType)
  Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger,System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger,System.String)
        name: WriteVerbose
        nameWithType: LoggerExtensions.WriteVerbose
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger,System.String)
        name: WriteVerbose
        nameWithType: LoggerExtensions.WriteVerbose
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger,System.String)
  Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(System.String)
        name: WriteVerbose
        nameWithType: LoggerExtensions.WriteVerbose
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(System.String)
        name: WriteVerbose
        nameWithType: LoggerExtensions.WriteVerbose
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger,System.String)
    parent: Microsoft.Owin.Logging.LoggerExtensions
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger,System.String)
  Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger,System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger,System.String)
        name: WriteInformation
        nameWithType: LoggerExtensions.WriteInformation
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger,System.String)
        name: WriteInformation
        nameWithType: LoggerExtensions.WriteInformation
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger,System.String)
  Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(System.String)
        name: WriteInformation
        nameWithType: LoggerExtensions.WriteInformation
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(System.String)
        name: WriteInformation
        nameWithType: LoggerExtensions.WriteInformation
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger,System.String)
    parent: Microsoft.Owin.Logging.LoggerExtensions
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger,System.String)
  Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.String[]):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.String[])
        name: WriteWarning
        nameWithType: LoggerExtensions.WriteWarning
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.String[])
        name: WriteWarning
        nameWithType: LoggerExtensions.WriteWarning
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.String[])
  Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.String[]):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.String[])
        name: WriteWarning
        nameWithType: LoggerExtensions.WriteWarning
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.String[])
        name: WriteWarning
        nameWithType: LoggerExtensions.WriteWarning
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.String[])
    parent: Microsoft.Owin.Logging.LoggerExtensions
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.String[])
  Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.Exception):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
        name: WriteWarning
        nameWithType: LoggerExtensions.WriteWarning
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
        name: WriteWarning
        nameWithType: LoggerExtensions.WriteWarning
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.Exception):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.Exception)
        name: WriteWarning
        nameWithType: LoggerExtensions.WriteWarning
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.Exception)
        name: WriteWarning
        nameWithType: LoggerExtensions.WriteWarning
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
    parent: Microsoft.Owin.Logging.LoggerExtensions
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String)
        name: WriteError
        nameWithType: LoggerExtensions.WriteError
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String)
        name: WriteError
        nameWithType: LoggerExtensions.WriteError
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String)
  Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String)
        name: WriteError
        nameWithType: LoggerExtensions.WriteError
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String)
        name: WriteError
        nameWithType: LoggerExtensions.WriteError
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String)
    parent: Microsoft.Owin.Logging.LoggerExtensions
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String)
  Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String,System.Exception):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
        name: WriteError
        nameWithType: LoggerExtensions.WriteError
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
        name: WriteError
        nameWithType: LoggerExtensions.WriteError
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String,System.Exception):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String,System.Exception)
        name: WriteError
        nameWithType: LoggerExtensions.WriteError
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String,System.Exception)
        name: WriteError
        nameWithType: LoggerExtensions.WriteError
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
    parent: Microsoft.Owin.Logging.LoggerExtensions
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String)
        name: WriteCritical
        nameWithType: LoggerExtensions.WriteCritical
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String)
        name: WriteCritical
        nameWithType: LoggerExtensions.WriteCritical
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String)
  Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String)
        name: WriteCritical
        nameWithType: LoggerExtensions.WriteCritical
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String)
        name: WriteCritical
        nameWithType: LoggerExtensions.WriteCritical
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String)
    parent: Microsoft.Owin.Logging.LoggerExtensions
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String)
  Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String,System.Exception):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
        name: WriteCritical
        nameWithType: LoggerExtensions.WriteCritical
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
        name: WriteCritical
        nameWithType: LoggerExtensions.WriteCritical
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Owin.Logging.ILogger
        name: ILogger
        nameWithType: ILogger
        qualifiedName: Microsoft.Owin.Logging.ILogger
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String,System.Exception):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String,System.Exception)
        name: WriteCritical
        nameWithType: LoggerExtensions.WriteCritical
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String,System.Exception)
        name: WriteCritical
        nameWithType: LoggerExtensions.WriteCritical
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
    parent: Microsoft.Owin.Logging.LoggerExtensions
    commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  System.Diagnostics.TraceEventType:
    name:
      CSharp:
      - id: System.Diagnostics.TraceEventType
        name: TraceEventType
        nameWithType: TraceEventType
        qualifiedName: System.Diagnostics.TraceEventType
        isExternal: true
      VB:
      - id: System.Diagnostics.TraceEventType
        name: TraceEventType
        nameWithType: TraceEventType
        qualifiedName: System.Diagnostics.TraceEventType
        isExternal: true
    isDefinition: true
  System.Exception:
    name:
      CSharp:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      VB:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Exception
  System.Func{System.Object,System.Exception,System.String}:
    name:
      CSharp:
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Func`3
    parent: System
    commentId: T:System.Func{System.Object,System.Exception,System.String}
  Microsoft.Owin.Logging.ILogger.WriteCore*:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.ILogger.WriteCore*
        name: WriteCore
        nameWithType: ILogger.WriteCore
        qualifiedName: Microsoft.Owin.Logging.ILogger.WriteCore
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.ILogger.WriteCore*
        name: WriteCore
        nameWithType: ILogger.WriteCore
        qualifiedName: Microsoft.Owin.Logging.ILogger.WriteCore
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Logging.ILogger.WriteCore
  Microsoft.Owin.Logging.LoggerFactory.Default*:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerFactory.Default*
        name: Default
        nameWithType: LoggerFactory.Default
        qualifiedName: Microsoft.Owin.Logging.LoggerFactory.Default
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.LoggerFactory.Default*
        name: Default
        nameWithType: LoggerFactory.Default
        qualifiedName: Microsoft.Owin.Logging.LoggerFactory.Default
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Logging.LoggerFactory.Default
  Microsoft.Owin.Logging.LoggerFactory:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerFactory
        name: LoggerFactory
        nameWithType: LoggerFactory
        qualifiedName: Microsoft.Owin.Logging.LoggerFactory
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.LoggerFactory
        name: LoggerFactory
        nameWithType: LoggerFactory
        qualifiedName: Microsoft.Owin.Logging.LoggerFactory
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Logging.LoggerFactory
  Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor*
        name: DiagnosticsLoggerFactory
        nameWithType: DiagnosticsLoggerFactory.DiagnosticsLoggerFactory
        qualifiedName: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.DiagnosticsLoggerFactory
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor*
        name: DiagnosticsLoggerFactory
        nameWithType: DiagnosticsLoggerFactory.DiagnosticsLoggerFactory
        qualifiedName: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.DiagnosticsLoggerFactory
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor
  System.Diagnostics.SourceSwitch:
    name:
      CSharp:
      - id: System.Diagnostics.SourceSwitch
        name: SourceSwitch
        nameWithType: SourceSwitch
        qualifiedName: System.Diagnostics.SourceSwitch
        isExternal: true
      VB:
      - id: System.Diagnostics.SourceSwitch
        name: SourceSwitch
        nameWithType: SourceSwitch
        qualifiedName: System.Diagnostics.SourceSwitch
        isExternal: true
    isDefinition: true
    commentId: '!:System.Diagnostics.SourceSwitch'
  System.Diagnostics.TraceListener:
    name:
      CSharp:
      - id: System.Diagnostics.TraceListener
        name: TraceListener
        nameWithType: TraceListener
        qualifiedName: System.Diagnostics.TraceListener
        isExternal: true
      VB:
      - id: System.Diagnostics.TraceListener
        name: TraceListener
        nameWithType: TraceListener
        qualifiedName: System.Diagnostics.TraceListener
        isExternal: true
    isDefinition: true
    commentId: '!:System.Diagnostics.TraceListener'
  Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create*:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create*
        name: Create
        nameWithType: DiagnosticsLoggerFactory.Create
        qualifiedName: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create*
        name: Create
        nameWithType: DiagnosticsLoggerFactory.Create
        qualifiedName: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create
  Microsoft.Owin.Logging.ILoggerFactory.Create(System.String):
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.ILoggerFactory.Create(System.String)
        name: Create
        nameWithType: ILoggerFactory.Create
        qualifiedName: Microsoft.Owin.Logging.ILoggerFactory.Create
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Owin.Logging.ILoggerFactory.Create(System.String)
        name: Create
        nameWithType: ILoggerFactory.Create
        qualifiedName: Microsoft.Owin.Logging.ILoggerFactory.Create
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Owin.Logging.ILoggerFactory
    commentId: M:Microsoft.Owin.Logging.ILoggerFactory.Create(System.String)
  Microsoft.Owin.Logging.DiagnosticsLoggerFactory:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.DiagnosticsLoggerFactory
        name: DiagnosticsLoggerFactory
        nameWithType: DiagnosticsLoggerFactory
        qualifiedName: Microsoft.Owin.Logging.DiagnosticsLoggerFactory
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.DiagnosticsLoggerFactory
        name: DiagnosticsLoggerFactory
        nameWithType: DiagnosticsLoggerFactory
        qualifiedName: Microsoft.Owin.Logging.DiagnosticsLoggerFactory
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Logging.DiagnosticsLoggerFactory
  Microsoft.Owin.Logging.LoggerExtensions.IsEnabled*:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled*
        name: IsEnabled
        nameWithType: LoggerExtensions.IsEnabled
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled*
        name: IsEnabled
        nameWithType: LoggerExtensions.IsEnabled
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Logging.LoggerExtensions.IsEnabled
  Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose*:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose*
        name: WriteVerbose
        nameWithType: LoggerExtensions.WriteVerbose
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose*
        name: WriteVerbose
        nameWithType: LoggerExtensions.WriteVerbose
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose
  Microsoft.Owin.Logging.LoggerExtensions.WriteInformation*:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation*
        name: WriteInformation
        nameWithType: LoggerExtensions.WriteInformation
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation*
        name: WriteInformation
        nameWithType: LoggerExtensions.WriteInformation
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Logging.LoggerExtensions.WriteInformation
  Microsoft.Owin.Logging.LoggerExtensions.WriteWarning*:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning*
        name: WriteWarning
        nameWithType: LoggerExtensions.WriteWarning
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning*
        name: WriteWarning
        nameWithType: LoggerExtensions.WriteWarning
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
  Microsoft.Owin.Logging.LoggerExtensions.WriteError*:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteError*
        name: WriteError
        nameWithType: LoggerExtensions.WriteError
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteError*
        name: WriteError
        nameWithType: LoggerExtensions.WriteError
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Logging.LoggerExtensions.WriteError
  Microsoft.Owin.Logging.LoggerExtensions.WriteCritical*:
    name:
      CSharp:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical*
        name: WriteCritical
        nameWithType: LoggerExtensions.WriteCritical
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
        isExternal: true
      VB:
      - id: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical*
        name: WriteCritical
        nameWithType: LoggerExtensions.WriteCritical
        qualifiedName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
  Microsoft.Owin.Mapping:
    name:
      CSharp:
      - name: Microsoft.Owin.Mapping
        nameWithType: Microsoft.Owin.Mapping
        qualifiedName: Microsoft.Owin.Mapping
      VB:
      - name: Microsoft.Owin.Mapping
        nameWithType: Microsoft.Owin.Mapping
        qualifiedName: Microsoft.Owin.Mapping
    isDefinition: true
    commentId: N:Microsoft.Owin.Mapping
  Microsoft.Owin.Mapping.MapOptions:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapOptions
        name: MapOptions
        nameWithType: MapOptions
        qualifiedName: Microsoft.Owin.Mapping.MapOptions
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapOptions
        name: MapOptions
        nameWithType: MapOptions
        qualifiedName: Microsoft.Owin.Mapping.MapOptions
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Mapping
    commentId: T:Microsoft.Owin.Mapping.MapOptions
  Microsoft.Owin.Mapping.MapMiddleware.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapMiddleware.#ctor*
        name: MapMiddleware
        nameWithType: MapMiddleware.MapMiddleware
        qualifiedName: Microsoft.Owin.Mapping.MapMiddleware.MapMiddleware
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapMiddleware.#ctor*
        name: MapMiddleware
        nameWithType: MapMiddleware.MapMiddleware
        qualifiedName: Microsoft.Owin.Mapping.MapMiddleware.MapMiddleware
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Mapping.MapMiddleware.#ctor
  Microsoft.Owin.Mapping.MapMiddleware.Invoke*:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapMiddleware.Invoke*
        name: Invoke
        nameWithType: MapMiddleware.Invoke
        qualifiedName: Microsoft.Owin.Mapping.MapMiddleware.Invoke
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapMiddleware.Invoke*
        name: Invoke
        nameWithType: MapMiddleware.Invoke
        qualifiedName: Microsoft.Owin.Mapping.MapMiddleware.Invoke
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Mapping.MapMiddleware.Invoke
  Microsoft.Owin.Mapping.MapMiddleware:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapMiddleware
        name: MapMiddleware
        nameWithType: MapMiddleware
        qualifiedName: Microsoft.Owin.Mapping.MapMiddleware
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapMiddleware
        name: MapMiddleware
        nameWithType: MapMiddleware
        qualifiedName: Microsoft.Owin.Mapping.MapMiddleware
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Mapping.MapMiddleware
  Microsoft.Owin.Mapping.MapOptions.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapOptions.#ctor*
        name: MapOptions
        nameWithType: MapOptions.MapOptions
        qualifiedName: Microsoft.Owin.Mapping.MapOptions.MapOptions
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapOptions.#ctor*
        name: MapOptions
        nameWithType: MapOptions.MapOptions
        qualifiedName: Microsoft.Owin.Mapping.MapOptions.MapOptions
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Mapping.MapOptions.#ctor
  Microsoft.Owin.Mapping.MapOptions.PathMatch*:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapOptions.PathMatch*
        name: PathMatch
        nameWithType: MapOptions.PathMatch
        qualifiedName: Microsoft.Owin.Mapping.MapOptions.PathMatch
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapOptions.PathMatch*
        name: PathMatch
        nameWithType: MapOptions.PathMatch
        qualifiedName: Microsoft.Owin.Mapping.MapOptions.PathMatch
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Mapping.MapOptions.PathMatch
  Microsoft.Owin.Mapping.MapOptions.Branch*:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapOptions.Branch*
        name: Branch
        nameWithType: MapOptions.Branch
        qualifiedName: Microsoft.Owin.Mapping.MapOptions.Branch
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapOptions.Branch*
        name: Branch
        nameWithType: MapOptions.Branch
        qualifiedName: Microsoft.Owin.Mapping.MapOptions.Branch
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Mapping.MapOptions.Branch
  Microsoft.Owin.Mapping.MapWhenOptions:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapWhenOptions
        name: MapWhenOptions
        nameWithType: MapWhenOptions
        qualifiedName: Microsoft.Owin.Mapping.MapWhenOptions
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapWhenOptions
        name: MapWhenOptions
        nameWithType: MapWhenOptions
        qualifiedName: Microsoft.Owin.Mapping.MapWhenOptions
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Mapping
    commentId: T:Microsoft.Owin.Mapping.MapWhenOptions
  Microsoft.Owin.Mapping.MapWhenMiddleware.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapWhenMiddleware.#ctor*
        name: MapWhenMiddleware
        nameWithType: MapWhenMiddleware.MapWhenMiddleware
        qualifiedName: Microsoft.Owin.Mapping.MapWhenMiddleware.MapWhenMiddleware
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapWhenMiddleware.#ctor*
        name: MapWhenMiddleware
        nameWithType: MapWhenMiddleware.MapWhenMiddleware
        qualifiedName: Microsoft.Owin.Mapping.MapWhenMiddleware.MapWhenMiddleware
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Mapping.MapWhenMiddleware.#ctor
  Microsoft.Owin.Mapping.MapWhenMiddleware.Invoke*:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapWhenMiddleware.Invoke*
        name: Invoke
        nameWithType: MapWhenMiddleware.Invoke
        qualifiedName: Microsoft.Owin.Mapping.MapWhenMiddleware.Invoke
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapWhenMiddleware.Invoke*
        name: Invoke
        nameWithType: MapWhenMiddleware.Invoke
        qualifiedName: Microsoft.Owin.Mapping.MapWhenMiddleware.Invoke
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Mapping.MapWhenMiddleware.Invoke
  Microsoft.Owin.Mapping.MapWhenMiddleware:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapWhenMiddleware
        name: MapWhenMiddleware
        nameWithType: MapWhenMiddleware
        qualifiedName: Microsoft.Owin.Mapping.MapWhenMiddleware
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapWhenMiddleware
        name: MapWhenMiddleware
        nameWithType: MapWhenMiddleware
        qualifiedName: Microsoft.Owin.Mapping.MapWhenMiddleware
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Mapping.MapWhenMiddleware
  Microsoft.Owin.Mapping.MapWhenOptions.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapWhenOptions.#ctor*
        name: MapWhenOptions
        nameWithType: MapWhenOptions.MapWhenOptions
        qualifiedName: Microsoft.Owin.Mapping.MapWhenOptions.MapWhenOptions
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapWhenOptions.#ctor*
        name: MapWhenOptions
        nameWithType: MapWhenOptions.MapWhenOptions
        qualifiedName: Microsoft.Owin.Mapping.MapWhenOptions.MapWhenOptions
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Mapping.MapWhenOptions.#ctor
  System.Func{Microsoft.Owin.IOwinContext,System.Boolean}:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Func`2
    parent: System
    commentId: T:System.Func{Microsoft.Owin.IOwinContext,System.Boolean}
  Microsoft.Owin.Mapping.MapWhenOptions.Predicate*:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapWhenOptions.Predicate*
        name: Predicate
        nameWithType: MapWhenOptions.Predicate
        qualifiedName: Microsoft.Owin.Mapping.MapWhenOptions.Predicate
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapWhenOptions.Predicate*
        name: Predicate
        nameWithType: MapWhenOptions.Predicate
        qualifiedName: Microsoft.Owin.Mapping.MapWhenOptions.Predicate
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Mapping.MapWhenOptions.Predicate
  System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task{System.Boolean}}:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.IOwinContext
        name: IOwinContext
        nameWithType: IOwinContext
        qualifiedName: Microsoft.Owin.IOwinContext
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Func`2
    parent: System
    commentId: T:System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task{System.Boolean}}
  Microsoft.Owin.Mapping.MapWhenOptions.PredicateAsync*:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapWhenOptions.PredicateAsync*
        name: PredicateAsync
        nameWithType: MapWhenOptions.PredicateAsync
        qualifiedName: Microsoft.Owin.Mapping.MapWhenOptions.PredicateAsync
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapWhenOptions.PredicateAsync*
        name: PredicateAsync
        nameWithType: MapWhenOptions.PredicateAsync
        qualifiedName: Microsoft.Owin.Mapping.MapWhenOptions.PredicateAsync
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Mapping.MapWhenOptions.PredicateAsync
  Microsoft.Owin.Mapping.MapWhenOptions.Branch*:
    name:
      CSharp:
      - id: Microsoft.Owin.Mapping.MapWhenOptions.Branch*
        name: Branch
        nameWithType: MapWhenOptions.Branch
        qualifiedName: Microsoft.Owin.Mapping.MapWhenOptions.Branch
        isExternal: true
      VB:
      - id: Microsoft.Owin.Mapping.MapWhenOptions.Branch*
        name: Branch
        nameWithType: MapWhenOptions.Branch
        qualifiedName: Microsoft.Owin.Mapping.MapWhenOptions.Branch
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Mapping.MapWhenOptions.Branch
  System.Security.Principal.IIdentity:
    name:
      CSharp:
      - id: System.Security.Principal.IIdentity
        name: IIdentity
        nameWithType: IIdentity
        qualifiedName: System.Security.Principal.IIdentity
        isExternal: true
      VB:
      - id: System.Security.Principal.IIdentity
        name: IIdentity
        nameWithType: IIdentity
        qualifiedName: System.Security.Principal.IIdentity
        isExternal: true
    isDefinition: true
    parent: System.Security.Principal
    commentId: T:System.Security.Principal.IIdentity
  Microsoft.Owin.Security.AuthenticationProperties:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationProperties
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Security
    commentId: T:Microsoft.Owin.Security.AuthenticationProperties
  Microsoft.Owin.Security.AuthenticationDescription:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationDescription
        name: AuthenticationDescription
        nameWithType: AuthenticationDescription
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationDescription
        name: AuthenticationDescription
        nameWithType: AuthenticationDescription
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Security
    commentId: T:Microsoft.Owin.Security.AuthenticationDescription
  Microsoft.Owin.Security.AuthenticateResult.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticateResult.#ctor*
        name: AuthenticateResult
        nameWithType: AuthenticateResult.AuthenticateResult
        qualifiedName: Microsoft.Owin.Security.AuthenticateResult.AuthenticateResult
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticateResult.#ctor*
        name: AuthenticateResult
        nameWithType: AuthenticateResult.AuthenticateResult
        qualifiedName: Microsoft.Owin.Security.AuthenticateResult.AuthenticateResult
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticateResult.#ctor
  System.Security.Claims:
    name:
      CSharp:
      - name: System.Security.Claims
        nameWithType: System.Security.Claims
        qualifiedName: System.Security.Claims
      VB:
      - name: System.Security.Claims
        nameWithType: System.Security.Claims
        qualifiedName: System.Security.Claims
    isDefinition: true
    commentId: N:System.Security.Claims
  System.Security.Claims.ClaimsIdentity:
    name:
      CSharp:
      - id: System.Security.Claims.ClaimsIdentity
        name: ClaimsIdentity
        nameWithType: ClaimsIdentity
        qualifiedName: System.Security.Claims.ClaimsIdentity
        isExternal: true
      VB:
      - id: System.Security.Claims.ClaimsIdentity
        name: ClaimsIdentity
        nameWithType: ClaimsIdentity
        qualifiedName: System.Security.Claims.ClaimsIdentity
        isExternal: true
    isDefinition: true
    parent: System.Security.Claims
    commentId: T:System.Security.Claims.ClaimsIdentity
  Microsoft.Owin.Security.AuthenticateResult.Identity*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticateResult.Identity*
        name: Identity
        nameWithType: AuthenticateResult.Identity
        qualifiedName: Microsoft.Owin.Security.AuthenticateResult.Identity
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticateResult.Identity*
        name: Identity
        nameWithType: AuthenticateResult.Identity
        qualifiedName: Microsoft.Owin.Security.AuthenticateResult.Identity
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticateResult.Identity
  Microsoft.Owin.Security.AuthenticateResult.Properties*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticateResult.Properties*
        name: Properties
        nameWithType: AuthenticateResult.Properties
        qualifiedName: Microsoft.Owin.Security.AuthenticateResult.Properties
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticateResult.Properties*
        name: Properties
        nameWithType: AuthenticateResult.Properties
        qualifiedName: Microsoft.Owin.Security.AuthenticateResult.Properties
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticateResult.Properties
  Microsoft.Owin.Security.AuthenticateResult.Description*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticateResult.Description*
        name: Description
        nameWithType: AuthenticateResult.Description
        qualifiedName: Microsoft.Owin.Security.AuthenticateResult.Description
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticateResult.Description*
        name: Description
        nameWithType: AuthenticateResult.Description
        qualifiedName: Microsoft.Owin.Security.AuthenticateResult.Description
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticateResult.Description
  Microsoft.Owin.Security.AuthenticateResult:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticateResult
        name: AuthenticateResult
        nameWithType: AuthenticateResult
        qualifiedName: Microsoft.Owin.Security.AuthenticateResult
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticateResult
        name: AuthenticateResult
        nameWithType: AuthenticateResult
        qualifiedName: Microsoft.Owin.Security.AuthenticateResult
        isExternal: true
    isDefinition: true
    commentId: T:Microsoft.Owin.Security.AuthenticateResult
  Microsoft.Owin.Security.AuthenticationDescription.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationDescription.#ctor*
        name: AuthenticationDescription
        nameWithType: AuthenticationDescription.AuthenticationDescription
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription.AuthenticationDescription
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationDescription.#ctor*
        name: AuthenticationDescription
        nameWithType: AuthenticationDescription.AuthenticationDescription
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription.AuthenticationDescription
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationDescription.#ctor
  Microsoft.Owin.Security.AuthenticationDescription.Properties*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationDescription.Properties*
        name: Properties
        nameWithType: AuthenticationDescription.Properties
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription.Properties
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationDescription.Properties*
        name: Properties
        nameWithType: AuthenticationDescription.Properties
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription.Properties
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationDescription.Properties
  Microsoft.Owin.Security.AuthenticationDescription.AuthenticationType*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationDescription.AuthenticationType*
        name: AuthenticationType
        nameWithType: AuthenticationDescription.AuthenticationType
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription.AuthenticationType
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationDescription.AuthenticationType*
        name: AuthenticationType
        nameWithType: AuthenticationDescription.AuthenticationType
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription.AuthenticationType
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationDescription.AuthenticationType
  Microsoft.Owin.Security.AuthenticationDescription.Caption*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationDescription.Caption*
        name: Caption
        nameWithType: AuthenticationDescription.Caption
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription.Caption
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationDescription.Caption*
        name: Caption
        nameWithType: AuthenticationDescription.Caption
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription.Caption
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationDescription.Caption
  System.Collections.Generic.IEnumerable{Microsoft.Owin.Security.AuthenticationDescription}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.Security.AuthenticationDescription
        name: AuthenticationDescription
        nameWithType: AuthenticationDescription
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.Security.AuthenticationDescription
        name: AuthenticationDescription
        nameWithType: AuthenticationDescription
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Owin.Security.AuthenticationDescription}
  Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes*
        name: GetAuthenticationTypes
        nameWithType: IAuthenticationManager.GetAuthenticationTypes
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes*
        name: GetAuthenticationTypes
        nameWithType: IAuthenticationManager.GetAuthenticationTypes
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes
  System.Func{Microsoft.Owin.Security.AuthenticationDescription,System.Boolean}:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.Security.AuthenticationDescription
        name: AuthenticationDescription
        nameWithType: AuthenticationDescription
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.Security.AuthenticationDescription
        name: AuthenticationDescription
        nameWithType: AuthenticationDescription
        qualifiedName: Microsoft.Owin.Security.AuthenticationDescription
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Func`2
    parent: System
    commentId: T:System.Func{Microsoft.Owin.Security.AuthenticationDescription,System.Boolean}
  System.Threading.Tasks.Task{Microsoft.Owin.Security.AuthenticateResult}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.Security.AuthenticateResult
        name: AuthenticateResult
        nameWithType: AuthenticateResult
        qualifiedName: Microsoft.Owin.Security.AuthenticateResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.Security.AuthenticateResult
        name: AuthenticateResult
        nameWithType: AuthenticateResult
        qualifiedName: Microsoft.Owin.Security.AuthenticateResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{Microsoft.Owin.Security.AuthenticateResult}
  Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync*
        name: AuthenticateAsync
        nameWithType: IAuthenticationManager.AuthenticateAsync
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync*
        name: AuthenticateAsync
        nameWithType: IAuthenticationManager.AuthenticateAsync
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync
  System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Owin.Security.AuthenticateResult}}:
    name:
      CSharp:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Owin.Security.AuthenticateResult
        name: AuthenticateResult
        nameWithType: AuthenticateResult
        qualifiedName: Microsoft.Owin.Security.AuthenticateResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Threading.Tasks.Task`1
        name: Task
        nameWithType: Task
        qualifiedName: System.Threading.Tasks.Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Owin.Security.AuthenticateResult
        name: AuthenticateResult
        nameWithType: AuthenticateResult
        qualifiedName: Microsoft.Owin.Security.AuthenticateResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Threading.Tasks.Task`1
    parent: System.Threading.Tasks
    commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Microsoft.Owin.Security.AuthenticateResult}}
  Microsoft.Owin.Security.IAuthenticationManager.Challenge*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.IAuthenticationManager.Challenge*
        name: Challenge
        nameWithType: IAuthenticationManager.Challenge
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.Challenge
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.IAuthenticationManager.Challenge*
        name: Challenge
        nameWithType: IAuthenticationManager.Challenge
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.Challenge
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.IAuthenticationManager.Challenge
  System.Security.Claims.ClaimsIdentity[]:
    name:
      CSharp:
      - id: System.Security.Claims.ClaimsIdentity
        name: ClaimsIdentity
        nameWithType: ClaimsIdentity
        qualifiedName: System.Security.Claims.ClaimsIdentity
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Security.Claims.ClaimsIdentity
        name: ClaimsIdentity
        nameWithType: ClaimsIdentity
        qualifiedName: System.Security.Claims.ClaimsIdentity
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Microsoft.Owin.Security.IAuthenticationManager.SignIn*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.IAuthenticationManager.SignIn*
        name: SignIn
        nameWithType: IAuthenticationManager.SignIn
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.SignIn
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.IAuthenticationManager.SignIn*
        name: SignIn
        nameWithType: IAuthenticationManager.SignIn
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.SignIn
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.IAuthenticationManager.SignIn
  Microsoft.Owin.Security.IAuthenticationManager.SignOut*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.IAuthenticationManager.SignOut*
        name: SignOut
        nameWithType: IAuthenticationManager.SignOut
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.SignOut
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.IAuthenticationManager.SignOut*
        name: SignOut
        nameWithType: IAuthenticationManager.SignOut
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.SignOut
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.IAuthenticationManager.SignOut
  System.Security.Claims.ClaimsPrincipal:
    name:
      CSharp:
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
      VB:
      - id: System.Security.Claims.ClaimsPrincipal
        name: ClaimsPrincipal
        nameWithType: ClaimsPrincipal
        qualifiedName: System.Security.Claims.ClaimsPrincipal
        isExternal: true
    isDefinition: true
    parent: System.Security.Claims
    commentId: T:System.Security.Claims.ClaimsPrincipal
  Microsoft.Owin.Security.IAuthenticationManager.User*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.IAuthenticationManager.User*
        name: User
        nameWithType: IAuthenticationManager.User
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.User
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.IAuthenticationManager.User*
        name: User
        nameWithType: IAuthenticationManager.User
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.User
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.IAuthenticationManager.User
  Microsoft.Owin.Security.AuthenticationResponseChallenge:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationResponseChallenge
        name: AuthenticationResponseChallenge
        nameWithType: AuthenticationResponseChallenge
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseChallenge
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationResponseChallenge
        name: AuthenticationResponseChallenge
        nameWithType: AuthenticationResponseChallenge
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseChallenge
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Security
    commentId: T:Microsoft.Owin.Security.AuthenticationResponseChallenge
  Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseChallenge*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseChallenge*
        name: AuthenticationResponseChallenge
        nameWithType: IAuthenticationManager.AuthenticationResponseChallenge
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseChallenge
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseChallenge*
        name: AuthenticationResponseChallenge
        nameWithType: IAuthenticationManager.AuthenticationResponseChallenge
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseChallenge
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseChallenge
  Microsoft.Owin.Security.AuthenticationResponseGrant:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationResponseGrant
        name: AuthenticationResponseGrant
        nameWithType: AuthenticationResponseGrant
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseGrant
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationResponseGrant
        name: AuthenticationResponseGrant
        nameWithType: AuthenticationResponseGrant
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseGrant
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Security
    commentId: T:Microsoft.Owin.Security.AuthenticationResponseGrant
  Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseGrant*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseGrant*
        name: AuthenticationResponseGrant
        nameWithType: IAuthenticationManager.AuthenticationResponseGrant
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseGrant
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseGrant*
        name: AuthenticationResponseGrant
        nameWithType: IAuthenticationManager.AuthenticationResponseGrant
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseGrant
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseGrant
  Microsoft.Owin.Security.AuthenticationResponseRevoke:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationResponseRevoke
        name: AuthenticationResponseRevoke
        nameWithType: AuthenticationResponseRevoke
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseRevoke
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationResponseRevoke
        name: AuthenticationResponseRevoke
        nameWithType: AuthenticationResponseRevoke
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseRevoke
        isExternal: true
    isDefinition: true
    parent: Microsoft.Owin.Security
    commentId: T:Microsoft.Owin.Security.AuthenticationResponseRevoke
  Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseRevoke*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseRevoke*
        name: AuthenticationResponseRevoke
        nameWithType: IAuthenticationManager.AuthenticationResponseRevoke
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseRevoke
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseRevoke*
        name: AuthenticationResponseRevoke
        nameWithType: IAuthenticationManager.AuthenticationResponseRevoke
        qualifiedName: Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseRevoke
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.IAuthenticationManager.AuthenticationResponseRevoke
  Microsoft.Owin.Security.AuthenticationProperties.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationProperties.#ctor*
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties.AuthenticationProperties
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties.AuthenticationProperties
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationProperties.#ctor*
        name: AuthenticationProperties
        nameWithType: AuthenticationProperties.AuthenticationProperties
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties.AuthenticationProperties
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationProperties.#ctor
  Microsoft.Owin.Security.AuthenticationProperties.Dictionary*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationProperties.Dictionary*
        name: Dictionary
        nameWithType: AuthenticationProperties.Dictionary
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties.Dictionary
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationProperties.Dictionary*
        name: Dictionary
        nameWithType: AuthenticationProperties.Dictionary
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties.Dictionary
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationProperties.Dictionary
  Microsoft.Owin.Security.AuthenticationProperties.IsPersistent*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationProperties.IsPersistent*
        name: IsPersistent
        nameWithType: AuthenticationProperties.IsPersistent
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties.IsPersistent
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationProperties.IsPersistent*
        name: IsPersistent
        nameWithType: AuthenticationProperties.IsPersistent
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties.IsPersistent
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationProperties.IsPersistent
  Microsoft.Owin.Security.AuthenticationProperties.RedirectUri*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationProperties.RedirectUri*
        name: RedirectUri
        nameWithType: AuthenticationProperties.RedirectUri
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties.RedirectUri
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationProperties.RedirectUri*
        name: RedirectUri
        nameWithType: AuthenticationProperties.RedirectUri
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties.RedirectUri
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationProperties.RedirectUri
  Microsoft.Owin.Security.AuthenticationProperties.IssuedUtc*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationProperties.IssuedUtc*
        name: IssuedUtc
        nameWithType: AuthenticationProperties.IssuedUtc
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties.IssuedUtc
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationProperties.IssuedUtc*
        name: IssuedUtc
        nameWithType: AuthenticationProperties.IssuedUtc
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties.IssuedUtc
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationProperties.IssuedUtc
  Microsoft.Owin.Security.AuthenticationProperties.ExpiresUtc*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationProperties.ExpiresUtc*
        name: ExpiresUtc
        nameWithType: AuthenticationProperties.ExpiresUtc
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties.ExpiresUtc
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationProperties.ExpiresUtc*
        name: ExpiresUtc
        nameWithType: AuthenticationProperties.ExpiresUtc
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties.ExpiresUtc
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationProperties.ExpiresUtc
  System.Nullable{System.Boolean}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.Boolean}
  Microsoft.Owin.Security.AuthenticationProperties.AllowRefresh*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationProperties.AllowRefresh*
        name: AllowRefresh
        nameWithType: AuthenticationProperties.AllowRefresh
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties.AllowRefresh
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationProperties.AllowRefresh*
        name: AllowRefresh
        nameWithType: AuthenticationProperties.AllowRefresh
        qualifiedName: Microsoft.Owin.Security.AuthenticationProperties.AllowRefresh
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationProperties.AllowRefresh
  Microsoft.Owin.Security.AuthenticationResponseChallenge.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationResponseChallenge.#ctor*
        name: AuthenticationResponseChallenge
        nameWithType: AuthenticationResponseChallenge.AuthenticationResponseChallenge
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationResponseChallenge
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationResponseChallenge.#ctor*
        name: AuthenticationResponseChallenge
        nameWithType: AuthenticationResponseChallenge.AuthenticationResponseChallenge
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationResponseChallenge
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationResponseChallenge.#ctor
  Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationTypes*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationTypes*
        name: AuthenticationTypes
        nameWithType: AuthenticationResponseChallenge.AuthenticationTypes
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationTypes
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationTypes*
        name: AuthenticationTypes
        nameWithType: AuthenticationResponseChallenge.AuthenticationTypes
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationTypes
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationResponseChallenge.AuthenticationTypes
  Microsoft.Owin.Security.AuthenticationResponseChallenge.Properties*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationResponseChallenge.Properties*
        name: Properties
        nameWithType: AuthenticationResponseChallenge.Properties
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseChallenge.Properties
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationResponseChallenge.Properties*
        name: Properties
        nameWithType: AuthenticationResponseChallenge.Properties
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseChallenge.Properties
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationResponseChallenge.Properties
  Microsoft.Owin.Security.AuthenticationResponseGrant.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationResponseGrant.#ctor*
        name: AuthenticationResponseGrant
        nameWithType: AuthenticationResponseGrant.AuthenticationResponseGrant
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseGrant.AuthenticationResponseGrant
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationResponseGrant.#ctor*
        name: AuthenticationResponseGrant
        nameWithType: AuthenticationResponseGrant.AuthenticationResponseGrant
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseGrant.AuthenticationResponseGrant
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationResponseGrant.#ctor
  Microsoft.Owin.Security.AuthenticationResponseGrant.Identity*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationResponseGrant.Identity*
        name: Identity
        nameWithType: AuthenticationResponseGrant.Identity
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseGrant.Identity
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationResponseGrant.Identity*
        name: Identity
        nameWithType: AuthenticationResponseGrant.Identity
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseGrant.Identity
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationResponseGrant.Identity
  Microsoft.Owin.Security.AuthenticationResponseGrant.Principal*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationResponseGrant.Principal*
        name: Principal
        nameWithType: AuthenticationResponseGrant.Principal
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseGrant.Principal
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationResponseGrant.Principal*
        name: Principal
        nameWithType: AuthenticationResponseGrant.Principal
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseGrant.Principal
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationResponseGrant.Principal
  Microsoft.Owin.Security.AuthenticationResponseGrant.Properties*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationResponseGrant.Properties*
        name: Properties
        nameWithType: AuthenticationResponseGrant.Properties
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseGrant.Properties
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationResponseGrant.Properties*
        name: Properties
        nameWithType: AuthenticationResponseGrant.Properties
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseGrant.Properties
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationResponseGrant.Properties
  Microsoft.Owin.Security.AuthenticationResponseRevoke.#ctor*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationResponseRevoke.#ctor*
        name: AuthenticationResponseRevoke
        nameWithType: AuthenticationResponseRevoke.AuthenticationResponseRevoke
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationResponseRevoke
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationResponseRevoke.#ctor*
        name: AuthenticationResponseRevoke
        nameWithType: AuthenticationResponseRevoke.AuthenticationResponseRevoke
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationResponseRevoke
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationResponseRevoke.#ctor
  Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationTypes*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationTypes*
        name: AuthenticationTypes
        nameWithType: AuthenticationResponseRevoke.AuthenticationTypes
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationTypes
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationTypes*
        name: AuthenticationTypes
        nameWithType: AuthenticationResponseRevoke.AuthenticationTypes
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationTypes
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationResponseRevoke.AuthenticationTypes
  Microsoft.Owin.Security.AuthenticationResponseRevoke.Properties*:
    name:
      CSharp:
      - id: Microsoft.Owin.Security.AuthenticationResponseRevoke.Properties*
        name: Properties
        nameWithType: AuthenticationResponseRevoke.Properties
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseRevoke.Properties
        isExternal: true
      VB:
      - id: Microsoft.Owin.Security.AuthenticationResponseRevoke.Properties*
        name: Properties
        nameWithType: AuthenticationResponseRevoke.Properties
        qualifiedName: Microsoft.Owin.Security.AuthenticationResponseRevoke.Properties
        isExternal: true
    isDefinition: true
    commentId: Overload:Microsoft.Owin.Security.AuthenticationResponseRevoke.Properties
  Owin.AppBuilderUseExtensions.Use*:
    name:
      CSharp:
      - id: Owin.AppBuilderUseExtensions.Use*
        name: Use
        nameWithType: AppBuilderUseExtensions.Use
        qualifiedName: Owin.AppBuilderUseExtensions.Use
        isExternal: true
      VB:
      - id: Owin.AppBuilderUseExtensions.Use*
        name: Use
        nameWithType: AppBuilderUseExtensions.Use
        qualifiedName: Owin.AppBuilderUseExtensions.Use
        isExternal: true
    isDefinition: true
    commentId: Overload:Owin.AppBuilderUseExtensions.Use
  Owin.AppBuilderUseExtensions.Run*:
    name:
      CSharp:
      - id: Owin.AppBuilderUseExtensions.Run*
        name: Run
        nameWithType: AppBuilderUseExtensions.Run
        qualifiedName: Owin.AppBuilderUseExtensions.Run
        isExternal: true
      VB:
      - id: Owin.AppBuilderUseExtensions.Run*
        name: Run
        nameWithType: AppBuilderUseExtensions.Run
        qualifiedName: Owin.AppBuilderUseExtensions.Run
        isExternal: true
    isDefinition: true
    commentId: Overload:Owin.AppBuilderUseExtensions.Run
  Owin.AppBuilderUseExtensions:
    name:
      CSharp:
      - id: Owin.AppBuilderUseExtensions
        name: AppBuilderUseExtensions
        nameWithType: AppBuilderUseExtensions
        qualifiedName: Owin.AppBuilderUseExtensions
        isExternal: true
      VB:
      - id: Owin.AppBuilderUseExtensions
        name: AppBuilderUseExtensions
        nameWithType: AppBuilderUseExtensions
        qualifiedName: Owin.AppBuilderUseExtensions
        isExternal: true
    isDefinition: true
    commentId: T:Owin.AppBuilderUseExtensions
  System.Action{Owin.IAppBuilder}:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Owin.IAppBuilder
        name: IAppBuilder
        nameWithType: IAppBuilder
        qualifiedName: Owin.IAppBuilder
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Owin.IAppBuilder
        name: IAppBuilder
        nameWithType: IAppBuilder
        qualifiedName: Owin.IAppBuilder
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Action`1
    parent: System
    commentId: T:System.Action{Owin.IAppBuilder}
  Owin.MapExtensions.Map*:
    name:
      CSharp:
      - id: Owin.MapExtensions.Map*
        name: Map
        nameWithType: MapExtensions.Map
        qualifiedName: Owin.MapExtensions.Map
        isExternal: true
      VB:
      - id: Owin.MapExtensions.Map*
        name: Map
        nameWithType: MapExtensions.Map
        qualifiedName: Owin.MapExtensions.Map
        isExternal: true
    isDefinition: true
    commentId: Overload:Owin.MapExtensions.Map
  Owin.MapExtensions:
    name:
      CSharp:
      - id: Owin.MapExtensions
        name: MapExtensions
        nameWithType: MapExtensions
        qualifiedName: Owin.MapExtensions
        isExternal: true
      VB:
      - id: Owin.MapExtensions
        name: MapExtensions
        nameWithType: MapExtensions
        qualifiedName: Owin.MapExtensions
        isExternal: true
    isDefinition: true
    commentId: T:Owin.MapExtensions
  Owin.MapWhenExtensions.MapWhen*:
    name:
      CSharp:
      - id: Owin.MapWhenExtensions.MapWhen*
        name: MapWhen
        nameWithType: MapWhenExtensions.MapWhen
        qualifiedName: Owin.MapWhenExtensions.MapWhen
        isExternal: true
      VB:
      - id: Owin.MapWhenExtensions.MapWhen*
        name: MapWhen
        nameWithType: MapWhenExtensions.MapWhen
        qualifiedName: Owin.MapWhenExtensions.MapWhen
        isExternal: true
    isDefinition: true
    commentId: Overload:Owin.MapWhenExtensions.MapWhen
  Owin.MapWhenExtensions.MapWhenAsync*:
    name:
      CSharp:
      - id: Owin.MapWhenExtensions.MapWhenAsync*
        name: MapWhenAsync
        nameWithType: MapWhenExtensions.MapWhenAsync
        qualifiedName: Owin.MapWhenExtensions.MapWhenAsync
        isExternal: true
      VB:
      - id: Owin.MapWhenExtensions.MapWhenAsync*
        name: MapWhenAsync
        nameWithType: MapWhenExtensions.MapWhenAsync
        qualifiedName: Owin.MapWhenExtensions.MapWhenAsync
        isExternal: true
    isDefinition: true
    commentId: Overload:Owin.MapWhenExtensions.MapWhenAsync
  Owin.MapWhenExtensions:
    name:
      CSharp:
      - id: Owin.MapWhenExtensions
        name: MapWhenExtensions
        nameWithType: MapWhenExtensions
        qualifiedName: Owin.MapWhenExtensions
        isExternal: true
      VB:
      - id: Owin.MapWhenExtensions
        name: MapWhenExtensions
        nameWithType: MapWhenExtensions
        qualifiedName: Owin.MapWhenExtensions
        isExternal: true
    isDefinition: true
    commentId: T:Owin.MapWhenExtensions
