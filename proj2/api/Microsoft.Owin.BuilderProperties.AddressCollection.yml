### YamlMime:ManagedReference
items:
- uid: Microsoft.Owin.BuilderProperties.AddressCollection
  commentId: T:Microsoft.Owin.BuilderProperties.AddressCollection
  id: AddressCollection
  parent: Microsoft.Owin.BuilderProperties
  children:
  - Microsoft.Owin.BuilderProperties.AddressCollection.#ctor(System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}})
  - Microsoft.Owin.BuilderProperties.AddressCollection.Add(Microsoft.Owin.BuilderProperties.Address)
  - Microsoft.Owin.BuilderProperties.AddressCollection.Count
  - Microsoft.Owin.BuilderProperties.AddressCollection.Create
  - Microsoft.Owin.BuilderProperties.AddressCollection.Equals(Microsoft.Owin.BuilderProperties.AddressCollection)
  - Microsoft.Owin.BuilderProperties.AddressCollection.Equals(System.Object)
  - Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator
  - Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode
  - Microsoft.Owin.BuilderProperties.AddressCollection.Item(System.Int32)
  - Microsoft.Owin.BuilderProperties.AddressCollection.List
  - Microsoft.Owin.BuilderProperties.AddressCollection.op_Equality(Microsoft.Owin.BuilderProperties.AddressCollection,Microsoft.Owin.BuilderProperties.AddressCollection)
  - Microsoft.Owin.BuilderProperties.AddressCollection.op_Inequality(Microsoft.Owin.BuilderProperties.AddressCollection,Microsoft.Owin.BuilderProperties.AddressCollection)
  - Microsoft.Owin.BuilderProperties.AddressCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: AddressCollection
  nameWithType: AddressCollection
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection
  type: Struct
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nWraps the host.Addresses list.\n"
  syntax:
    content: 'public struct AddressCollection : IEnumerable<Address>, IEnumerable'
    content.vb: >-
      Public Structure AddressCollection
          Implements IEnumerable(Of Address), IEnumerable
  implements:
  - System.Collections.Generic.IEnumerable{Microsoft.Owin.BuilderProperties.Address}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.#ctor(System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}})
  commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.#ctor(System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}})
  id: '#ctor(System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}})'
  parent: Microsoft.Owin.BuilderProperties.AddressCollection
  langs:
  - csharp
  - vb
  name: AddressCollection(IList<IDictionary<String, Object>>)
  nameWithType: AddressCollection.AddressCollection(IList<IDictionary<String, Object>>)
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.AddressCollection(System.Collections.Generic.IList<System.Collections.Generic.IDictionary<System.String, System.Object>>)
  type: Constructor
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Owin.BuilderProperties.AddressCollection\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public AddressCollection(IList<IDictionary<string, object>> list)
    parameters:
    - id: list
      type: System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}
      description: The address list to set to the collection.
    content.vb: Public Sub New(list As IList(Of IDictionary(Of String, Object)))
  overload: Microsoft.Owin.BuilderProperties.AddressCollection.#ctor*
  nameWithType.vb: AddressCollection.AddressCollection(IList(Of IDictionary(Of String, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Owin.BuilderProperties.AddressCollection.AddressCollection(System.Collections.Generic.IList(Of System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: AddressCollection(IList(Of IDictionary(Of String, Object)))
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.Add(Microsoft.Owin.BuilderProperties.Address)
  commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.Add(Microsoft.Owin.BuilderProperties.Address)
  id: Add(Microsoft.Owin.BuilderProperties.Address)
  parent: Microsoft.Owin.BuilderProperties.AddressCollection
  langs:
  - csharp
  - vb
  name: Add(Address)
  nameWithType: AddressCollection.Add(Address)
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Add(Microsoft.Owin.BuilderProperties.Address)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nAdds the specified address to the collection.\n"
  syntax:
    content: public void Add(Address address)
    parameters:
    - id: address
      type: Microsoft.Owin.BuilderProperties.Address
      description: The address to add to the collection.
    content.vb: Public Sub Add(address As Address)
  overload: Microsoft.Owin.BuilderProperties.AddressCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.Owin.BuilderProperties.AddressCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: AddressCollection.IEnumerable.GetEnumerator()
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nGets the enumerator that iterates through the collection.\n"
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: The enumerator that can be used to iterate through the collection.
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Microsoft.Owin.BuilderProperties.AddressCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: AddressCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator
  commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Owin.BuilderProperties.AddressCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: AddressCollection.GetEnumerator()
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nGets the enumerator that iterates through the collection.\n"
  syntax:
    content: public IEnumerator<Address> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{Microsoft.Owin.BuilderProperties.Address}
      description: The enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator As IEnumerator(Of Address)
  overload: Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{Microsoft.Owin.BuilderProperties.Address}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.Create
  commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.Create
  id: Create
  parent: Microsoft.Owin.BuilderProperties.AddressCollection
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: AddressCollection.Create()
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Create()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nCreates a new empty instance of <xref href=\"Microsoft.Owin.BuilderProperties.AddressCollection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public static AddressCollection Create()
    return:
      type: Microsoft.Owin.BuilderProperties.AddressCollection
      description: A new empty instance of <xref href="Microsoft.Owin.BuilderProperties.AddressCollection" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Create As AddressCollection
  overload: Microsoft.Owin.BuilderProperties.AddressCollection.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.Equals(Microsoft.Owin.BuilderProperties.AddressCollection)
  commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.Equals(Microsoft.Owin.BuilderProperties.AddressCollection)
  id: Equals(Microsoft.Owin.BuilderProperties.AddressCollection)
  parent: Microsoft.Owin.BuilderProperties.AddressCollection
  langs:
  - csharp
  - vb
  name: Equals(AddressCollection)
  nameWithType: AddressCollection.Equals(AddressCollection)
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Equals(Microsoft.Owin.BuilderProperties.AddressCollection)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nDetermines whether the current collection is equal to the specified collection.\n"
  syntax:
    content: public bool Equals(AddressCollection other)
    parameters:
    - id: other
      type: Microsoft.Owin.BuilderProperties.AddressCollection
      description: The other collection to compare to the current collection.
    return:
      type: System.Boolean
      description: true if current collection is equal to the specified collection; otherwise, false.
    content.vb: Public Function Equals(other As AddressCollection) As Boolean
  overload: Microsoft.Owin.BuilderProperties.AddressCollection.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.Equals(System.Object)
  commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Owin.BuilderProperties.AddressCollection
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: AddressCollection.Equals(Object)
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Equals(System.Object)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nDetermines whether the current collection is equal to the specified object.\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare to the current collection.
    return:
      type: System.Boolean
      description: true if current collection is equal to the specified object; otherwise, false.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Microsoft.Owin.BuilderProperties.AddressCollection.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode
  commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode
  id: GetHashCode
  parent: Microsoft.Owin.BuilderProperties.AddressCollection
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: AddressCollection.GetHashCode()
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nGets the hash code for this instance.\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: The hash code for this instance.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.op_Equality(Microsoft.Owin.BuilderProperties.AddressCollection,Microsoft.Owin.BuilderProperties.AddressCollection)
  commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.op_Equality(Microsoft.Owin.BuilderProperties.AddressCollection,Microsoft.Owin.BuilderProperties.AddressCollection)
  id: op_Equality(Microsoft.Owin.BuilderProperties.AddressCollection,Microsoft.Owin.BuilderProperties.AddressCollection)
  parent: Microsoft.Owin.BuilderProperties.AddressCollection
  langs:
  - csharp
  - vb
  name: Equality(AddressCollection, AddressCollection)
  nameWithType: AddressCollection.Equality(AddressCollection, AddressCollection)
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Equality(Microsoft.Owin.BuilderProperties.AddressCollection, Microsoft.Owin.BuilderProperties.AddressCollection)
  type: Operator
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nDetermines whether the first collection is equal to the second collection.\n"
  syntax:
    content: public static bool operator ==(AddressCollection left, AddressCollection right)
    parameters:
    - id: left
      type: Microsoft.Owin.BuilderProperties.AddressCollection
      description: The first collection to compare.
    - id: right
      type: Microsoft.Owin.BuilderProperties.AddressCollection
      description: The second collection to compare.
    return:
      type: System.Boolean
      description: true if both collections are equal; otherwise, false.
    content.vb: Public Shared Operator =(left As AddressCollection, right As AddressCollection) As Boolean
  overload: Microsoft.Owin.BuilderProperties.AddressCollection.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.op_Inequality(Microsoft.Owin.BuilderProperties.AddressCollection,Microsoft.Owin.BuilderProperties.AddressCollection)
  commentId: M:Microsoft.Owin.BuilderProperties.AddressCollection.op_Inequality(Microsoft.Owin.BuilderProperties.AddressCollection,Microsoft.Owin.BuilderProperties.AddressCollection)
  id: op_Inequality(Microsoft.Owin.BuilderProperties.AddressCollection,Microsoft.Owin.BuilderProperties.AddressCollection)
  parent: Microsoft.Owin.BuilderProperties.AddressCollection
  langs:
  - csharp
  - vb
  name: Inequality(AddressCollection, AddressCollection)
  nameWithType: AddressCollection.Inequality(AddressCollection, AddressCollection)
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Inequality(Microsoft.Owin.BuilderProperties.AddressCollection, Microsoft.Owin.BuilderProperties.AddressCollection)
  type: Operator
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nDetermines whether the first collection is not equal to the second collection.\n"
  syntax:
    content: public static bool operator !=(AddressCollection left, AddressCollection right)
    parameters:
    - id: left
      type: Microsoft.Owin.BuilderProperties.AddressCollection
      description: The first collection to compare.
    - id: right
      type: Microsoft.Owin.BuilderProperties.AddressCollection
      description: The second collection to compare.
    return:
      type: System.Boolean
      description: true if both collections are not equal; otherwise, false.
    content.vb: Public Shared Operator <>(left As AddressCollection, right As AddressCollection) As Boolean
  overload: Microsoft.Owin.BuilderProperties.AddressCollection.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.List
  commentId: P:Microsoft.Owin.BuilderProperties.AddressCollection.List
  id: List
  parent: Microsoft.Owin.BuilderProperties.AddressCollection
  langs:
  - csharp
  - vb
  name: List
  nameWithType: AddressCollection.List
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.List
  type: Property
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nGets the underlying address list.\n"
  syntax:
    content: public IList<IDictionary<string, object>> List { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}
      description: The underlying address list.
    content.vb: Public ReadOnly Property List As IList(Of IDictionary(Of String, Object))
  overload: Microsoft.Owin.BuilderProperties.AddressCollection.List*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.Count
  commentId: P:Microsoft.Owin.BuilderProperties.AddressCollection.Count
  id: Count
  parent: Microsoft.Owin.BuilderProperties.AddressCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: AddressCollection.Count
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Count
  type: Property
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nGets the number of elements in the collection.\n"
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: The number of elements in the collection.
    content.vb: Public ReadOnly Property Count As Integer
  overload: Microsoft.Owin.BuilderProperties.AddressCollection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.Item(System.Int32)
  commentId: P:Microsoft.Owin.BuilderProperties.AddressCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.Owin.BuilderProperties.AddressCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: AddressCollection.Item[Int32]
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Item[System.Int32]
  type: Property
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nGets the item with the specified index from the collection.\n"
  syntax:
    content: public Address this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index.
    return:
      type: Microsoft.Owin.BuilderProperties.Address
      description: The item with the specified index.
    content.vb: Public Property Item(index As Integer) As Address
  overload: Microsoft.Owin.BuilderProperties.AddressCollection.Item*
  nameWithType.vb: AddressCollection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Owin.BuilderProperties.AddressCollection.Item(System.Int32)
  name.vb: Item(Int32)
references:
- uid: Microsoft.Owin.BuilderProperties
  commentId: N:Microsoft.Owin.BuilderProperties
  isExternal: false
  name: Microsoft.Owin.BuilderProperties
  nameWithType: Microsoft.Owin.BuilderProperties
  fullName: Microsoft.Owin.BuilderProperties
- uid: System.Collections.Generic.IEnumerable{Microsoft.Owin.BuilderProperties.Address}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Owin.BuilderProperties.Address}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Address>
  nameWithType: IEnumerable<Address>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Owin.BuilderProperties.Address>
  nameWithType.vb: IEnumerable(Of Address)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Owin.BuilderProperties.Address)
  name.vb: IEnumerable(Of Address)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Owin.BuilderProperties.Address
    name: Address
    nameWithType: Address
    fullName: Microsoft.Owin.BuilderProperties.Address
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Owin.BuilderProperties.Address
    name: Address
    nameWithType: Address
    fullName: Microsoft.Owin.BuilderProperties.Address
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.#ctor*
  commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.#ctor
  isExternal: true
  name: AddressCollection
  nameWithType: AddressCollection.AddressCollection
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.AddressCollection
- uid: System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}
  commentId: T:System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IDictionary<String, Object>>
  nameWithType: IList<IDictionary<String, Object>>
  fullName: System.Collections.Generic.IList<System.Collections.Generic.IDictionary<System.String, System.Object>>
  nameWithType.vb: IList(Of IDictionary(Of String, Object))
  fullName.vb: System.Collections.Generic.IList(Of System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: IList(Of IDictionary(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.Add*
  commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.Add
  isExternal: true
  name: Add
  nameWithType: AddressCollection.Add
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Add
- uid: Microsoft.Owin.BuilderProperties.Address
  commentId: T:Microsoft.Owin.BuilderProperties.Address
  parent: Microsoft.Owin.BuilderProperties
  isExternal: true
  name: Address
  nameWithType: Address
  fullName: Microsoft.Owin.BuilderProperties.Address
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator
  nameWithType: AddressCollection.IEnumerable.GetEnumerator
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: AddressCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator*
  commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator
  isExternal: true
  name: GetEnumerator
  nameWithType: AddressCollection.GetEnumerator
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{Microsoft.Owin.BuilderProperties.Address}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Microsoft.Owin.BuilderProperties.Address}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Microsoft.Owin.BuilderProperties.Address}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<Address>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Owin.BuilderProperties.Address>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of Address).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Owin.BuilderProperties.Address).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<Address>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Microsoft.Owin.BuilderProperties.Address>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of Address).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Microsoft.Owin.BuilderProperties.Address).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{Microsoft.Owin.BuilderProperties.Address}
  commentId: T:System.Collections.Generic.IEnumerator{Microsoft.Owin.BuilderProperties.Address}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<Address>
  nameWithType: IEnumerator<Address>
  fullName: System.Collections.Generic.IEnumerator<Microsoft.Owin.BuilderProperties.Address>
  nameWithType.vb: IEnumerator(Of Address)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Microsoft.Owin.BuilderProperties.Address)
  name.vb: IEnumerator(Of Address)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Owin.BuilderProperties.Address
    name: Address
    nameWithType: Address
    fullName: Microsoft.Owin.BuilderProperties.Address
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Owin.BuilderProperties.Address
    name: Address
    nameWithType: Address
    fullName: Microsoft.Owin.BuilderProperties.Address
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.Create*
  commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.Create
  isExternal: true
  name: Create
  nameWithType: AddressCollection.Create
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Create
- uid: Microsoft.Owin.BuilderProperties.AddressCollection
  commentId: T:Microsoft.Owin.BuilderProperties.AddressCollection
  parent: Microsoft.Owin.BuilderProperties
  isExternal: true
  name: AddressCollection
  nameWithType: AddressCollection
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.Equals*
  commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.Equals
  isExternal: true
  name: Equals
  nameWithType: AddressCollection.Equals
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode*
  commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: AddressCollection.GetHashCode
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.op_Equality*
  commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.op_Equality
  isExternal: true
  name: Equality
  nameWithType: AddressCollection.Equality
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Equality
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.op_Inequality*
  commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.op_Inequality
  isExternal: true
  name: Inequality
  nameWithType: AddressCollection.Inequality
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Inequality
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.List*
  commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.List
  isExternal: true
  name: List
  nameWithType: AddressCollection.List
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.List
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.Count*
  commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.Count
  isExternal: true
  name: Count
  nameWithType: AddressCollection.Count
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Count
- uid: Microsoft.Owin.BuilderProperties.AddressCollection.Item*
  commentId: Overload:Microsoft.Owin.BuilderProperties.AddressCollection.Item
  isExternal: true
  name: Item
  nameWithType: AddressCollection.Item
  fullName: Microsoft.Owin.BuilderProperties.AddressCollection.Item
