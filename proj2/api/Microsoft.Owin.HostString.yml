### YamlMime:ManagedReference
items:
- uid: Microsoft.Owin.HostString
  commentId: T:Microsoft.Owin.HostString
  id: HostString
  parent: Microsoft.Owin
  children:
  - Microsoft.Owin.HostString.#ctor(System.String)
  - Microsoft.Owin.HostString.Equals(Microsoft.Owin.HostString)
  - Microsoft.Owin.HostString.Equals(System.Object)
  - Microsoft.Owin.HostString.FromUriComponent(System.String)
  - Microsoft.Owin.HostString.FromUriComponent(System.Uri)
  - Microsoft.Owin.HostString.GetHashCode
  - Microsoft.Owin.HostString.op_Equality(Microsoft.Owin.HostString,Microsoft.Owin.HostString)
  - Microsoft.Owin.HostString.op_Inequality(Microsoft.Owin.HostString,Microsoft.Owin.HostString)
  - Microsoft.Owin.HostString.ToString
  - Microsoft.Owin.HostString.ToUriComponent
  - Microsoft.Owin.HostString.Value
  langs:
  - csharp
  - vb
  name: HostString
  nameWithType: HostString
  fullName: Microsoft.Owin.HostString
  type: Struct
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nRepresents the host portion of a Uri can be used to construct Uri&apos;s properly formatted and encoded for use in\nHTTP headers.\n"
  syntax:
    content: 'public struct HostString : IEquatable<HostString>'
    content.vb: >-
      Public Structure HostString
          Implements IEquatable(Of HostString)
  implements:
  - System.IEquatable{Microsoft.Owin.HostString}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Owin.HostString.#ctor(System.String)
  commentId: M:Microsoft.Owin.HostString.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Owin.HostString
  langs:
  - csharp
  - vb
  name: HostString(String)
  nameWithType: HostString.HostString(String)
  fullName: Microsoft.Owin.HostString.HostString(System.String)
  type: Constructor
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nCreates a new HostString without modification. The value should be Unicode rather than punycode, and may have a port.\nIPv4 and IPv6 addresses are also allowed, and also may have ports.\n"
  syntax:
    content: public HostString(string value)
    parameters:
    - id: value
      type: System.String
    content.vb: Public Sub New(value As String)
  overload: Microsoft.Owin.HostString.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.HostString.ToString
  commentId: M:Microsoft.Owin.HostString.ToString
  id: ToString
  parent: Microsoft.Owin.HostString
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HostString.ToString()
  fullName: Microsoft.Owin.HostString.ToString()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nReturns the value as normalized by ToUriComponent().\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Microsoft.Owin.HostString.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Owin.HostString.ToUriComponent
  commentId: M:Microsoft.Owin.HostString.ToUriComponent
  id: ToUriComponent
  parent: Microsoft.Owin.HostString
  langs:
  - csharp
  - vb
  name: ToUriComponent()
  nameWithType: HostString.ToUriComponent()
  fullName: Microsoft.Owin.HostString.ToUriComponent()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nReturns the value properly formatted and encoded for use in a URI in a HTTP header.\nAny Unicode is converted to punycode. IPv6 addresses will have brackets added if they are missing.\n"
  syntax:
    content: public string ToUriComponent()
    return:
      type: System.String
    content.vb: Public Function ToUriComponent As String
  overload: Microsoft.Owin.HostString.ToUriComponent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.HostString.FromUriComponent(System.String)
  commentId: M:Microsoft.Owin.HostString.FromUriComponent(System.String)
  id: FromUriComponent(System.String)
  parent: Microsoft.Owin.HostString
  langs:
  - csharp
  - vb
  name: FromUriComponent(String)
  nameWithType: HostString.FromUriComponent(String)
  fullName: Microsoft.Owin.HostString.FromUriComponent(System.String)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nCreates a new HostString from the given uri component.\nAny punycode will be converted to Unicode.\n"
  syntax:
    content: public static HostString FromUriComponent(string uriComponent)
    parameters:
    - id: uriComponent
      type: System.String
    return:
      type: Microsoft.Owin.HostString
    content.vb: Public Shared Function FromUriComponent(uriComponent As String) As HostString
  overload: Microsoft.Owin.HostString.FromUriComponent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.HostString.FromUriComponent(System.Uri)
  commentId: M:Microsoft.Owin.HostString.FromUriComponent(System.Uri)
  id: FromUriComponent(System.Uri)
  parent: Microsoft.Owin.HostString
  langs:
  - csharp
  - vb
  name: FromUriComponent(Uri)
  nameWithType: HostString.FromUriComponent(Uri)
  fullName: Microsoft.Owin.HostString.FromUriComponent(System.Uri)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nCreates a new HostString from the host and port of the give Uri instance.\nPunycode will be converted to Unicode.\n"
  syntax:
    content: public static HostString FromUriComponent(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
    return:
      type: Microsoft.Owin.HostString
    content.vb: Public Shared Function FromUriComponent(uri As Uri) As HostString
  overload: Microsoft.Owin.HostString.FromUriComponent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.HostString.Equals(Microsoft.Owin.HostString)
  commentId: M:Microsoft.Owin.HostString.Equals(Microsoft.Owin.HostString)
  id: Equals(Microsoft.Owin.HostString)
  parent: Microsoft.Owin.HostString
  langs:
  - csharp
  - vb
  name: Equals(HostString)
  nameWithType: HostString.Equals(HostString)
  fullName: Microsoft.Owin.HostString.Equals(Microsoft.Owin.HostString)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nCompares the equality of the Value property, ignoring case.\n"
  syntax:
    content: public bool Equals(HostString other)
    parameters:
    - id: other
      type: Microsoft.Owin.HostString
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As HostString) As Boolean
  overload: Microsoft.Owin.HostString.Equals*
  implements:
  - System.IEquatable{Microsoft.Owin.HostString}.Equals(Microsoft.Owin.HostString)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.HostString.Equals(System.Object)
  commentId: M:Microsoft.Owin.HostString.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Owin.HostString
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: HostString.Equals(Object)
  fullName: Microsoft.Owin.HostString.Equals(System.Object)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nCompares against the given object only if it is a HostString.\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Microsoft.Owin.HostString.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Owin.HostString.GetHashCode
  commentId: M:Microsoft.Owin.HostString.GetHashCode
  id: GetHashCode
  parent: Microsoft.Owin.HostString
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: HostString.GetHashCode()
  fullName: Microsoft.Owin.HostString.GetHashCode()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nGets a hash code for the value.\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Microsoft.Owin.HostString.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Owin.HostString.op_Equality(Microsoft.Owin.HostString,Microsoft.Owin.HostString)
  commentId: M:Microsoft.Owin.HostString.op_Equality(Microsoft.Owin.HostString,Microsoft.Owin.HostString)
  id: op_Equality(Microsoft.Owin.HostString,Microsoft.Owin.HostString)
  parent: Microsoft.Owin.HostString
  langs:
  - csharp
  - vb
  name: Equality(HostString, HostString)
  nameWithType: HostString.Equality(HostString, HostString)
  fullName: Microsoft.Owin.HostString.Equality(Microsoft.Owin.HostString, Microsoft.Owin.HostString)
  type: Operator
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nCompares the two instances for equality.\n"
  syntax:
    content: public static bool operator ==(HostString left, HostString right)
    parameters:
    - id: left
      type: Microsoft.Owin.HostString
    - id: right
      type: Microsoft.Owin.HostString
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As HostString, right As HostString) As Boolean
  overload: Microsoft.Owin.HostString.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.HostString.op_Inequality(Microsoft.Owin.HostString,Microsoft.Owin.HostString)
  commentId: M:Microsoft.Owin.HostString.op_Inequality(Microsoft.Owin.HostString,Microsoft.Owin.HostString)
  id: op_Inequality(Microsoft.Owin.HostString,Microsoft.Owin.HostString)
  parent: Microsoft.Owin.HostString
  langs:
  - csharp
  - vb
  name: Inequality(HostString, HostString)
  nameWithType: HostString.Inequality(HostString, HostString)
  fullName: Microsoft.Owin.HostString.Inequality(Microsoft.Owin.HostString, Microsoft.Owin.HostString)
  type: Operator
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nCompares the two instances for inequality.\n"
  syntax:
    content: public static bool operator !=(HostString left, HostString right)
    parameters:
    - id: left
      type: Microsoft.Owin.HostString
    - id: right
      type: Microsoft.Owin.HostString
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As HostString, right As HostString) As Boolean
  overload: Microsoft.Owin.HostString.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.HostString.Value
  commentId: P:Microsoft.Owin.HostString.Value
  id: Value
  parent: Microsoft.Owin.HostString
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: HostString.Value
  fullName: Microsoft.Owin.HostString.Value
  type: Property
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nReturns the original value from the constructor.\n"
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: Microsoft.Owin.HostString.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Owin
  commentId: N:Microsoft.Owin
  isExternal: false
  name: Microsoft.Owin
  nameWithType: Microsoft.Owin
  fullName: Microsoft.Owin
- uid: System.IEquatable{Microsoft.Owin.HostString}
  commentId: T:System.IEquatable{Microsoft.Owin.HostString}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<HostString>
  nameWithType: IEquatable<HostString>
  fullName: System.IEquatable<Microsoft.Owin.HostString>
  nameWithType.vb: IEquatable(Of HostString)
  fullName.vb: System.IEquatable(Of Microsoft.Owin.HostString)
  name.vb: IEquatable(Of HostString)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Owin.HostString
    name: HostString
    nameWithType: HostString
    fullName: Microsoft.Owin.HostString
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Owin.HostString
    name: HostString
    nameWithType: HostString
    fullName: Microsoft.Owin.HostString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Owin.HostString.#ctor*
  commentId: Overload:Microsoft.Owin.HostString.#ctor
  isExternal: true
  name: HostString
  nameWithType: HostString.HostString
  fullName: Microsoft.Owin.HostString.HostString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.HostString.ToString*
  commentId: Overload:Microsoft.Owin.HostString.ToString
  isExternal: true
  name: ToString
  nameWithType: HostString.ToString
  fullName: Microsoft.Owin.HostString.ToString
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: Microsoft.Owin.HostString.ToUriComponent*
  commentId: Overload:Microsoft.Owin.HostString.ToUriComponent
  isExternal: true
  name: ToUriComponent
  nameWithType: HostString.ToUriComponent
  fullName: Microsoft.Owin.HostString.ToUriComponent
- uid: Microsoft.Owin.HostString.FromUriComponent*
  commentId: Overload:Microsoft.Owin.HostString.FromUriComponent
  isExternal: true
  name: FromUriComponent
  nameWithType: HostString.FromUriComponent
  fullName: Microsoft.Owin.HostString.FromUriComponent
- uid: Microsoft.Owin.HostString
  commentId: T:Microsoft.Owin.HostString
  parent: Microsoft.Owin
  isExternal: true
  name: HostString
  nameWithType: HostString
  fullName: Microsoft.Owin.HostString
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Owin.HostString.Equals*
  commentId: Overload:Microsoft.Owin.HostString.Equals
  isExternal: true
  name: Equals
  nameWithType: HostString.Equals
  fullName: Microsoft.Owin.HostString.Equals
- uid: System.IEquatable{Microsoft.Owin.HostString}.Equals(Microsoft.Owin.HostString)
  commentId: M:System.IEquatable{Microsoft.Owin.HostString}.Equals(Microsoft.Owin.HostString)
  parent: System.IEquatable{Microsoft.Owin.HostString}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(HostString)
  nameWithType: IEquatable<HostString>.Equals(HostString)
  fullName: System.IEquatable<Microsoft.Owin.HostString>.Equals(Microsoft.Owin.HostString)
  nameWithType.vb: IEquatable(Of HostString).Equals(HostString)
  fullName.vb: System.IEquatable(Of Microsoft.Owin.HostString).Equals(Microsoft.Owin.HostString)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<HostString>.Equals
    fullName: System.IEquatable<Microsoft.Owin.HostString>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.HostString
    name: HostString
    nameWithType: HostString
    fullName: Microsoft.Owin.HostString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of HostString).Equals
    fullName: System.IEquatable(Of Microsoft.Owin.HostString).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.HostString
    name: HostString
    nameWithType: HostString
    fullName: Microsoft.Owin.HostString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.HostString.GetHashCode*
  commentId: Overload:Microsoft.Owin.HostString.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: HostString.GetHashCode
  fullName: Microsoft.Owin.HostString.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Owin.HostString.op_Equality*
  commentId: Overload:Microsoft.Owin.HostString.op_Equality
  isExternal: true
  name: Equality
  nameWithType: HostString.Equality
  fullName: Microsoft.Owin.HostString.Equality
- uid: Microsoft.Owin.HostString.op_Inequality*
  commentId: Overload:Microsoft.Owin.HostString.op_Inequality
  isExternal: true
  name: Inequality
  nameWithType: HostString.Inequality
  fullName: Microsoft.Owin.HostString.Inequality
- uid: Microsoft.Owin.HostString.Value*
  commentId: Overload:Microsoft.Owin.HostString.Value
  isExternal: true
  name: Value
  nameWithType: HostString.Value
  fullName: Microsoft.Owin.HostString.Value
