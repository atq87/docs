### YamlMime:ManagedReference
items:
- uid: Owin.AppBuilderUseExtensions
  commentId: T:Owin.AppBuilderUseExtensions
  id: AppBuilderUseExtensions
  parent: Owin
  children:
  - Owin.AppBuilderUseExtensions.Run(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task})
  - Owin.AppBuilderUseExtensions.Use(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task})
  - Owin.AppBuilderUseExtensions.Use``1(Owin.IAppBuilder,System.Object[])
  langs:
  - csharp
  - vb
  name: AppBuilderUseExtensions
  nameWithType: AppBuilderUseExtensions
  fullName: Owin.AppBuilderUseExtensions
  type: Class
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Owin
  summary: "\nExtension methods for <xref href=\"Owin.IAppBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public static class AppBuilderUseExtensions
    content.vb: Public Module AppBuilderUseExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Owin.AppBuilderUseExtensions.Use``1(Owin.IAppBuilder,System.Object[])
  commentId: M:Owin.AppBuilderUseExtensions.Use``1(Owin.IAppBuilder,System.Object[])
  id: Use``1(Owin.IAppBuilder,System.Object[])
  isExtensionMethod: true
  parent: Owin.AppBuilderUseExtensions
  langs:
  - csharp
  - vb
  name: Use<T>(IAppBuilder, Object[])
  nameWithType: AppBuilderUseExtensions.Use<T>(IAppBuilder, Object[])
  fullName: Owin.AppBuilderUseExtensions.Use<T>(Owin.IAppBuilder, System.Object[])
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Owin
  summary: "\nInserts a middleware into the OWIN pipeline.\n"
  syntax:
    content: public static IAppBuilder Use<T>(this IAppBuilder app, params object[] args)
    parameters:
    - id: app
      type: Owin.IAppBuilder
    - id: args
      type: System.Object[]
      description: Any additional arguments for the middleware constructor
    typeParameters:
    - id: T
      description: The middleware type
    return:
      type: Owin.IAppBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Use(Of T)(app As IAppBuilder, ParamArray args As Object()) As IAppBuilder
  overload: Owin.AppBuilderUseExtensions.Use*
  nameWithType.vb: AppBuilderUseExtensions.Use(Of T)(IAppBuilder, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Owin.AppBuilderUseExtensions.Use(Of T)(Owin.IAppBuilder, System.Object())
  name.vb: Use(Of T)(IAppBuilder, Object())
- uid: Owin.AppBuilderUseExtensions.Run(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task})
  commentId: M:Owin.AppBuilderUseExtensions.Run(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task})
  id: Run(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task})
  isExtensionMethod: true
  parent: Owin.AppBuilderUseExtensions
  langs:
  - csharp
  - vb
  name: Run(IAppBuilder, Func<IOwinContext, Task>)
  nameWithType: AppBuilderUseExtensions.Run(IAppBuilder, Func<IOwinContext, Task>)
  fullName: Owin.AppBuilderUseExtensions.Run(Owin.IAppBuilder, System.Func<Microsoft.Owin.IOwinContext, System.Threading.Tasks.Task>)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Owin
  summary: "\nInserts into the OWIN pipeline a middleware which does not have a next middleware reference.\n"
  syntax:
    content: public static void Run(this IAppBuilder app, Func<IOwinContext, Task> handler)
    parameters:
    - id: app
      type: Owin.IAppBuilder
    - id: handler
      type: System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task}
      description: An app that handles all requests
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Run(app As IAppBuilder, handler As Func(Of IOwinContext, Task))
  overload: Owin.AppBuilderUseExtensions.Run*
  nameWithType.vb: AppBuilderUseExtensions.Run(IAppBuilder, Func(Of IOwinContext, Task))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Owin.AppBuilderUseExtensions.Run(Owin.IAppBuilder, System.Func(Of Microsoft.Owin.IOwinContext, System.Threading.Tasks.Task))
  name.vb: Run(IAppBuilder, Func(Of IOwinContext, Task))
- uid: Owin.AppBuilderUseExtensions.Use(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task})
  commentId: M:Owin.AppBuilderUseExtensions.Use(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task})
  id: Use(Owin.IAppBuilder,System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task})
  isExtensionMethod: true
  parent: Owin.AppBuilderUseExtensions
  langs:
  - csharp
  - vb
  name: Use(IAppBuilder, Func<IOwinContext, Func<Task>, Task>)
  nameWithType: AppBuilderUseExtensions.Use(IAppBuilder, Func<IOwinContext, Func<Task>, Task>)
  fullName: Owin.AppBuilderUseExtensions.Use(Owin.IAppBuilder, System.Func<Microsoft.Owin.IOwinContext, System.Func<System.Threading.Tasks.Task>, System.Threading.Tasks.Task>)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Owin
  summary: "\nInserts a middleware into the OWIN pipeline.\n"
  syntax:
    content: public static IAppBuilder Use(this IAppBuilder app, Func<IOwinContext, Func<Task>, Task> handler)
    parameters:
    - id: app
      type: Owin.IAppBuilder
    - id: handler
      type: System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task}
      description: An app that handles the request or calls the given next Func
    return:
      type: Owin.IAppBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Use(app As IAppBuilder, handler As Func(Of IOwinContext, Func(Of Task), Task)) As IAppBuilder
  overload: Owin.AppBuilderUseExtensions.Use*
  nameWithType.vb: AppBuilderUseExtensions.Use(IAppBuilder, Func(Of IOwinContext, Func(Of Task), Task))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Owin.AppBuilderUseExtensions.Use(Owin.IAppBuilder, System.Func(Of Microsoft.Owin.IOwinContext, System.Func(Of System.Threading.Tasks.Task), System.Threading.Tasks.Task))
  name.vb: Use(IAppBuilder, Func(Of IOwinContext, Func(Of Task), Task))
references:
- uid: Owin
  commentId: N:Owin
  isExternal: false
  name: Owin
  nameWithType: Owin
  fullName: Owin
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Owin.AppBuilderUseExtensions.Use*
  commentId: Overload:Owin.AppBuilderUseExtensions.Use
  isExternal: true
  name: Use
  nameWithType: AppBuilderUseExtensions.Use
  fullName: Owin.AppBuilderUseExtensions.Use
- uid: Owin.IAppBuilder
  isExternal: true
  name: IAppBuilder
  nameWithType: IAppBuilder
  fullName: Owin.IAppBuilder
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Owin.AppBuilderUseExtensions.Run*
  commentId: Overload:Owin.AppBuilderUseExtensions.Run
  isExternal: true
  name: Run
  nameWithType: AppBuilderUseExtensions.Run
  fullName: Owin.AppBuilderUseExtensions.Run
- uid: System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task}
  commentId: T:System.Func{Microsoft.Owin.IOwinContext,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`2
  name: Func<IOwinContext, Task>
  nameWithType: Func<IOwinContext, Task>
  fullName: System.Func<Microsoft.Owin.IOwinContext, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of IOwinContext, Task)
  fullName.vb: System.Func(Of Microsoft.Owin.IOwinContext, System.Threading.Tasks.Task)
  name.vb: Func(Of IOwinContext, Task)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Owin.IOwinContext
    name: IOwinContext
    nameWithType: IOwinContext
    fullName: Microsoft.Owin.IOwinContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Owin.IOwinContext
    name: IOwinContext
    nameWithType: IOwinContext
    fullName: Microsoft.Owin.IOwinContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task}
  commentId: T:System.Func{Microsoft.Owin.IOwinContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`3
  name: Func<IOwinContext, Func<Task>, Task>
  nameWithType: Func<IOwinContext, Func<Task>, Task>
  fullName: System.Func<Microsoft.Owin.IOwinContext, System.Func<System.Threading.Tasks.Task>, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of IOwinContext, Func(Of Task), Task)
  fullName.vb: System.Func(Of Microsoft.Owin.IOwinContext, System.Func(Of System.Threading.Tasks.Task), System.Threading.Tasks.Task)
  name.vb: Func(Of IOwinContext, Func(Of Task), Task)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Owin.IOwinContext
    name: IOwinContext
    nameWithType: IOwinContext
    fullName: Microsoft.Owin.IOwinContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Owin.IOwinContext
    name: IOwinContext
    nameWithType: IOwinContext
    fullName: Microsoft.Owin.IOwinContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
