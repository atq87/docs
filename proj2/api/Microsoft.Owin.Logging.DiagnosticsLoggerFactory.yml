### YamlMime:ManagedReference
items:
- uid: Microsoft.Owin.Logging.DiagnosticsLoggerFactory
  commentId: T:Microsoft.Owin.Logging.DiagnosticsLoggerFactory
  id: DiagnosticsLoggerFactory
  parent: Microsoft.Owin.Logging
  children:
  - Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor
  - Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  - Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create(System.String)
  langs:
  - csharp
  - vb
  name: DiagnosticsLoggerFactory
  nameWithType: DiagnosticsLoggerFactory
  fullName: Microsoft.Owin.Logging.DiagnosticsLoggerFactory
  type: Class
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.Logging
  summary: "\nProvides an ILoggerFactory based on System.Diagnostics.TraceSource.\n"
  syntax:
    content: 'public class DiagnosticsLoggerFactory : ILoggerFactory'
    content.vb: >-
      Public Class DiagnosticsLoggerFactory
          Implements ILoggerFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.Owin.Logging.ILoggerFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor
  commentId: M:Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor
  id: '#ctor'
  parent: Microsoft.Owin.Logging.DiagnosticsLoggerFactory
  langs:
  - csharp
  - vb
  name: DiagnosticsLoggerFactory()
  nameWithType: DiagnosticsLoggerFactory.DiagnosticsLoggerFactory()
  fullName: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.DiagnosticsLoggerFactory()
  type: Constructor
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.Logging
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Owin.Logging.DiagnosticsLoggerFactory\" data-throw-if-not-resolved=\"false\"></xref> class. \n"
  syntax:
    content: public DiagnosticsLoggerFactory()
    content.vb: Public Sub New
  overload: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  commentId: M:Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  id: '#ctor(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)'
  parent: Microsoft.Owin.Logging.DiagnosticsLoggerFactory
  langs:
  - csharp
  - vb
  name: DiagnosticsLoggerFactory(SourceSwitch, TraceListener)
  nameWithType: DiagnosticsLoggerFactory.DiagnosticsLoggerFactory(SourceSwitch, TraceListener)
  fullName: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.DiagnosticsLoggerFactory(System.Diagnostics.SourceSwitch, System.Diagnostics.TraceListener)
  type: Constructor
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.Logging
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Owin.Logging.DiagnosticsLoggerFactory\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public DiagnosticsLoggerFactory(SourceSwitch rootSourceSwitch, TraceListener rootTraceListener)
    parameters:
    - id: rootSourceSwitch
      type: System.Diagnostics.SourceSwitch
    - id: rootTraceListener
      type: System.Diagnostics.TraceListener
    content.vb: Public Sub New(rootSourceSwitch As SourceSwitch, rootTraceListener As TraceListener)
  overload: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create(System.String)
  commentId: M:Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create(System.String)
  id: Create(System.String)
  parent: Microsoft.Owin.Logging.DiagnosticsLoggerFactory
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: DiagnosticsLoggerFactory.Create(String)
  fullName: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create(System.String)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.Logging
  summary: "\nCreates a new DiagnosticsLogger for the given component name.\n"
  syntax:
    content: public ILogger Create(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Owin.Logging.ILogger
    content.vb: Public Function Create(name As String) As ILogger
  overload: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create*
  implements:
  - Microsoft.Owin.Logging.ILoggerFactory.Create(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Owin.Logging
  commentId: N:Microsoft.Owin.Logging
  isExternal: false
  name: Microsoft.Owin.Logging
  nameWithType: Microsoft.Owin.Logging
  fullName: Microsoft.Owin.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Owin.Logging.ILoggerFactory
  commentId: T:Microsoft.Owin.Logging.ILoggerFactory
  parent: Microsoft.Owin.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Owin.Logging.ILoggerFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor*
  commentId: Overload:Microsoft.Owin.Logging.DiagnosticsLoggerFactory.#ctor
  isExternal: true
  name: DiagnosticsLoggerFactory
  nameWithType: DiagnosticsLoggerFactory.DiagnosticsLoggerFactory
  fullName: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.DiagnosticsLoggerFactory
- uid: System.Diagnostics.SourceSwitch
  commentId: '!:System.Diagnostics.SourceSwitch'
  isExternal: true
  name: SourceSwitch
  nameWithType: SourceSwitch
  fullName: System.Diagnostics.SourceSwitch
- uid: System.Diagnostics.TraceListener
  commentId: '!:System.Diagnostics.TraceListener'
  isExternal: true
  name: TraceListener
  nameWithType: TraceListener
  fullName: System.Diagnostics.TraceListener
- uid: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create*
  commentId: Overload:Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create
  isExternal: true
  name: Create
  nameWithType: DiagnosticsLoggerFactory.Create
  fullName: Microsoft.Owin.Logging.DiagnosticsLoggerFactory.Create
- uid: Microsoft.Owin.Logging.ILoggerFactory.Create(System.String)
  commentId: M:Microsoft.Owin.Logging.ILoggerFactory.Create(System.String)
  parent: Microsoft.Owin.Logging.ILoggerFactory
  isExternal: true
  name: Create(String)
  nameWithType: ILoggerFactory.Create(String)
  fullName: Microsoft.Owin.Logging.ILoggerFactory.Create(System.String)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.ILoggerFactory.Create(System.String)
    name: Create
    nameWithType: ILoggerFactory.Create
    fullName: Microsoft.Owin.Logging.ILoggerFactory.Create
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.ILoggerFactory.Create(System.String)
    name: Create
    nameWithType: ILoggerFactory.Create
    fullName: Microsoft.Owin.Logging.ILoggerFactory.Create
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Owin.Logging.ILogger
  commentId: T:Microsoft.Owin.Logging.ILogger
  parent: Microsoft.Owin.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Owin.Logging.ILogger
