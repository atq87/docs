### YamlMime:ManagedReference
items:
- uid: Microsoft.Owin.Logging.AppBuilderLoggerExtensions
  commentId: T:Microsoft.Owin.Logging.AppBuilderLoggerExtensions
  id: AppBuilderLoggerExtensions
  parent: Microsoft.Owin.Logging
  children:
  - Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder,System.String)
  - Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder,System.Type)
  - Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger``1(Owin.IAppBuilder)
  - Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory(Owin.IAppBuilder)
  - Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory(Owin.IAppBuilder,Microsoft.Owin.Logging.ILoggerFactory)
  langs:
  - csharp
  - vb
  name: AppBuilderLoggerExtensions
  nameWithType: AppBuilderLoggerExtensions
  fullName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions
  type: Class
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.Logging
  summary: "\nLogging extension methods for IAppBuilder.\n"
  syntax:
    content: public static class AppBuilderLoggerExtensions
    content.vb: Public Module AppBuilderLoggerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory(Owin.IAppBuilder,Microsoft.Owin.Logging.ILoggerFactory)
  commentId: M:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory(Owin.IAppBuilder,Microsoft.Owin.Logging.ILoggerFactory)
  id: SetLoggerFactory(Owin.IAppBuilder,Microsoft.Owin.Logging.ILoggerFactory)
  isExtensionMethod: true
  parent: Microsoft.Owin.Logging.AppBuilderLoggerExtensions
  langs:
  - csharp
  - vb
  name: SetLoggerFactory(IAppBuilder, ILoggerFactory)
  nameWithType: AppBuilderLoggerExtensions.SetLoggerFactory(IAppBuilder, ILoggerFactory)
  fullName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory(Owin.IAppBuilder, Microsoft.Owin.Logging.ILoggerFactory)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.Logging
  summary: "\nSets the server.LoggerFactory in the Properties collection.\n"
  syntax:
    content: public static void SetLoggerFactory(this IAppBuilder app, ILoggerFactory loggerFactory)
    parameters:
    - id: app
      type: Owin.IAppBuilder
    - id: loggerFactory
      type: Microsoft.Owin.Logging.ILoggerFactory
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetLoggerFactory(app As IAppBuilder, loggerFactory As ILoggerFactory)
  overload: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory(Owin.IAppBuilder)
  commentId: M:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory(Owin.IAppBuilder)
  id: GetLoggerFactory(Owin.IAppBuilder)
  isExtensionMethod: true
  parent: Microsoft.Owin.Logging.AppBuilderLoggerExtensions
  langs:
  - csharp
  - vb
  name: GetLoggerFactory(IAppBuilder)
  nameWithType: AppBuilderLoggerExtensions.GetLoggerFactory(IAppBuilder)
  fullName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory(Owin.IAppBuilder)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.Logging
  summary: "\nRetrieves the server.LoggerFactory from the Properties collection.\n"
  syntax:
    content: public static ILoggerFactory GetLoggerFactory(this IAppBuilder app)
    parameters:
    - id: app
      type: Owin.IAppBuilder
    return:
      type: Microsoft.Owin.Logging.ILoggerFactory
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetLoggerFactory(app As IAppBuilder) As ILoggerFactory
  overload: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder,System.String)
  commentId: M:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder,System.String)
  id: CreateLogger(Owin.IAppBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.Owin.Logging.AppBuilderLoggerExtensions
  langs:
  - csharp
  - vb
  name: CreateLogger(IAppBuilder, String)
  nameWithType: AppBuilderLoggerExtensions.CreateLogger(IAppBuilder, String)
  fullName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder, System.String)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.Logging
  summary: "\nCreates a new ILogger instance from the server.LoggerFactory in the Properties collection.\n"
  syntax:
    content: public static ILogger CreateLogger(this IAppBuilder app, string name)
    parameters:
    - id: app
      type: Owin.IAppBuilder
    - id: name
      type: System.String
    return:
      type: Microsoft.Owin.Logging.ILogger
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateLogger(app As IAppBuilder, name As String) As ILogger
  overload: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder,System.Type)
  commentId: M:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder,System.Type)
  id: CreateLogger(Owin.IAppBuilder,System.Type)
  isExtensionMethod: true
  parent: Microsoft.Owin.Logging.AppBuilderLoggerExtensions
  langs:
  - csharp
  - vb
  name: CreateLogger(IAppBuilder, Type)
  nameWithType: AppBuilderLoggerExtensions.CreateLogger(IAppBuilder, Type)
  fullName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Owin.IAppBuilder, System.Type)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.Logging
  summary: "\nCreates a new ILogger instance from the server.LoggerFactory in the Properties collection.\n"
  syntax:
    content: public static ILogger CreateLogger(this IAppBuilder app, Type component)
    parameters:
    - id: app
      type: Owin.IAppBuilder
    - id: component
      type: System.Type
    return:
      type: Microsoft.Owin.Logging.ILogger
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateLogger(app As IAppBuilder, component As Type) As ILogger
  overload: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger``1(Owin.IAppBuilder)
  commentId: M:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger``1(Owin.IAppBuilder)
  id: CreateLogger``1(Owin.IAppBuilder)
  isExtensionMethod: true
  parent: Microsoft.Owin.Logging.AppBuilderLoggerExtensions
  langs:
  - csharp
  - vb
  name: CreateLogger<TType>(IAppBuilder)
  nameWithType: AppBuilderLoggerExtensions.CreateLogger<TType>(IAppBuilder)
  fullName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger<TType>(Owin.IAppBuilder)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.Logging
  summary: "\nCreates a new ILogger instance from the server.LoggerFactory in the Properties collection.\n"
  syntax:
    content: public static ILogger CreateLogger<TType>(this IAppBuilder app)
    parameters:
    - id: app
      type: Owin.IAppBuilder
    typeParameters:
    - id: TType
    return:
      type: Microsoft.Owin.Logging.ILogger
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateLogger(Of TType)(app As IAppBuilder) As ILogger
  overload: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger*
  nameWithType.vb: AppBuilderLoggerExtensions.CreateLogger(Of TType)(IAppBuilder)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger(Of TType)(Owin.IAppBuilder)
  name.vb: CreateLogger(Of TType)(IAppBuilder)
references:
- uid: Microsoft.Owin.Logging
  commentId: N:Microsoft.Owin.Logging
  isExternal: false
  name: Microsoft.Owin.Logging
  nameWithType: Microsoft.Owin.Logging
  fullName: Microsoft.Owin.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory*
  commentId: Overload:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory
  isExternal: true
  name: SetLoggerFactory
  nameWithType: AppBuilderLoggerExtensions.SetLoggerFactory
  fullName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.SetLoggerFactory
- uid: Owin.IAppBuilder
  isExternal: true
  name: IAppBuilder
  nameWithType: IAppBuilder
  fullName: Owin.IAppBuilder
- uid: Microsoft.Owin.Logging.ILoggerFactory
  commentId: T:Microsoft.Owin.Logging.ILoggerFactory
  parent: Microsoft.Owin.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Owin.Logging.ILoggerFactory
- uid: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory*
  commentId: Overload:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory
  isExternal: true
  name: GetLoggerFactory
  nameWithType: AppBuilderLoggerExtensions.GetLoggerFactory
  fullName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.GetLoggerFactory
- uid: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger*
  commentId: Overload:Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger
  isExternal: true
  name: CreateLogger
  nameWithType: AppBuilderLoggerExtensions.CreateLogger
  fullName: Microsoft.Owin.Logging.AppBuilderLoggerExtensions.CreateLogger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Owin.Logging.ILogger
  commentId: T:Microsoft.Owin.Logging.ILogger
  parent: Microsoft.Owin.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Owin.Logging.ILogger
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
