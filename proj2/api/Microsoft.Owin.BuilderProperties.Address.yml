### YamlMime:ManagedReference
items:
- uid: Microsoft.Owin.BuilderProperties.Address
  commentId: T:Microsoft.Owin.BuilderProperties.Address
  id: Address
  parent: Microsoft.Owin.BuilderProperties
  children:
  - Microsoft.Owin.BuilderProperties.Address.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Microsoft.Owin.BuilderProperties.Address.#ctor(System.String,System.String,System.String,System.String)
  - Microsoft.Owin.BuilderProperties.Address.Create
  - Microsoft.Owin.BuilderProperties.Address.Dictionary
  - Microsoft.Owin.BuilderProperties.Address.Equals(Microsoft.Owin.BuilderProperties.Address)
  - Microsoft.Owin.BuilderProperties.Address.Equals(System.Object)
  - Microsoft.Owin.BuilderProperties.Address.Get``1(System.String)
  - Microsoft.Owin.BuilderProperties.Address.GetHashCode
  - Microsoft.Owin.BuilderProperties.Address.Host
  - Microsoft.Owin.BuilderProperties.Address.op_Equality(Microsoft.Owin.BuilderProperties.Address,Microsoft.Owin.BuilderProperties.Address)
  - Microsoft.Owin.BuilderProperties.Address.op_Inequality(Microsoft.Owin.BuilderProperties.Address,Microsoft.Owin.BuilderProperties.Address)
  - Microsoft.Owin.BuilderProperties.Address.Path
  - Microsoft.Owin.BuilderProperties.Address.Port
  - Microsoft.Owin.BuilderProperties.Address.Scheme
  - Microsoft.Owin.BuilderProperties.Address.Set(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: Address
  fullName: Microsoft.Owin.BuilderProperties.Address
  type: Struct
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nContains the parts of an address.\n"
  syntax:
    content: public struct Address
    content.vb: Public Structure Address
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Owin.BuilderProperties.Address.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Microsoft.Owin.BuilderProperties.Address.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: Address(IDictionary<String, Object>)
  nameWithType: Address.Address(IDictionary<String, Object>)
  fullName: Microsoft.Owin.BuilderProperties.Address.Address(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Constructor
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nInitializes a new instance.\n"
  syntax:
    content: public Address(IDictionary<string, object> dictionary)
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Sub New(dictionary As IDictionary(Of String, Object))
  overload: Microsoft.Owin.BuilderProperties.Address.#ctor*
  nameWithType.vb: Address.Address(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Owin.BuilderProperties.Address.Address(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: Address(IDictionary(Of String, Object))
- uid: Microsoft.Owin.BuilderProperties.Address.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Owin.BuilderProperties.Address.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: Address(String, String, String, String)
  nameWithType: Address.Address(String, String, String, String)
  fullName: Microsoft.Owin.BuilderProperties.Address.Address(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nInitializes a new <xref href=\"Microsoft.Owin.BuilderProperties.Address\" data-throw-if-not-resolved=\"false\"></xref> with the given parts.\n"
  syntax:
    content: public Address(string scheme, string host, string port, string path)
    parameters:
    - id: scheme
      type: System.String
      description: The scheme.
    - id: host
      type: System.String
      description: The host.
    - id: port
      type: System.String
      description: The port.
    - id: path
      type: System.String
      description: The path.
    content.vb: Public Sub New(scheme As String, host As String, port As String, path As String)
  overload: Microsoft.Owin.BuilderProperties.Address.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.BuilderProperties.Address.Create
  commentId: M:Microsoft.Owin.BuilderProperties.Address.Create
  id: Create
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: Address.Create()
  fullName: Microsoft.Owin.BuilderProperties.Address.Create()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nCreates a new <xref href=\"Microsoft.Owin.BuilderProperties.Address\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public static Address Create()
    return:
      type: Microsoft.Owin.BuilderProperties.Address
      description: A new <xref href="Microsoft.Owin.BuilderProperties.Address" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function Create As Address
  overload: Microsoft.Owin.BuilderProperties.Address.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.BuilderProperties.Address.Equals(Microsoft.Owin.BuilderProperties.Address)
  commentId: M:Microsoft.Owin.BuilderProperties.Address.Equals(Microsoft.Owin.BuilderProperties.Address)
  id: Equals(Microsoft.Owin.BuilderProperties.Address)
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: Equals(Address)
  nameWithType: Address.Equals(Address)
  fullName: Microsoft.Owin.BuilderProperties.Address.Equals(Microsoft.Owin.BuilderProperties.Address)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nDetermines whether the specified object is equal to the current object.\n"
  syntax:
    content: public bool Equals(Address other)
    parameters:
    - id: other
      type: Microsoft.Owin.BuilderProperties.Address
      description: The other object.
    return:
      type: System.Boolean
      description: true if the specified object is equal to the current object; otherwise, false.
    content.vb: Public Function Equals(other As Address) As Boolean
  overload: Microsoft.Owin.BuilderProperties.Address.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.BuilderProperties.Address.Equals(System.Object)
  commentId: M:Microsoft.Owin.BuilderProperties.Address.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Address.Equals(Object)
  fullName: Microsoft.Owin.BuilderProperties.Address.Equals(System.Object)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nDetermines whether the specified object is equal to the current object.\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The other object.
    return:
      type: System.Boolean
      description: true if the specified object is equal to the current object; otherwise, false.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Microsoft.Owin.BuilderProperties.Address.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Owin.BuilderProperties.Address.GetHashCode
  commentId: M:Microsoft.Owin.BuilderProperties.Address.GetHashCode
  id: GetHashCode
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Address.GetHashCode()
  fullName: Microsoft.Owin.BuilderProperties.Address.GetHashCode()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nReturns the hash code for this instance.\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: The hash code for this instance.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Microsoft.Owin.BuilderProperties.Address.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Owin.BuilderProperties.Address.op_Equality(Microsoft.Owin.BuilderProperties.Address,Microsoft.Owin.BuilderProperties.Address)
  commentId: M:Microsoft.Owin.BuilderProperties.Address.op_Equality(Microsoft.Owin.BuilderProperties.Address,Microsoft.Owin.BuilderProperties.Address)
  id: op_Equality(Microsoft.Owin.BuilderProperties.Address,Microsoft.Owin.BuilderProperties.Address)
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: Equality(Address, Address)
  nameWithType: Address.Equality(Address, Address)
  fullName: Microsoft.Owin.BuilderProperties.Address.Equality(Microsoft.Owin.BuilderProperties.Address, Microsoft.Owin.BuilderProperties.Address)
  type: Operator
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nDetermines whether two specified instances of <xref href=\"Microsoft.Owin.BuilderProperties.Address\" data-throw-if-not-resolved=\"false\"></xref> are equal.\n"
  syntax:
    content: public static bool operator ==(Address left, Address right)
    parameters:
    - id: left
      type: Microsoft.Owin.BuilderProperties.Address
      description: The first object to compare.
    - id: right
      type: Microsoft.Owin.BuilderProperties.Address
      description: The second object to compare.
    return:
      type: System.Boolean
      description: true if left and right represent the same address; otherwise, false.
    content.vb: Public Shared Operator =(left As Address, right As Address) As Boolean
  overload: Microsoft.Owin.BuilderProperties.Address.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.BuilderProperties.Address.op_Inequality(Microsoft.Owin.BuilderProperties.Address,Microsoft.Owin.BuilderProperties.Address)
  commentId: M:Microsoft.Owin.BuilderProperties.Address.op_Inequality(Microsoft.Owin.BuilderProperties.Address,Microsoft.Owin.BuilderProperties.Address)
  id: op_Inequality(Microsoft.Owin.BuilderProperties.Address,Microsoft.Owin.BuilderProperties.Address)
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: Inequality(Address, Address)
  nameWithType: Address.Inequality(Address, Address)
  fullName: Microsoft.Owin.BuilderProperties.Address.Inequality(Microsoft.Owin.BuilderProperties.Address, Microsoft.Owin.BuilderProperties.Address)
  type: Operator
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nDetermines whether two specified instances of <xref href=\"Microsoft.Owin.BuilderProperties.Address\" data-throw-if-not-resolved=\"false\"></xref> are not equal.\n"
  syntax:
    content: public static bool operator !=(Address left, Address right)
    parameters:
    - id: left
      type: Microsoft.Owin.BuilderProperties.Address
      description: The first object to compare.
    - id: right
      type: Microsoft.Owin.BuilderProperties.Address
      description: The second object to compare.
    return:
      type: System.Boolean
      description: true if left and right do not represent the same address; otherwise, false.
    content.vb: Public Shared Operator <>(left As Address, right As Address) As Boolean
  overload: Microsoft.Owin.BuilderProperties.Address.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.BuilderProperties.Address.Get``1(System.String)
  commentId: M:Microsoft.Owin.BuilderProperties.Address.Get``1(System.String)
  id: Get``1(System.String)
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: Get<T>(String)
  nameWithType: Address.Get<T>(String)
  fullName: Microsoft.Owin.BuilderProperties.Address.Get<T>(System.String)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nGets a specified key and value from the underlying dictionary.\n"
  syntax:
    content: public T Get<T>(string key)
    parameters:
    - id: key
      type: System.String
      description: The key.
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Get(Of T)(key As String) As T
  overload: Microsoft.Owin.BuilderProperties.Address.Get*
  nameWithType.vb: Address.Get(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Owin.BuilderProperties.Address.Get(Of T)(System.String)
  name.vb: Get(Of T)(String)
- uid: Microsoft.Owin.BuilderProperties.Address.Set(System.String,System.Object)
  commentId: M:Microsoft.Owin.BuilderProperties.Address.Set(System.String,System.Object)
  id: Set(System.String,System.Object)
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: Set(String, Object)
  nameWithType: Address.Set(String, Object)
  fullName: Microsoft.Owin.BuilderProperties.Address.Set(System.String, System.Object)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nSets a specified key and value in the underlying dictionary.\n"
  syntax:
    content: public Address Set(string key, object value)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: value
      type: System.Object
      description: The value.
    return:
      type: Microsoft.Owin.BuilderProperties.Address
    content.vb: Public Function Set(key As String, value As Object) As Address
  overload: Microsoft.Owin.BuilderProperties.Address.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.BuilderProperties.Address.Dictionary
  commentId: P:Microsoft.Owin.BuilderProperties.Address.Dictionary
  id: Dictionary
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: Dictionary
  nameWithType: Address.Dictionary
  fullName: Microsoft.Owin.BuilderProperties.Address.Dictionary
  type: Property
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nGets the internal dictionary for this collection.\n"
  syntax:
    content: public IDictionary<string, object> Dictionary { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: The internal dictionary for this collection.
    content.vb: Public ReadOnly Property Dictionary As IDictionary(Of String, Object)
  overload: Microsoft.Owin.BuilderProperties.Address.Dictionary*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Owin.BuilderProperties.Address.Scheme
  commentId: P:Microsoft.Owin.BuilderProperties.Address.Scheme
  id: Scheme
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: Address.Scheme
  fullName: Microsoft.Owin.BuilderProperties.Address.Scheme
  type: Property
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nThe uri scheme.\n"
  syntax:
    content: public string Scheme { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Scheme As String
  overload: Microsoft.Owin.BuilderProperties.Address.Scheme*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.BuilderProperties.Address.Host
  commentId: P:Microsoft.Owin.BuilderProperties.Address.Host
  id: Host
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: Address.Host
  fullName: Microsoft.Owin.BuilderProperties.Address.Host
  type: Property
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nThe uri host.\n"
  syntax:
    content: public string Host { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Host As String
  overload: Microsoft.Owin.BuilderProperties.Address.Host*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.BuilderProperties.Address.Port
  commentId: P:Microsoft.Owin.BuilderProperties.Address.Port
  id: Port
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: Address.Port
  fullName: Microsoft.Owin.BuilderProperties.Address.Port
  type: Property
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nThe uri port.\n"
  syntax:
    content: public string Port { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Port As String
  overload: Microsoft.Owin.BuilderProperties.Address.Port*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.BuilderProperties.Address.Path
  commentId: P:Microsoft.Owin.BuilderProperties.Address.Path
  id: Path
  parent: Microsoft.Owin.BuilderProperties.Address
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: Address.Path
  fullName: Microsoft.Owin.BuilderProperties.Address.Path
  type: Property
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.BuilderProperties
  summary: "\nThe uri path.\n"
  syntax:
    content: public string Path { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Path As String
  overload: Microsoft.Owin.BuilderProperties.Address.Path*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Owin.BuilderProperties
  commentId: N:Microsoft.Owin.BuilderProperties
  isExternal: false
  name: Microsoft.Owin.BuilderProperties
  nameWithType: Microsoft.Owin.BuilderProperties
  fullName: Microsoft.Owin.BuilderProperties
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Owin.BuilderProperties.Address.#ctor*
  commentId: Overload:Microsoft.Owin.BuilderProperties.Address.#ctor
  isExternal: true
  name: Address
  nameWithType: Address.Address
  fullName: Microsoft.Owin.BuilderProperties.Address.Address
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Owin.BuilderProperties.Address.Create*
  commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Create
  isExternal: true
  name: Create
  nameWithType: Address.Create
  fullName: Microsoft.Owin.BuilderProperties.Address.Create
- uid: Microsoft.Owin.BuilderProperties.Address
  commentId: T:Microsoft.Owin.BuilderProperties.Address
  parent: Microsoft.Owin.BuilderProperties
  isExternal: true
  name: Address
  nameWithType: Address
  fullName: Microsoft.Owin.BuilderProperties.Address
- uid: Microsoft.Owin.BuilderProperties.Address.Equals*
  commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Equals
  isExternal: true
  name: Equals
  nameWithType: Address.Equals
  fullName: Microsoft.Owin.BuilderProperties.Address.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.BuilderProperties.Address.GetHashCode*
  commentId: Overload:Microsoft.Owin.BuilderProperties.Address.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: Address.GetHashCode
  fullName: Microsoft.Owin.BuilderProperties.Address.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Owin.BuilderProperties.Address.op_Equality*
  commentId: Overload:Microsoft.Owin.BuilderProperties.Address.op_Equality
  isExternal: true
  name: Equality
  nameWithType: Address.Equality
  fullName: Microsoft.Owin.BuilderProperties.Address.Equality
- uid: Microsoft.Owin.BuilderProperties.Address.op_Inequality*
  commentId: Overload:Microsoft.Owin.BuilderProperties.Address.op_Inequality
  isExternal: true
  name: Inequality
  nameWithType: Address.Inequality
  fullName: Microsoft.Owin.BuilderProperties.Address.Inequality
- uid: Microsoft.Owin.BuilderProperties.Address.Get*
  commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Get
  isExternal: true
  name: Get
  nameWithType: Address.Get
  fullName: Microsoft.Owin.BuilderProperties.Address.Get
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Owin.BuilderProperties.Address.Set*
  commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Set
  isExternal: true
  name: Set
  nameWithType: Address.Set
  fullName: Microsoft.Owin.BuilderProperties.Address.Set
- uid: Microsoft.Owin.BuilderProperties.Address.Dictionary*
  commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Dictionary
  isExternal: true
  name: Dictionary
  nameWithType: Address.Dictionary
  fullName: Microsoft.Owin.BuilderProperties.Address.Dictionary
- uid: Microsoft.Owin.BuilderProperties.Address.Scheme*
  commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Scheme
  isExternal: true
  name: Scheme
  nameWithType: Address.Scheme
  fullName: Microsoft.Owin.BuilderProperties.Address.Scheme
- uid: Microsoft.Owin.BuilderProperties.Address.Host*
  commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Host
  isExternal: true
  name: Host
  nameWithType: Address.Host
  fullName: Microsoft.Owin.BuilderProperties.Address.Host
- uid: Microsoft.Owin.BuilderProperties.Address.Port*
  commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Port
  isExternal: true
  name: Port
  nameWithType: Address.Port
  fullName: Microsoft.Owin.BuilderProperties.Address.Port
- uid: Microsoft.Owin.BuilderProperties.Address.Path*
  commentId: Overload:Microsoft.Owin.BuilderProperties.Address.Path
  isExternal: true
  name: Path
  nameWithType: Address.Path
  fullName: Microsoft.Owin.BuilderProperties.Address.Path
