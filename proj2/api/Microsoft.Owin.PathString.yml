### YamlMime:ManagedReference
items:
- uid: Microsoft.Owin.PathString
  commentId: T:Microsoft.Owin.PathString
  id: PathString
  parent: Microsoft.Owin
  children:
  - Microsoft.Owin.PathString.#ctor(System.String)
  - Microsoft.Owin.PathString.Add(Microsoft.Owin.PathString)
  - Microsoft.Owin.PathString.Add(Microsoft.Owin.QueryString)
  - Microsoft.Owin.PathString.Empty
  - Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString)
  - Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString,System.StringComparison)
  - Microsoft.Owin.PathString.Equals(System.Object)
  - Microsoft.Owin.PathString.FromUriComponent(System.String)
  - Microsoft.Owin.PathString.FromUriComponent(System.Uri)
  - Microsoft.Owin.PathString.GetHashCode
  - Microsoft.Owin.PathString.HasValue
  - Microsoft.Owin.PathString.op_Addition(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
  - Microsoft.Owin.PathString.op_Addition(Microsoft.Owin.PathString,Microsoft.Owin.QueryString)
  - Microsoft.Owin.PathString.op_Equality(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
  - Microsoft.Owin.PathString.op_Inequality(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
  - Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString)
  - Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString,Microsoft.Owin.PathString@)
  - Microsoft.Owin.PathString.ToString
  - Microsoft.Owin.PathString.ToUriComponent
  - Microsoft.Owin.PathString.Value
  langs:
  - csharp
  - vb
  name: PathString
  nameWithType: PathString
  fullName: Microsoft.Owin.PathString
  type: Struct
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nProvides correct escaping for Path and PathBase values when needed to reconstruct a request or redirect URI string\n"
  syntax:
    content: 'public struct PathString : IEquatable<PathString>'
    content.vb: >-
      Public Structure PathString
          Implements IEquatable(Of PathString)
  implements:
  - System.IEquatable{Microsoft.Owin.PathString}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Owin.PathString.Empty
  commentId: F:Microsoft.Owin.PathString.Empty
  id: Empty
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: PathString.Empty
  fullName: Microsoft.Owin.PathString.Empty
  type: Field
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nRepresents the empty path. This field is read-only.\n"
  syntax:
    content: public static readonly PathString Empty
    return:
      type: Microsoft.Owin.PathString
    content.vb: Public Shared ReadOnly Empty As PathString
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Owin.PathString.#ctor(System.String)
  commentId: M:Microsoft.Owin.PathString.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: PathString(String)
  nameWithType: PathString.PathString(String)
  fullName: Microsoft.Owin.PathString.PathString(System.String)
  type: Constructor
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nInitialize the path string with a given value. This value must be in un-escaped format. Use\nPathString.FromUriComponent(value) if you have a path value which is in an escaped format.\n"
  syntax:
    content: public PathString(string value)
    parameters:
    - id: value
      type: System.String
      description: The unescaped path to be assigned to the Value property.
    content.vb: Public Sub New(value As String)
  overload: Microsoft.Owin.PathString.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.PathString.ToString
  commentId: M:Microsoft.Owin.PathString.ToString
  id: ToString
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PathString.ToString()
  fullName: Microsoft.Owin.PathString.ToString()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nProvides the path string escaped in a way which is correct for combining into the URI representation. \n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The escaped path value
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Microsoft.Owin.PathString.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Owin.PathString.ToUriComponent
  commentId: M:Microsoft.Owin.PathString.ToUriComponent
  id: ToUriComponent
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: ToUriComponent()
  nameWithType: PathString.ToUriComponent()
  fullName: Microsoft.Owin.PathString.ToUriComponent()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nProvides the path string escaped in a way which is correct for combining into the URI representation.\n"
  syntax:
    content: public string ToUriComponent()
    return:
      type: System.String
      description: The escaped path value
    content.vb: Public Function ToUriComponent As String
  overload: Microsoft.Owin.PathString.ToUriComponent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.PathString.FromUriComponent(System.String)
  commentId: M:Microsoft.Owin.PathString.FromUriComponent(System.String)
  id: FromUriComponent(System.String)
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: FromUriComponent(String)
  nameWithType: PathString.FromUriComponent(String)
  fullName: Microsoft.Owin.PathString.FromUriComponent(System.String)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nReturns an PathString given the path as it is escaped in the URI format. The string MUST NOT contain any\nvalue that is not a path.\n"
  syntax:
    content: public static PathString FromUriComponent(string uriComponent)
    parameters:
    - id: uriComponent
      type: System.String
      description: The escaped path as it appears in the URI format.
    return:
      type: Microsoft.Owin.PathString
      description: The resulting PathString
    content.vb: Public Shared Function FromUriComponent(uriComponent As String) As PathString
  overload: Microsoft.Owin.PathString.FromUriComponent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.PathString.FromUriComponent(System.Uri)
  commentId: M:Microsoft.Owin.PathString.FromUriComponent(System.Uri)
  id: FromUriComponent(System.Uri)
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: FromUriComponent(Uri)
  nameWithType: PathString.FromUriComponent(Uri)
  fullName: Microsoft.Owin.PathString.FromUriComponent(System.Uri)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nReturns an PathString given the path as from a Uri object. Relative Uri objects are not supported.\n"
  syntax:
    content: public static PathString FromUriComponent(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The Uri object
    return:
      type: Microsoft.Owin.PathString
      description: The resulting PathString
    content.vb: Public Shared Function FromUriComponent(uri As Uri) As PathString
  overload: Microsoft.Owin.PathString.FromUriComponent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString)
  commentId: M:Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString)
  id: StartsWithSegments(Microsoft.Owin.PathString)
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: StartsWithSegments(PathString)
  nameWithType: PathString.StartsWithSegments(PathString)
  fullName: Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nChecks if this instance starts with or exactly matches the other instance. Only full segments are matched.\n"
  syntax:
    content: public bool StartsWithSegments(PathString other)
    parameters:
    - id: other
      type: Microsoft.Owin.PathString
    return:
      type: System.Boolean
    content.vb: Public Function StartsWithSegments(other As PathString) As Boolean
  overload: Microsoft.Owin.PathString.StartsWithSegments*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString,Microsoft.Owin.PathString@)
  commentId: M:Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString,Microsoft.Owin.PathString@)
  id: StartsWithSegments(Microsoft.Owin.PathString,Microsoft.Owin.PathString@)
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: StartsWithSegments(PathString, out PathString)
  nameWithType: PathString.StartsWithSegments(PathString, out PathString)
  fullName: Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString, out Microsoft.Owin.PathString)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nChecks if this instance starts with or exactly matches the other instance. Only full segments are matched.\n"
  syntax:
    content: public bool StartsWithSegments(PathString other, out PathString remaining)
    parameters:
    - id: other
      type: Microsoft.Owin.PathString
    - id: remaining
      type: Microsoft.Owin.PathString
      description: Any remaining segments from this instance not included in the other instance.
    return:
      type: System.Boolean
    content.vb: Public Function StartsWithSegments(other As PathString, ByRef remaining As PathString) As Boolean
  overload: Microsoft.Owin.PathString.StartsWithSegments*
  nameWithType.vb: PathString.StartsWithSegments(PathString, ByRef PathString)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Owin.PathString.StartsWithSegments(Microsoft.Owin.PathString, ByRef Microsoft.Owin.PathString)
  name.vb: StartsWithSegments(PathString, ByRef PathString)
- uid: Microsoft.Owin.PathString.Add(Microsoft.Owin.PathString)
  commentId: M:Microsoft.Owin.PathString.Add(Microsoft.Owin.PathString)
  id: Add(Microsoft.Owin.PathString)
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: Add(PathString)
  nameWithType: PathString.Add(PathString)
  fullName: Microsoft.Owin.PathString.Add(Microsoft.Owin.PathString)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nAdds two PathString instances into a combined PathString value. \n"
  syntax:
    content: public PathString Add(PathString other)
    parameters:
    - id: other
      type: Microsoft.Owin.PathString
    return:
      type: Microsoft.Owin.PathString
      description: The combined PathString value
    content.vb: Public Function Add(other As PathString) As PathString
  overload: Microsoft.Owin.PathString.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.PathString.Add(Microsoft.Owin.QueryString)
  commentId: M:Microsoft.Owin.PathString.Add(Microsoft.Owin.QueryString)
  id: Add(Microsoft.Owin.QueryString)
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: Add(QueryString)
  nameWithType: PathString.Add(QueryString)
  fullName: Microsoft.Owin.PathString.Add(Microsoft.Owin.QueryString)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nCombines a PathString and QueryString into the joined URI formatted string value. \n"
  syntax:
    content: public string Add(QueryString other)
    parameters:
    - id: other
      type: Microsoft.Owin.QueryString
    return:
      type: System.String
      description: The joined URI formatted string value
    content.vb: Public Function Add(other As QueryString) As String
  overload: Microsoft.Owin.PathString.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString)
  commentId: M:Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString)
  id: Equals(Microsoft.Owin.PathString)
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: Equals(PathString)
  nameWithType: PathString.Equals(PathString)
  fullName: Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nCompares this PathString value to another value. The default comparison is StringComparison.OrdinalIgnoreCase.\n"
  syntax:
    content: public bool Equals(PathString other)
    parameters:
    - id: other
      type: Microsoft.Owin.PathString
      description: The second PathString for comparison.
    return:
      type: System.Boolean
      description: True if both PathString values are equal
    content.vb: Public Function Equals(other As PathString) As Boolean
  overload: Microsoft.Owin.PathString.Equals*
  implements:
  - System.IEquatable{Microsoft.Owin.PathString}.Equals(Microsoft.Owin.PathString)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString,System.StringComparison)
  commentId: M:Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString,System.StringComparison)
  id: Equals(Microsoft.Owin.PathString,System.StringComparison)
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: Equals(PathString, StringComparison)
  nameWithType: PathString.Equals(PathString, StringComparison)
  fullName: Microsoft.Owin.PathString.Equals(Microsoft.Owin.PathString, System.StringComparison)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nCompares this PathString value to another value using a specific StringComparison type\n"
  syntax:
    content: public bool Equals(PathString other, StringComparison comparisonType)
    parameters:
    - id: other
      type: Microsoft.Owin.PathString
      description: The second PathString for comparison
    - id: comparisonType
      type: System.StringComparison
      description: The StringComparison type to use
    return:
      type: System.Boolean
      description: True if both PathString values are equal
    content.vb: Public Function Equals(other As PathString, comparisonType As StringComparison) As Boolean
  overload: Microsoft.Owin.PathString.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.PathString.Equals(System.Object)
  commentId: M:Microsoft.Owin.PathString.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: PathString.Equals(Object)
  fullName: Microsoft.Owin.PathString.Equals(System.Object)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nCompares this PathString value to another value. The default comparison is StringComparison.OrdinalIgnoreCase.\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The second PathString for comparison.
    return:
      type: System.Boolean
      description: True if both PathString values are equal
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Microsoft.Owin.PathString.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Owin.PathString.GetHashCode
  commentId: M:Microsoft.Owin.PathString.GetHashCode
  id: GetHashCode
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PathString.GetHashCode()
  fullName: Microsoft.Owin.PathString.GetHashCode()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nReturns the hash code for the PathString value. The hash code is provided by the OrdinalIgnoreCase implementation.\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: The hash code
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Microsoft.Owin.PathString.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Owin.PathString.op_Equality(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
  commentId: M:Microsoft.Owin.PathString.op_Equality(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
  id: op_Equality(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: Equality(PathString, PathString)
  nameWithType: PathString.Equality(PathString, PathString)
  fullName: Microsoft.Owin.PathString.Equality(Microsoft.Owin.PathString, Microsoft.Owin.PathString)
  type: Operator
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nOperator call through to Equals\n"
  syntax:
    content: public static bool operator ==(PathString left, PathString right)
    parameters:
    - id: left
      type: Microsoft.Owin.PathString
      description: The left parameter
    - id: right
      type: Microsoft.Owin.PathString
      description: The right parameter
    return:
      type: System.Boolean
      description: True if both PathString values are equal
    content.vb: Public Shared Operator =(left As PathString, right As PathString) As Boolean
  overload: Microsoft.Owin.PathString.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.PathString.op_Inequality(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
  commentId: M:Microsoft.Owin.PathString.op_Inequality(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
  id: op_Inequality(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: Inequality(PathString, PathString)
  nameWithType: PathString.Inequality(PathString, PathString)
  fullName: Microsoft.Owin.PathString.Inequality(Microsoft.Owin.PathString, Microsoft.Owin.PathString)
  type: Operator
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nOperator call through to Equals\n"
  syntax:
    content: public static bool operator !=(PathString left, PathString right)
    parameters:
    - id: left
      type: Microsoft.Owin.PathString
      description: The left parameter
    - id: right
      type: Microsoft.Owin.PathString
      description: The right parameter
    return:
      type: System.Boolean
      description: True if both PathString values are not equal
    content.vb: Public Shared Operator <>(left As PathString, right As PathString) As Boolean
  overload: Microsoft.Owin.PathString.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.PathString.op_Addition(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
  commentId: M:Microsoft.Owin.PathString.op_Addition(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
  id: op_Addition(Microsoft.Owin.PathString,Microsoft.Owin.PathString)
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: Addition(PathString, PathString)
  nameWithType: PathString.Addition(PathString, PathString)
  fullName: Microsoft.Owin.PathString.Addition(Microsoft.Owin.PathString, Microsoft.Owin.PathString)
  type: Operator
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nOperator call through to Add\n"
  syntax:
    content: public static PathString operator +(PathString left, PathString right)
    parameters:
    - id: left
      type: Microsoft.Owin.PathString
      description: The left parameter
    - id: right
      type: Microsoft.Owin.PathString
      description: The right parameter
    return:
      type: Microsoft.Owin.PathString
      description: The PathString combination of both values
    content.vb: Public Shared Operator +(left As PathString, right As PathString) As PathString
  overload: Microsoft.Owin.PathString.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.PathString.op_Addition(Microsoft.Owin.PathString,Microsoft.Owin.QueryString)
  commentId: M:Microsoft.Owin.PathString.op_Addition(Microsoft.Owin.PathString,Microsoft.Owin.QueryString)
  id: op_Addition(Microsoft.Owin.PathString,Microsoft.Owin.QueryString)
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: Addition(PathString, QueryString)
  nameWithType: PathString.Addition(PathString, QueryString)
  fullName: Microsoft.Owin.PathString.Addition(Microsoft.Owin.PathString, Microsoft.Owin.QueryString)
  type: Operator
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nOperator call through to Add\n"
  syntax:
    content: public static string operator +(PathString left, QueryString right)
    parameters:
    - id: left
      type: Microsoft.Owin.PathString
      description: The left parameter
    - id: right
      type: Microsoft.Owin.QueryString
      description: The right parameter
    return:
      type: System.String
      description: The PathString combination of both values
    content.vb: Public Shared Operator +(left As PathString, right As QueryString) As String
  overload: Microsoft.Owin.PathString.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.PathString.Value
  commentId: P:Microsoft.Owin.PathString.Value
  id: Value
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: PathString.Value
  fullName: Microsoft.Owin.PathString.Value
  type: Property
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nThe unescaped path value\n"
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: Microsoft.Owin.PathString.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Owin.PathString.HasValue
  commentId: P:Microsoft.Owin.PathString.HasValue
  id: HasValue
  parent: Microsoft.Owin.PathString
  langs:
  - csharp
  - vb
  name: HasValue
  nameWithType: PathString.HasValue
  fullName: Microsoft.Owin.PathString.HasValue
  type: Property
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nTrue if the path is not empty\n"
  syntax:
    content: public bool HasValue { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasValue As Boolean
  overload: Microsoft.Owin.PathString.HasValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Owin
  commentId: N:Microsoft.Owin
  isExternal: false
  name: Microsoft.Owin
  nameWithType: Microsoft.Owin
  fullName: Microsoft.Owin
- uid: System.IEquatable{Microsoft.Owin.PathString}
  commentId: T:System.IEquatable{Microsoft.Owin.PathString}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<PathString>
  nameWithType: IEquatable<PathString>
  fullName: System.IEquatable<Microsoft.Owin.PathString>
  nameWithType.vb: IEquatable(Of PathString)
  fullName.vb: System.IEquatable(Of Microsoft.Owin.PathString)
  name.vb: IEquatable(Of PathString)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Owin.PathString
    name: PathString
    nameWithType: PathString
    fullName: Microsoft.Owin.PathString
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Owin.PathString
    name: PathString
    nameWithType: PathString
    fullName: Microsoft.Owin.PathString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Owin.PathString
  commentId: T:Microsoft.Owin.PathString
  parent: Microsoft.Owin
  isExternal: true
  name: PathString
  nameWithType: PathString
  fullName: Microsoft.Owin.PathString
- uid: Microsoft.Owin.PathString.#ctor*
  commentId: Overload:Microsoft.Owin.PathString.#ctor
  isExternal: true
  name: PathString
  nameWithType: PathString.PathString
  fullName: Microsoft.Owin.PathString.PathString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.PathString.ToString*
  commentId: Overload:Microsoft.Owin.PathString.ToString
  isExternal: true
  name: ToString
  nameWithType: PathString.ToString
  fullName: Microsoft.Owin.PathString.ToString
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: Microsoft.Owin.PathString.ToUriComponent*
  commentId: Overload:Microsoft.Owin.PathString.ToUriComponent
  isExternal: true
  name: ToUriComponent
  nameWithType: PathString.ToUriComponent
  fullName: Microsoft.Owin.PathString.ToUriComponent
- uid: Microsoft.Owin.PathString.FromUriComponent*
  commentId: Overload:Microsoft.Owin.PathString.FromUriComponent
  isExternal: true
  name: FromUriComponent
  nameWithType: PathString.FromUriComponent
  fullName: Microsoft.Owin.PathString.FromUriComponent
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Owin.PathString.StartsWithSegments*
  commentId: Overload:Microsoft.Owin.PathString.StartsWithSegments
  isExternal: true
  name: StartsWithSegments
  nameWithType: PathString.StartsWithSegments
  fullName: Microsoft.Owin.PathString.StartsWithSegments
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Owin.PathString.Add*
  commentId: Overload:Microsoft.Owin.PathString.Add
  isExternal: true
  name: Add
  nameWithType: PathString.Add
  fullName: Microsoft.Owin.PathString.Add
- uid: Microsoft.Owin.QueryString
  commentId: T:Microsoft.Owin.QueryString
  parent: Microsoft.Owin
  isExternal: true
  name: QueryString
  nameWithType: QueryString
  fullName: Microsoft.Owin.QueryString
- uid: Microsoft.Owin.PathString.Equals*
  commentId: Overload:Microsoft.Owin.PathString.Equals
  isExternal: true
  name: Equals
  nameWithType: PathString.Equals
  fullName: Microsoft.Owin.PathString.Equals
- uid: System.IEquatable{Microsoft.Owin.PathString}.Equals(Microsoft.Owin.PathString)
  commentId: M:System.IEquatable{Microsoft.Owin.PathString}.Equals(Microsoft.Owin.PathString)
  parent: System.IEquatable{Microsoft.Owin.PathString}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(PathString)
  nameWithType: IEquatable<PathString>.Equals(PathString)
  fullName: System.IEquatable<Microsoft.Owin.PathString>.Equals(Microsoft.Owin.PathString)
  nameWithType.vb: IEquatable(Of PathString).Equals(PathString)
  fullName.vb: System.IEquatable(Of Microsoft.Owin.PathString).Equals(Microsoft.Owin.PathString)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<PathString>.Equals
    fullName: System.IEquatable<Microsoft.Owin.PathString>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.PathString
    name: PathString
    nameWithType: PathString
    fullName: Microsoft.Owin.PathString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of PathString).Equals
    fullName: System.IEquatable(Of Microsoft.Owin.PathString).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.PathString
    name: PathString
    nameWithType: PathString
    fullName: Microsoft.Owin.PathString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.StringComparison
  commentId: T:System.StringComparison
  parent: System
  isExternal: true
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.PathString.GetHashCode*
  commentId: Overload:Microsoft.Owin.PathString.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: PathString.GetHashCode
  fullName: Microsoft.Owin.PathString.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Owin.PathString.op_Equality*
  commentId: Overload:Microsoft.Owin.PathString.op_Equality
  isExternal: true
  name: Equality
  nameWithType: PathString.Equality
  fullName: Microsoft.Owin.PathString.Equality
- uid: Microsoft.Owin.PathString.op_Inequality*
  commentId: Overload:Microsoft.Owin.PathString.op_Inequality
  isExternal: true
  name: Inequality
  nameWithType: PathString.Inequality
  fullName: Microsoft.Owin.PathString.Inequality
- uid: Microsoft.Owin.PathString.op_Addition*
  commentId: Overload:Microsoft.Owin.PathString.op_Addition
  isExternal: true
  name: Addition
  nameWithType: PathString.Addition
  fullName: Microsoft.Owin.PathString.Addition
- uid: Microsoft.Owin.PathString.Value*
  commentId: Overload:Microsoft.Owin.PathString.Value
  isExternal: true
  name: Value
  nameWithType: PathString.Value
  fullName: Microsoft.Owin.PathString.Value
- uid: Microsoft.Owin.PathString.HasValue*
  commentId: Overload:Microsoft.Owin.PathString.HasValue
  isExternal: true
  name: HasValue
  nameWithType: PathString.HasValue
  fullName: Microsoft.Owin.PathString.HasValue
