### YamlMime:ManagedReference
items:
- uid: Microsoft.Owin.QueryString
  commentId: T:Microsoft.Owin.QueryString
  id: QueryString
  parent: Microsoft.Owin
  children:
  - Microsoft.Owin.QueryString.#ctor(System.String)
  - Microsoft.Owin.QueryString.#ctor(System.String,System.String)
  - Microsoft.Owin.QueryString.Empty
  - Microsoft.Owin.QueryString.Equals(Microsoft.Owin.QueryString)
  - Microsoft.Owin.QueryString.Equals(System.Object)
  - Microsoft.Owin.QueryString.FromUriComponent(System.String)
  - Microsoft.Owin.QueryString.FromUriComponent(System.Uri)
  - Microsoft.Owin.QueryString.GetHashCode
  - Microsoft.Owin.QueryString.HasValue
  - Microsoft.Owin.QueryString.op_Equality(Microsoft.Owin.QueryString,Microsoft.Owin.QueryString)
  - Microsoft.Owin.QueryString.op_Inequality(Microsoft.Owin.QueryString,Microsoft.Owin.QueryString)
  - Microsoft.Owin.QueryString.ToString
  - Microsoft.Owin.QueryString.ToUriComponent
  - Microsoft.Owin.QueryString.Value
  langs:
  - csharp
  - vb
  name: QueryString
  nameWithType: QueryString
  fullName: Microsoft.Owin.QueryString
  type: Struct
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nProvides correct handling for QueryString value when needed to reconstruct a request or redirect URI string\n"
  syntax:
    content: 'public struct QueryString : IEquatable<QueryString>'
    content.vb: >-
      Public Structure QueryString
          Implements IEquatable(Of QueryString)
  implements:
  - System.IEquatable{Microsoft.Owin.QueryString}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Owin.QueryString.Empty
  commentId: F:Microsoft.Owin.QueryString.Empty
  id: Empty
  parent: Microsoft.Owin.QueryString
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: QueryString.Empty
  fullName: Microsoft.Owin.QueryString.Empty
  type: Field
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nRepresents the empty query string. This field is read-only.\n"
  syntax:
    content: public static readonly QueryString Empty
    return:
      type: Microsoft.Owin.QueryString
    content.vb: Public Shared ReadOnly Empty As QueryString
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Owin.QueryString.#ctor(System.String)
  commentId: M:Microsoft.Owin.QueryString.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Owin.QueryString
  langs:
  - csharp
  - vb
  name: QueryString(String)
  nameWithType: QueryString.QueryString(String)
  fullName: Microsoft.Owin.QueryString.QueryString(System.String)
  type: Constructor
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nInitialize the query string with a given value. This value must be in escaped and delimited format without\na leading &apos;?&apos; character. \n"
  syntax:
    content: public QueryString(string value)
    parameters:
    - id: value
      type: System.String
      description: The query string to be assigned to the Value property.
    content.vb: Public Sub New(value As String)
  overload: Microsoft.Owin.QueryString.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.QueryString.#ctor(System.String,System.String)
  commentId: M:Microsoft.Owin.QueryString.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Owin.QueryString
  langs:
  - csharp
  - vb
  name: QueryString(String, String)
  nameWithType: QueryString.QueryString(String, String)
  fullName: Microsoft.Owin.QueryString.QueryString(System.String, System.String)
  type: Constructor
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nInitialize a query string with a single given parameter name and value. The value is \n"
  syntax:
    content: public QueryString(string name, string value)
    parameters:
    - id: name
      type: System.String
      description: The unencoded parameter name
    - id: value
      type: System.String
      description: The unencoded parameter value
    content.vb: Public Sub New(name As String, value As String)
  overload: Microsoft.Owin.QueryString.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.QueryString.ToString
  commentId: M:Microsoft.Owin.QueryString.ToString
  id: ToString
  parent: Microsoft.Owin.QueryString
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: QueryString.ToString()
  fullName: Microsoft.Owin.QueryString.ToString()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nProvides the query string escaped in a way which is correct for combining into the URI representation. \nA leading &apos;?&apos; character will be prepended unless the Value is null or empty. Characters which are potentially\ndangerous are escaped.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The query string value
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Microsoft.Owin.QueryString.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Owin.QueryString.ToUriComponent
  commentId: M:Microsoft.Owin.QueryString.ToUriComponent
  id: ToUriComponent
  parent: Microsoft.Owin.QueryString
  langs:
  - csharp
  - vb
  name: ToUriComponent()
  nameWithType: QueryString.ToUriComponent()
  fullName: Microsoft.Owin.QueryString.ToUriComponent()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nProvides the query string escaped in a way which is correct for combining into the URI representation. \nA leading &apos;?&apos; character will be prepended unless the Value is null or empty. Characters which are potentially\ndangerous are escaped.\n"
  syntax:
    content: public string ToUriComponent()
    return:
      type: System.String
      description: The query string value
    content.vb: Public Function ToUriComponent As String
  overload: Microsoft.Owin.QueryString.ToUriComponent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.QueryString.FromUriComponent(System.String)
  commentId: M:Microsoft.Owin.QueryString.FromUriComponent(System.String)
  id: FromUriComponent(System.String)
  parent: Microsoft.Owin.QueryString
  langs:
  - csharp
  - vb
  name: FromUriComponent(String)
  nameWithType: QueryString.FromUriComponent(String)
  fullName: Microsoft.Owin.QueryString.FromUriComponent(System.String)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nReturns an QueryString given the query as it is escaped in the URI format. The string MUST NOT contain any\nvalue that is not a query.\n"
  syntax:
    content: public static QueryString FromUriComponent(string uriComponent)
    parameters:
    - id: uriComponent
      type: System.String
      description: The escaped query as it appears in the URI format.
    return:
      type: Microsoft.Owin.QueryString
      description: The resulting QueryString
    content.vb: Public Shared Function FromUriComponent(uriComponent As String) As QueryString
  overload: Microsoft.Owin.QueryString.FromUriComponent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.QueryString.FromUriComponent(System.Uri)
  commentId: M:Microsoft.Owin.QueryString.FromUriComponent(System.Uri)
  id: FromUriComponent(System.Uri)
  parent: Microsoft.Owin.QueryString
  langs:
  - csharp
  - vb
  name: FromUriComponent(Uri)
  nameWithType: QueryString.FromUriComponent(Uri)
  fullName: Microsoft.Owin.QueryString.FromUriComponent(System.Uri)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nReturns an QueryString given the query as from a Uri object. Relative Uri objects are not supported.\n"
  syntax:
    content: public static QueryString FromUriComponent(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The Uri object
    return:
      type: Microsoft.Owin.QueryString
      description: The resulting QueryString
    content.vb: Public Shared Function FromUriComponent(uri As Uri) As QueryString
  overload: Microsoft.Owin.QueryString.FromUriComponent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.QueryString.Equals(Microsoft.Owin.QueryString)
  commentId: M:Microsoft.Owin.QueryString.Equals(Microsoft.Owin.QueryString)
  id: Equals(Microsoft.Owin.QueryString)
  parent: Microsoft.Owin.QueryString
  langs:
  - csharp
  - vb
  name: Equals(QueryString)
  nameWithType: QueryString.Equals(QueryString)
  fullName: Microsoft.Owin.QueryString.Equals(Microsoft.Owin.QueryString)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nIndicates whether the current instance is equal to the other instance.\n"
  syntax:
    content: public bool Equals(QueryString other)
    parameters:
    - id: other
      type: Microsoft.Owin.QueryString
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As QueryString) As Boolean
  overload: Microsoft.Owin.QueryString.Equals*
  implements:
  - System.IEquatable{Microsoft.Owin.QueryString}.Equals(Microsoft.Owin.QueryString)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Owin.QueryString.Equals(System.Object)
  commentId: M:Microsoft.Owin.QueryString.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.Owin.QueryString
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: QueryString.Equals(Object)
  fullName: Microsoft.Owin.QueryString.Equals(System.Object)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nIndicates whether the current instance is equal to the other instance.\n"
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Microsoft.Owin.QueryString.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Owin.QueryString.GetHashCode
  commentId: M:Microsoft.Owin.QueryString.GetHashCode
  id: GetHashCode
  parent: Microsoft.Owin.QueryString
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: QueryString.GetHashCode()
  fullName: Microsoft.Owin.QueryString.GetHashCode()
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nReturns the hash code for this instance.\n"
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Microsoft.Owin.QueryString.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Owin.QueryString.op_Equality(Microsoft.Owin.QueryString,Microsoft.Owin.QueryString)
  commentId: M:Microsoft.Owin.QueryString.op_Equality(Microsoft.Owin.QueryString,Microsoft.Owin.QueryString)
  id: op_Equality(Microsoft.Owin.QueryString,Microsoft.Owin.QueryString)
  parent: Microsoft.Owin.QueryString
  langs:
  - csharp
  - vb
  name: Equality(QueryString, QueryString)
  nameWithType: QueryString.Equality(QueryString, QueryString)
  fullName: Microsoft.Owin.QueryString.Equality(Microsoft.Owin.QueryString, Microsoft.Owin.QueryString)
  type: Operator
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nCompares the two instances for equality.\n"
  syntax:
    content: public static bool operator ==(QueryString left, QueryString right)
    parameters:
    - id: left
      type: Microsoft.Owin.QueryString
    - id: right
      type: Microsoft.Owin.QueryString
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As QueryString, right As QueryString) As Boolean
  overload: Microsoft.Owin.QueryString.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.QueryString.op_Inequality(Microsoft.Owin.QueryString,Microsoft.Owin.QueryString)
  commentId: M:Microsoft.Owin.QueryString.op_Inequality(Microsoft.Owin.QueryString,Microsoft.Owin.QueryString)
  id: op_Inequality(Microsoft.Owin.QueryString,Microsoft.Owin.QueryString)
  parent: Microsoft.Owin.QueryString
  langs:
  - csharp
  - vb
  name: Inequality(QueryString, QueryString)
  nameWithType: QueryString.Inequality(QueryString, QueryString)
  fullName: Microsoft.Owin.QueryString.Inequality(Microsoft.Owin.QueryString, Microsoft.Owin.QueryString)
  type: Operator
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nCompares the two instances for inequality.\n"
  syntax:
    content: public static bool operator !=(QueryString left, QueryString right)
    parameters:
    - id: left
      type: Microsoft.Owin.QueryString
    - id: right
      type: Microsoft.Owin.QueryString
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As QueryString, right As QueryString) As Boolean
  overload: Microsoft.Owin.QueryString.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Owin.QueryString.Value
  commentId: P:Microsoft.Owin.QueryString.Value
  id: Value
  parent: Microsoft.Owin.QueryString
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: QueryString.Value
  fullName: Microsoft.Owin.QueryString.Value
  type: Property
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nThe escaped query string without the leading &apos;?&apos; character\n"
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: Microsoft.Owin.QueryString.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Owin.QueryString.HasValue
  commentId: P:Microsoft.Owin.QueryString.HasValue
  id: HasValue
  parent: Microsoft.Owin.QueryString
  langs:
  - csharp
  - vb
  name: HasValue
  nameWithType: QueryString.HasValue
  fullName: Microsoft.Owin.QueryString.HasValue
  type: Property
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin
  summary: "\nTrue if the query string is not empty\n"
  syntax:
    content: public bool HasValue { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasValue As Boolean
  overload: Microsoft.Owin.QueryString.HasValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Owin
  commentId: N:Microsoft.Owin
  isExternal: false
  name: Microsoft.Owin
  nameWithType: Microsoft.Owin
  fullName: Microsoft.Owin
- uid: System.IEquatable{Microsoft.Owin.QueryString}
  commentId: T:System.IEquatable{Microsoft.Owin.QueryString}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<QueryString>
  nameWithType: IEquatable<QueryString>
  fullName: System.IEquatable<Microsoft.Owin.QueryString>
  nameWithType.vb: IEquatable(Of QueryString)
  fullName.vb: System.IEquatable(Of Microsoft.Owin.QueryString)
  name.vb: IEquatable(Of QueryString)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Owin.QueryString
    name: QueryString
    nameWithType: QueryString
    fullName: Microsoft.Owin.QueryString
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Owin.QueryString
    name: QueryString
    nameWithType: QueryString
    fullName: Microsoft.Owin.QueryString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Owin.QueryString
  commentId: T:Microsoft.Owin.QueryString
  parent: Microsoft.Owin
  isExternal: true
  name: QueryString
  nameWithType: QueryString
  fullName: Microsoft.Owin.QueryString
- uid: Microsoft.Owin.QueryString.#ctor*
  commentId: Overload:Microsoft.Owin.QueryString.#ctor
  isExternal: true
  name: QueryString
  nameWithType: QueryString.QueryString
  fullName: Microsoft.Owin.QueryString.QueryString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.QueryString.ToString*
  commentId: Overload:Microsoft.Owin.QueryString.ToString
  isExternal: true
  name: ToString
  nameWithType: QueryString.ToString
  fullName: Microsoft.Owin.QueryString.ToString
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: Microsoft.Owin.QueryString.ToUriComponent*
  commentId: Overload:Microsoft.Owin.QueryString.ToUriComponent
  isExternal: true
  name: ToUriComponent
  nameWithType: QueryString.ToUriComponent
  fullName: Microsoft.Owin.QueryString.ToUriComponent
- uid: Microsoft.Owin.QueryString.FromUriComponent*
  commentId: Overload:Microsoft.Owin.QueryString.FromUriComponent
  isExternal: true
  name: FromUriComponent
  nameWithType: QueryString.FromUriComponent
  fullName: Microsoft.Owin.QueryString.FromUriComponent
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Owin.QueryString.Equals*
  commentId: Overload:Microsoft.Owin.QueryString.Equals
  isExternal: true
  name: Equals
  nameWithType: QueryString.Equals
  fullName: Microsoft.Owin.QueryString.Equals
- uid: System.IEquatable{Microsoft.Owin.QueryString}.Equals(Microsoft.Owin.QueryString)
  commentId: M:System.IEquatable{Microsoft.Owin.QueryString}.Equals(Microsoft.Owin.QueryString)
  parent: System.IEquatable{Microsoft.Owin.QueryString}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(QueryString)
  nameWithType: IEquatable<QueryString>.Equals(QueryString)
  fullName: System.IEquatable<Microsoft.Owin.QueryString>.Equals(Microsoft.Owin.QueryString)
  nameWithType.vb: IEquatable(Of QueryString).Equals(QueryString)
  fullName.vb: System.IEquatable(Of Microsoft.Owin.QueryString).Equals(Microsoft.Owin.QueryString)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<QueryString>.Equals
    fullName: System.IEquatable<Microsoft.Owin.QueryString>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.QueryString
    name: QueryString
    nameWithType: QueryString
    fullName: Microsoft.Owin.QueryString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of QueryString).Equals
    fullName: System.IEquatable(Of Microsoft.Owin.QueryString).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.QueryString
    name: QueryString
    nameWithType: QueryString
    fullName: Microsoft.Owin.QueryString
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.QueryString.GetHashCode*
  commentId: Overload:Microsoft.Owin.QueryString.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: QueryString.GetHashCode
  fullName: Microsoft.Owin.QueryString.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Owin.QueryString.op_Equality*
  commentId: Overload:Microsoft.Owin.QueryString.op_Equality
  isExternal: true
  name: Equality
  nameWithType: QueryString.Equality
  fullName: Microsoft.Owin.QueryString.Equality
- uid: Microsoft.Owin.QueryString.op_Inequality*
  commentId: Overload:Microsoft.Owin.QueryString.op_Inequality
  isExternal: true
  name: Inequality
  nameWithType: QueryString.Inequality
  fullName: Microsoft.Owin.QueryString.Inequality
- uid: Microsoft.Owin.QueryString.Value*
  commentId: Overload:Microsoft.Owin.QueryString.Value
  isExternal: true
  name: Value
  nameWithType: QueryString.Value
  fullName: Microsoft.Owin.QueryString.Value
- uid: Microsoft.Owin.QueryString.HasValue*
  commentId: Overload:Microsoft.Owin.QueryString.HasValue
  isExternal: true
  name: HasValue
  nameWithType: QueryString.HasValue
  fullName: Microsoft.Owin.QueryString.HasValue
