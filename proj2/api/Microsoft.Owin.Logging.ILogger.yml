### YamlMime:ManagedReference
items:
- uid: Microsoft.Owin.Logging.ILogger
  commentId: T:Microsoft.Owin.Logging.ILogger
  id: ILogger
  parent: Microsoft.Owin.Logging
  children:
  - Microsoft.Owin.Logging.ILogger.WriteCore(System.Diagnostics.TraceEventType,System.Int32,System.Object,System.Exception,System.Func{System.Object,System.Exception,System.String})
  langs:
  - csharp
  - vb
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Owin.Logging.ILogger
  type: Interface
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.Logging
  summary: "\nA generic interface for logging.\n"
  syntax:
    content: public interface ILogger
    content.vb: Public Interface ILogger
  extensionMethods:
  - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(System.Diagnostics.TraceEventType)
  - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(System.String)
  - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(System.String)
  - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.String[])
  - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.Exception)
  - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String)
  - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String,System.Exception)
  - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String)
  - Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String,System.Exception)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Owin.Logging.ILogger.WriteCore(System.Diagnostics.TraceEventType,System.Int32,System.Object,System.Exception,System.Func{System.Object,System.Exception,System.String})
  commentId: M:Microsoft.Owin.Logging.ILogger.WriteCore(System.Diagnostics.TraceEventType,System.Int32,System.Object,System.Exception,System.Func{System.Object,System.Exception,System.String})
  id: WriteCore(System.Diagnostics.TraceEventType,System.Int32,System.Object,System.Exception,System.Func{System.Object,System.Exception,System.String})
  parent: Microsoft.Owin.Logging.ILogger
  langs:
  - csharp
  - vb
  name: WriteCore(TraceEventType, Int32, Object, Exception, Func<Object, Exception, String>)
  nameWithType: ILogger.WriteCore(TraceEventType, Int32, Object, Exception, Func<Object, Exception, String>)
  fullName: Microsoft.Owin.Logging.ILogger.WriteCore(System.Diagnostics.TraceEventType, System.Int32, System.Object, System.Exception, System.Func<System.Object, System.Exception, System.String>)
  type: Method
  source:
    path: Microsoft.Owin
    isExternal: true
  assemblies:
  - Microsoft.Owin
  namespace: Microsoft.Owin.Logging
  summary: "\nAggregates most logging patterns to a single method.  This must be compatible with the Func representation in the OWIN environment.\n\nTo check IsEnabled call WriteCore with only TraceEventType and check the return value, no event will be written.\n"
  syntax:
    content: bool WriteCore(TraceEventType eventType, int eventId, object state, Exception exception, Func<object, Exception, string> formatter)
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
    - id: eventId
      type: System.Int32
    - id: state
      type: System.Object
    - id: exception
      type: System.Exception
    - id: formatter
      type: System.Func{System.Object,System.Exception,System.String}
    return:
      type: System.Boolean
    content.vb: Function WriteCore(eventType As TraceEventType, eventId As Integer, state As Object, exception As Exception, formatter As Func(Of Object, Exception, String)) As Boolean
  overload: Microsoft.Owin.Logging.ILogger.WriteCore*
  nameWithType.vb: ILogger.WriteCore(TraceEventType, Int32, Object, Exception, Func(Of Object, Exception, String))
  fullName.vb: Microsoft.Owin.Logging.ILogger.WriteCore(System.Diagnostics.TraceEventType, System.Int32, System.Object, System.Exception, System.Func(Of System.Object, System.Exception, System.String))
  name.vb: WriteCore(TraceEventType, Int32, Object, Exception, Func(Of Object, Exception, String))
references:
- uid: Microsoft.Owin.Logging
  commentId: N:Microsoft.Owin.Logging
  isExternal: false
  name: Microsoft.Owin.Logging
  nameWithType: Microsoft.Owin.Logging
  fullName: Microsoft.Owin.Logging
- uid: Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(System.Diagnostics.TraceEventType)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger,System.Diagnostics.TraceEventType)
  parent: Microsoft.Owin.Logging.LoggerExtensions
  definition: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger,System.Diagnostics.TraceEventType)
  name: IsEnabled(TraceEventType)
  nameWithType: LoggerExtensions.IsEnabled(TraceEventType)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(System.Diagnostics.TraceEventType)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(System.Diagnostics.TraceEventType)
    name: IsEnabled
    nameWithType: LoggerExtensions.IsEnabled
    fullName: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.TraceEventType
    name: TraceEventType
    nameWithType: TraceEventType
    fullName: System.Diagnostics.TraceEventType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(System.Diagnostics.TraceEventType)
    name: IsEnabled
    nameWithType: LoggerExtensions.IsEnabled
    fullName: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.TraceEventType
    name: TraceEventType
    nameWithType: TraceEventType
    fullName: System.Diagnostics.TraceEventType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(System.String)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger,System.String)
  parent: Microsoft.Owin.Logging.LoggerExtensions
  definition: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger,System.String)
  name: WriteVerbose(String)
  nameWithType: LoggerExtensions.WriteVerbose(String)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(System.String)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(System.String)
    name: WriteVerbose
    nameWithType: LoggerExtensions.WriteVerbose
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(System.String)
    name: WriteVerbose
    nameWithType: LoggerExtensions.WriteVerbose
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(System.String)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger,System.String)
  parent: Microsoft.Owin.Logging.LoggerExtensions
  definition: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger,System.String)
  name: WriteInformation(String)
  nameWithType: LoggerExtensions.WriteInformation(String)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(System.String)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(System.String)
    name: WriteInformation
    nameWithType: LoggerExtensions.WriteInformation
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(System.String)
    name: WriteInformation
    nameWithType: LoggerExtensions.WriteInformation
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.String[])
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.String[])
  parent: Microsoft.Owin.Logging.LoggerExtensions
  definition: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.String[])
  name: WriteWarning(String, String[])
  nameWithType: LoggerExtensions.WriteWarning(String, String[])
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String, System.String[])
  nameWithType.vb: LoggerExtensions.WriteWarning(String, String())
  fullName.vb: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String, System.String())
  name.vb: WriteWarning(String, String())
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.String[])
    name: WriteWarning
    nameWithType: LoggerExtensions.WriteWarning
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.String[])
    name: WriteWarning
    nameWithType: LoggerExtensions.WriteWarning
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.Exception)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  parent: Microsoft.Owin.Logging.LoggerExtensions
  definition: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  name: WriteWarning(String, Exception)
  nameWithType: LoggerExtensions.WriteWarning(String, Exception)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String, System.Exception)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.Exception)
    name: WriteWarning
    nameWithType: LoggerExtensions.WriteWarning
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(System.String,System.Exception)
    name: WriteWarning
    nameWithType: LoggerExtensions.WriteWarning
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String)
  parent: Microsoft.Owin.Logging.LoggerExtensions
  definition: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String)
  name: WriteError(String)
  nameWithType: LoggerExtensions.WriteError(String)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String)
    name: WriteError
    nameWithType: LoggerExtensions.WriteError
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String)
    name: WriteError
    nameWithType: LoggerExtensions.WriteError
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String,System.Exception)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  parent: Microsoft.Owin.Logging.LoggerExtensions
  definition: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  name: WriteError(String, Exception)
  nameWithType: LoggerExtensions.WriteError(String, Exception)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String, System.Exception)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String,System.Exception)
    name: WriteError
    nameWithType: LoggerExtensions.WriteError
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteError(System.String,System.Exception)
    name: WriteError
    nameWithType: LoggerExtensions.WriteError
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String)
  parent: Microsoft.Owin.Logging.LoggerExtensions
  definition: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String)
  name: WriteCritical(String)
  nameWithType: LoggerExtensions.WriteCritical(String)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String)
    name: WriteCritical
    nameWithType: LoggerExtensions.WriteCritical
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String)
    name: WriteCritical
    nameWithType: LoggerExtensions.WriteCritical
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.ILogger.Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String,System.Exception)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  parent: Microsoft.Owin.Logging.LoggerExtensions
  definition: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  name: WriteCritical(String, Exception)
  nameWithType: LoggerExtensions.WriteCritical(String, Exception)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String, System.Exception)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String,System.Exception)
    name: WriteCritical
    nameWithType: LoggerExtensions.WriteCritical
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(System.String,System.Exception)
    name: WriteCritical
    nameWithType: LoggerExtensions.WriteCritical
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger,System.Diagnostics.TraceEventType)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger,System.Diagnostics.TraceEventType)
  isExternal: true
  name: IsEnabled(ILogger, TraceEventType)
  nameWithType: LoggerExtensions.IsEnabled(ILogger, TraceEventType)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger, System.Diagnostics.TraceEventType)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger,System.Diagnostics.TraceEventType)
    name: IsEnabled
    nameWithType: LoggerExtensions.IsEnabled
    fullName: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceEventType
    name: TraceEventType
    nameWithType: TraceEventType
    fullName: System.Diagnostics.TraceEventType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled(Microsoft.Owin.Logging.ILogger,System.Diagnostics.TraceEventType)
    name: IsEnabled
    nameWithType: LoggerExtensions.IsEnabled
    fullName: Microsoft.Owin.Logging.LoggerExtensions.IsEnabled
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceEventType
    name: TraceEventType
    nameWithType: TraceEventType
    fullName: System.Diagnostics.TraceEventType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.LoggerExtensions
  commentId: T:Microsoft.Owin.Logging.LoggerExtensions
  parent: Microsoft.Owin.Logging
  isExternal: true
  name: LoggerExtensions
  nameWithType: LoggerExtensions
  fullName: Microsoft.Owin.Logging.LoggerExtensions
- uid: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger,System.String)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger,System.String)
  isExternal: true
  name: WriteVerbose(ILogger, String)
  nameWithType: LoggerExtensions.WriteVerbose(ILogger, String)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger, System.String)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger,System.String)
    name: WriteVerbose
    nameWithType: LoggerExtensions.WriteVerbose
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose(Microsoft.Owin.Logging.ILogger,System.String)
    name: WriteVerbose
    nameWithType: LoggerExtensions.WriteVerbose
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteVerbose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger,System.String)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger,System.String)
  isExternal: true
  name: WriteInformation(ILogger, String)
  nameWithType: LoggerExtensions.WriteInformation(ILogger, String)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger, System.String)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger,System.String)
    name: WriteInformation
    nameWithType: LoggerExtensions.WriteInformation
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation(Microsoft.Owin.Logging.ILogger,System.String)
    name: WriteInformation
    nameWithType: LoggerExtensions.WriteInformation
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.String[])
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.String[])
  isExternal: true
  name: WriteWarning(ILogger, String, String[])
  nameWithType: LoggerExtensions.WriteWarning(ILogger, String, String[])
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger, System.String, System.String[])
  nameWithType.vb: LoggerExtensions.WriteWarning(ILogger, String, String())
  fullName.vb: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger, System.String, System.String())
  name.vb: WriteWarning(ILogger, String, String())
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.String[])
    name: WriteWarning
    nameWithType: LoggerExtensions.WriteWarning
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.String[])
    name: WriteWarning
    nameWithType: LoggerExtensions.WriteWarning
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  isExternal: true
  name: WriteWarning(ILogger, String, Exception)
  nameWithType: LoggerExtensions.WriteWarning(ILogger, String, Exception)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger, System.String, System.Exception)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
    name: WriteWarning
    nameWithType: LoggerExtensions.WriteWarning
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
    name: WriteWarning
    nameWithType: LoggerExtensions.WriteWarning
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteWarning
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String)
  isExternal: true
  name: WriteError(ILogger, String)
  nameWithType: LoggerExtensions.WriteError(ILogger, String)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger, System.String)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String)
    name: WriteError
    nameWithType: LoggerExtensions.WriteError
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String)
    name: WriteError
    nameWithType: LoggerExtensions.WriteError
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  isExternal: true
  name: WriteError(ILogger, String, Exception)
  nameWithType: LoggerExtensions.WriteError(ILogger, String, Exception)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger, System.String, System.Exception)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
    name: WriteError
    nameWithType: LoggerExtensions.WriteError
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteError(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
    name: WriteError
    nameWithType: LoggerExtensions.WriteError
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String)
  isExternal: true
  name: WriteCritical(ILogger, String)
  nameWithType: LoggerExtensions.WriteCritical(ILogger, String)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger, System.String)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String)
    name: WriteCritical
    nameWithType: LoggerExtensions.WriteCritical
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String)
    name: WriteCritical
    nameWithType: LoggerExtensions.WriteCritical
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  commentId: M:Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
  isExternal: true
  name: WriteCritical(ILogger, String, Exception)
  nameWithType: LoggerExtensions.WriteCritical(ILogger, String, Exception)
  fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger, System.String, System.Exception)
  spec.csharp:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
    name: WriteCritical
    nameWithType: LoggerExtensions.WriteCritical
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical(Microsoft.Owin.Logging.ILogger,System.String,System.Exception)
    name: WriteCritical
    nameWithType: LoggerExtensions.WriteCritical
    fullName: Microsoft.Owin.Logging.LoggerExtensions.WriteCritical
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Owin.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Owin.Logging.ILogger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.Logging.ILogger.WriteCore*
  commentId: Overload:Microsoft.Owin.Logging.ILogger.WriteCore
  isExternal: true
  name: WriteCore
  nameWithType: ILogger.WriteCore
  fullName: Microsoft.Owin.Logging.ILogger.WriteCore
- uid: System.Diagnostics.TraceEventType
  isExternal: true
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Func{System.Object,System.Exception,System.String}
  commentId: T:System.Func{System.Object,System.Exception,System.String}
  parent: System
  definition: System.Func`3
  name: Func<Object, Exception, String>
  nameWithType: Func<Object, Exception, String>
  fullName: System.Func<System.Object, System.Exception, System.String>
  nameWithType.vb: Func(Of Object, Exception, String)
  fullName.vb: System.Func(Of System.Object, System.Exception, System.String)
  name.vb: Func(Of Object, Exception, String)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
